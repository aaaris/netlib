{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nexports.getSourceAndMap = function (inputSource, options) {\n  var code = \"\";\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(options);\n\n  var _inputSource$streamCh = inputSource.streamChunks(Object.assign({}, options, {\n    finalSource: true\n  }), function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n    if (chunk !== undefined) code += chunk;\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, function (sourceIndex, source, sourceContent) {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n\n    sources[sourceIndex] = source;\n\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, function (nameIndex, name) {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n\n    names[nameIndex] = name;\n  }),\n      source = _inputSource$streamCh.source;\n\n  return {\n    source: source !== undefined ? source : code,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings: mappings,\n      sources: sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names: names\n    } : null\n  };\n};\n\nexports.getMap = function (source, options) {\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(options);\n  source.streamChunks(Object.assign({}, options, {\n    source: false,\n    finalSource: true\n  }), function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, function (sourceIndex, source, sourceContent) {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n\n    sources[sourceIndex] = source;\n\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n  }, function (nameIndex, name) {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n\n    names[nameIndex] = name;\n  });\n  return mappings.length > 0 ? {\n    version: 3,\n    file: \"x\",\n    mappings: mappings,\n    sources: sources,\n    sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n    names: names\n  } : null;\n};","map":{"version":3,"names":["createMappingsSerializer","require","exports","getSourceAndMap","inputSource","options","code","mappings","sources","sourcesContent","names","addMapping","streamChunks","Object","assign","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","source","sourceContent","length","push","name","map","version","file","getMap"],"sources":["D:/Work/Project/LMS/lms/node_modules/webpack-sources/lib/helpers/getFromStreamChunks.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nexports.getSourceAndMap = (inputSource, options) => {\n\tlet code = \"\";\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tconst { source } = inputSource.streamChunks(\n\t\tObject.assign({}, options, { finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tif (chunk !== undefined) code += chunk;\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn {\n\t\tsource: source !== undefined ? source : code,\n\t\tmap:\n\t\t\tmappings.length > 0\n\t\t\t\t? {\n\t\t\t\t\t\tversion: 3,\n\t\t\t\t\t\tfile: \"x\",\n\t\t\t\t\t\tmappings,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t\tsourcesContent:\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\t\t\tnames\n\t\t\t\t  }\n\t\t\t\t: null\n\t};\n};\n\nexports.getMap = (source, options) => {\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(options);\n\tsource.streamChunks(\n\t\tObject.assign({}, options, { source: false, finalSource: true }),\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t}\n\t);\n\treturn mappings.length > 0\n\t\t? {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: \"x\",\n\t\t\t\tmappings,\n\t\t\t\tsources,\n\t\t\t\tsourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\tnames\n\t\t  }\n\t\t: null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}