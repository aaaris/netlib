{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport Vue from \"vue\";\nimport Router from \"vue-router\";\nimport Login from \"./components/user/Login.vue\";\nimport Regist from \"./components/user/Regist.vue\";\nimport Home from \"./components/Home.vue\";\nimport Index from \"./components/index/Index.vue\";\nimport store from \"./store/store\";\nVue.use(Router);\nvar routes = [{\n  path: \"/index\",\n  component: Index,\n  // redirect: \"/index/profile\",\n  // 路由嵌套\n  children: [],\n  meta: {\n    requireAuth: true,\n    roles: [\"admin\", \"user\"]\n  }\n}, {\n  path: \"/\",\n  redirect: \"/home\"\n}, {\n  path: \"/login\",\n  component: Login,\n  meta: {\n    requireAuth: false,\n    roles: [\"admin\", \"user\"]\n  }\n}, {\n  path: \"/regist\",\n  component: Regist,\n  meta: {\n    requireAuth: false,\n    roles: [\"admin\", \"user\"]\n  }\n}, {\n  path: \"/home\",\n  component: Home,\n  meta: {\n    requireAuth: false,\n    roles: [\"admin\", \"user\"]\n  }\n}];\nvar router = new Router({\n  mode: \"history\",\n  base: process.env.BASE_URL,\n  routes: routes\n});\nvar oRoutes = router.options.routes; // 生成动态路由\n\nvar buildRouter = function buildRouter() {\n  var data = store.state.menu_data;\n  data.forEach(function (item) {\n    item.child.forEach(function (child) {\n      var new_router = {\n        path: child.path,\n        component: function component() {\n          return import(\"./components\" + child.componentPath);\n        }\n      };\n      oRoutes[0].children.push(new_router);\n    });\n  });\n  router.addRoutes(oRoutes);\n};\n\nrouter.beforeEach(function (to, from, next) {\n  // 判断路由是否已经加载过\n  var isLoadRoute = store.state.isLoadRoute;\n\n  if (!isLoadRoute) {\n    // axios.get(\"/menuList\").then((res) => {\n    //   store.commit(\"setMeunData\", res.data, menu_data);\n    // });\n    var menu_data = [{\n      name: \"USER\",\n      icon: \"el-icon-user\",\n      child: [{\n        name: \"个人信息\",\n        icon: \"el-icon-document\",\n        path: \"/index/profile\",\n        componentPath: \"/index/user/Profile.vue\"\n      }, {\n        name: \"我的收藏\",\n        icon: \"el-icon-collection\",\n        path: \"/index/collection\",\n        componentPath: \"/index/user/Collection.vue\"\n      }, {\n        name: \"我的分享\",\n        icon: \"el-icon-share\",\n        path: \"/index/share\",\n        componentPath: \"/index/user/Share.vue\"\n      }]\n    }, {\n      name: \"MORE\",\n      icon: \"el-icon-more\",\n      child: [{\n        name: \"联系我们\",\n        icon: \"el-icon-chat-dot-square\",\n        path: \"/index/contact\",\n        componentPath: \"/index/more/Contact.vue\"\n      }, {\n        name: \"小程序服务\",\n        icon: \"el-icon-mobile\",\n        path: \"/index/more\",\n        componentPath: \"/index/more/Contact.vue\"\n      }]\n    }]; // 获取用户角色\n\n    var user_level = store.getters.getUserLevel; // 如果用户为管理员则添加数据后台\n\n    if (user_level == 1) {\n      menu_data.splice(1, 0, {\n        name: \"DATA&TABLE\",\n        icon: \"el-icon-s-data\",\n        child: [{\n          name: \"用户管理\",\n          icon: \"el-icon-user-solid\",\n          path: \"/index/userManager\",\n          componentPath: \"/index/manager/UserManager.vue\"\n        }, {\n          name: \"书本管理\",\n          icon: \"el-icon-reading\",\n          path: \"/index/bookManager\",\n          componentPath: \"/index/manager/BookManager.vue\"\n        }]\n      });\n    }\n\n    store.commit(\"setMeunData\", menu_data); // 生成动态路由\n\n    buildRouter(); // 设置已经加载过的标记\n\n    store.commit(\"setLoadRoute\", true);\n  }\n\n  if (to.matched.some(function (m) {\n    return m.meta.requireAuth;\n  })) {\n    // 需要登录\n    if (window.localStorage.token && window.localStorage.isLogin === \"1\") {\n      next();\n    } else if (to.path !== \"/login\") {\n      var token = window.localStorage.token;\n\n      if (token === \"null\" || token === \"\" || token === undefined) {\n        next({\n          path: \"/login\"\n        });\n        Vue.prototype.$message({\n          message: \"检测到您还未登录,请登录后操作！\",\n          type: \"error\",\n          duration: 1500\n        });\n      } else {\n        next();\n      }\n    } else {\n      next();\n    }\n  } else {\n    // 不需要登陆\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","Router","Login","Regist","Home","Index","store","use","routes","path","component","children","meta","requireAuth","roles","redirect","router","mode","base","process","env","BASE_URL","oRoutes","options","buildRouter","data","state","menu_data","forEach","item","child","new_router","componentPath","push","addRoutes","beforeEach","to","from","next","isLoadRoute","name","icon","user_level","getters","getUserLevel","splice","commit","matched","some","m","window","localStorage","token","isLogin","undefined","prototype","$message","message","type","duration"],"sources":["D:/Work/Project/LMS/lms/src/router.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport Router from \"vue-router\";\r\nimport Login from \"./components/user/Login.vue\";\r\nimport Regist from \"./components/user/Regist.vue\";\r\nimport Home from \"./components/Home.vue\";\r\nimport Index from \"./components/index/Index.vue\";\r\nimport store from \"./store/store\";\r\n\r\nVue.use(Router);\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/index\",\r\n    component: Index,\r\n    // redirect: \"/index/profile\",\r\n    // 路由嵌套\r\n    children: [],\r\n    meta: { requireAuth: true, roles: [\"admin\", \"user\"] },\r\n  },\r\n  {\r\n    path: \"/\",\r\n    redirect: \"/home\",\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    component: Login,\r\n    meta: { requireAuth: false, roles: [\"admin\", \"user\"] },\r\n  },\r\n  {\r\n    path: \"/regist\",\r\n    component: Regist,\r\n    meta: { requireAuth: false, roles: [\"admin\", \"user\"] },\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    component: Home,\r\n    meta: { requireAuth: false, roles: [\"admin\", \"user\"] },\r\n  },\r\n];\r\n\r\nconst router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes,\r\n});\r\n\r\nlet oRoutes = router.options.routes;\r\n\r\n// 生成动态路由\r\nconst buildRouter = () => {\r\n  let data = store.state.menu_data;\r\n  data.forEach((item) => {\r\n    item.child.forEach((child) => {\r\n      let new_router = {\r\n        path: child.path,\r\n        component: () => import(\"./components\" + child.componentPath),\r\n      };\r\n      oRoutes[0].children.push(new_router);\r\n    });\r\n  });\r\n  router.addRoutes(oRoutes);\r\n};\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  // 判断路由是否已经加载过\r\n  let isLoadRoute = store.state.isLoadRoute;\r\n  if (!isLoadRoute) {\r\n    // axios.get(\"/menuList\").then((res) => {\r\n    //   store.commit(\"setMeunData\", res.data, menu_data);\r\n    // });\r\n    const menu_data = [\r\n      {\r\n        name: \"USER\",\r\n        icon: \"el-icon-user\",\r\n        child: [\r\n          {\r\n            name: \"个人信息\",\r\n            icon: \"el-icon-document\",\r\n            path: \"/index/profile\",\r\n            componentPath: \"/index/user/Profile.vue\",\r\n          },\r\n          {\r\n            name: \"我的收藏\",\r\n            icon: \"el-icon-collection\",\r\n            path: \"/index/collection\",\r\n            componentPath: \"/index/user/Collection.vue\",\r\n          },\r\n          {\r\n            name: \"我的分享\",\r\n            icon: \"el-icon-share\",\r\n            path: \"/index/share\",\r\n            componentPath: \"/index/user/Share.vue\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        name: \"MORE\",\r\n        icon: \"el-icon-more\",\r\n        child: [\r\n          {\r\n            name: \"联系我们\",\r\n            icon: \"el-icon-chat-dot-square\",\r\n            path: \"/index/contact\",\r\n            componentPath: \"/index/more/Contact.vue\",\r\n          },\r\n          {\r\n            name: \"小程序服务\",\r\n            icon: \"el-icon-mobile\",\r\n            path: \"/index/more\",\r\n            componentPath: \"/index/more/Contact.vue\",\r\n          },\r\n        ],\r\n      },\r\n    ];\r\n    // 获取用户角色\r\n    let user_level = store.getters.getUserLevel;\r\n    // 如果用户为管理员则添加数据后台\r\n    if (user_level == 1) {\r\n      menu_data.splice(1, 0, {\r\n        name: \"DATA&TABLE\",\r\n        icon: \"el-icon-s-data\",\r\n        child: [\r\n          {\r\n            name: \"用户管理\",\r\n            icon: \"el-icon-user-solid\",\r\n            path: \"/index/userManager\",\r\n            componentPath: \"/index/manager/UserManager.vue\",\r\n          },\r\n          {\r\n            name: \"书本管理\",\r\n            icon: \"el-icon-reading\",\r\n            path: \"/index/bookManager\",\r\n            componentPath: \"/index/manager/BookManager.vue\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    store.commit(\"setMeunData\", menu_data);\r\n    // 生成动态路由\r\n    buildRouter();\r\n    // 设置已经加载过的标记\r\n    store.commit(\"setLoadRoute\", true);\r\n  }\r\n  if (to.matched.some((m) => m.meta.requireAuth)) {\r\n    // 需要登录\r\n    if (window.localStorage.token && window.localStorage.isLogin === \"1\") {\r\n      next();\r\n    } else if (to.path !== \"/login\") {\r\n      let token = window.localStorage.token;\r\n      if (token === \"null\" || token === \"\" || token === undefined) {\r\n        next({ path: \"/login\" });\r\n        Vue.prototype.$message({\r\n          message: \"检测到您还未登录,请登录后操作！\",\r\n          type: \"error\",\r\n          duration: 1500,\r\n        });\r\n      } else {\r\n        next();\r\n      }\r\n    } else {\r\n      next();\r\n    }\r\n  } else {\r\n    // 不需要登陆\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEAN,GAAG,CAACO,GAAJ,CAAQN,MAAR;AAEA,IAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QADR;EAEEC,SAAS,EAAEL,KAFb;EAGE;EACA;EACAM,QAAQ,EAAE,EALZ;EAMEC,IAAI,EAAE;IAAEC,WAAW,EAAE,IAAf;IAAqBC,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV;EAA5B;AANR,CADa,EASb;EACEL,IAAI,EAAE,GADR;EAEEM,QAAQ,EAAE;AAFZ,CATa,EAab;EACEN,IAAI,EAAE,QADR;EAEEC,SAAS,EAAER,KAFb;EAGEU,IAAI,EAAE;IAAEC,WAAW,EAAE,KAAf;IAAsBC,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV;EAA7B;AAHR,CAba,EAkBb;EACEL,IAAI,EAAE,SADR;EAEEC,SAAS,EAAEP,MAFb;EAGES,IAAI,EAAE;IAAEC,WAAW,EAAE,KAAf;IAAsBC,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV;EAA7B;AAHR,CAlBa,EAuBb;EACEL,IAAI,EAAE,OADR;EAEEC,SAAS,EAAEN,IAFb;EAGEQ,IAAI,EAAE;IAAEC,WAAW,EAAE,KAAf;IAAsBC,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV;EAA7B;AAHR,CAvBa,CAAf;AA8BA,IAAME,MAAM,GAAG,IAAIf,MAAJ,CAAW;EACxBgB,IAAI,EAAE,SADkB;EAExBC,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;EAGxBb,MAAM,EAANA;AAHwB,CAAX,CAAf;AAMA,IAAIc,OAAO,GAAGN,MAAM,CAACO,OAAP,CAAef,MAA7B,C,CAEA;;AACA,IAAMgB,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxB,IAAIC,IAAI,GAAGnB,KAAK,CAACoB,KAAN,CAAYC,SAAvB;EACAF,IAAI,CAACG,OAAL,CAAa,UAACC,IAAD,EAAU;IACrBA,IAAI,CAACC,KAAL,CAAWF,OAAX,CAAmB,UAACE,KAAD,EAAW;MAC5B,IAAIC,UAAU,GAAG;QACftB,IAAI,EAAEqB,KAAK,CAACrB,IADG;QAEfC,SAAS,EAAE;UAAA,OAAM,OAAO,iBAAiBoB,KAAK,CAACE,aAA9B,CAAN;QAAA;MAFI,CAAjB;MAIAV,OAAO,CAAC,CAAD,CAAP,CAAWX,QAAX,CAAoBsB,IAApB,CAAyBF,UAAzB;IACD,CAND;EAOD,CARD;EASAf,MAAM,CAACkB,SAAP,CAAiBZ,OAAjB;AACD,CAZD;;AAcAN,MAAM,CAACmB,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;EACpC;EACA,IAAIC,WAAW,GAAGjC,KAAK,CAACoB,KAAN,CAAYa,WAA9B;;EACA,IAAI,CAACA,WAAL,EAAkB;IAChB;IACA;IACA;IACA,IAAMZ,SAAS,GAAG,CAChB;MACEa,IAAI,EAAE,MADR;MAEEC,IAAI,EAAE,cAFR;MAGEX,KAAK,EAAE,CACL;QACEU,IAAI,EAAE,MADR;QAEEC,IAAI,EAAE,kBAFR;QAGEhC,IAAI,EAAE,gBAHR;QAIEuB,aAAa,EAAE;MAJjB,CADK,EAOL;QACEQ,IAAI,EAAE,MADR;QAEEC,IAAI,EAAE,oBAFR;QAGEhC,IAAI,EAAE,mBAHR;QAIEuB,aAAa,EAAE;MAJjB,CAPK,EAaL;QACEQ,IAAI,EAAE,MADR;QAEEC,IAAI,EAAE,eAFR;QAGEhC,IAAI,EAAE,cAHR;QAIEuB,aAAa,EAAE;MAJjB,CAbK;IAHT,CADgB,EAyBhB;MACEQ,IAAI,EAAE,MADR;MAEEC,IAAI,EAAE,cAFR;MAGEX,KAAK,EAAE,CACL;QACEU,IAAI,EAAE,MADR;QAEEC,IAAI,EAAE,yBAFR;QAGEhC,IAAI,EAAE,gBAHR;QAIEuB,aAAa,EAAE;MAJjB,CADK,EAOL;QACEQ,IAAI,EAAE,OADR;QAEEC,IAAI,EAAE,gBAFR;QAGEhC,IAAI,EAAE,aAHR;QAIEuB,aAAa,EAAE;MAJjB,CAPK;IAHT,CAzBgB,CAAlB,CAJgB,CAgDhB;;IACA,IAAIU,UAAU,GAAGpC,KAAK,CAACqC,OAAN,CAAcC,YAA/B,CAjDgB,CAkDhB;;IACA,IAAIF,UAAU,IAAI,CAAlB,EAAqB;MACnBf,SAAS,CAACkB,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuB;QACrBL,IAAI,EAAE,YADe;QAErBC,IAAI,EAAE,gBAFe;QAGrBX,KAAK,EAAE,CACL;UACEU,IAAI,EAAE,MADR;UAEEC,IAAI,EAAE,oBAFR;UAGEhC,IAAI,EAAE,oBAHR;UAIEuB,aAAa,EAAE;QAJjB,CADK,EAOL;UACEQ,IAAI,EAAE,MADR;UAEEC,IAAI,EAAE,iBAFR;UAGEhC,IAAI,EAAE,oBAHR;UAIEuB,aAAa,EAAE;QAJjB,CAPK;MAHc,CAAvB;IAkBD;;IACD1B,KAAK,CAACwC,MAAN,CAAa,aAAb,EAA4BnB,SAA5B,EAvEgB,CAwEhB;;IACAH,WAAW,GAzEK,CA0EhB;;IACAlB,KAAK,CAACwC,MAAN,CAAa,cAAb,EAA6B,IAA7B;EACD;;EACD,IAAIV,EAAE,CAACW,OAAH,CAAWC,IAAX,CAAgB,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACrC,IAAF,CAAOC,WAAd;EAAA,CAAhB,CAAJ,EAAgD;IAC9C;IACA,IAAIqC,MAAM,CAACC,YAAP,CAAoBC,KAApB,IAA6BF,MAAM,CAACC,YAAP,CAAoBE,OAApB,KAAgC,GAAjE,EAAsE;MACpEf,IAAI;IACL,CAFD,MAEO,IAAIF,EAAE,CAAC3B,IAAH,KAAY,QAAhB,EAA0B;MAC/B,IAAI2C,KAAK,GAAGF,MAAM,CAACC,YAAP,CAAoBC,KAAhC;;MACA,IAAIA,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,EAA9B,IAAoCA,KAAK,KAAKE,SAAlD,EAA6D;QAC3DhB,IAAI,CAAC;UAAE7B,IAAI,EAAE;QAAR,CAAD,CAAJ;QACAT,GAAG,CAACuD,SAAJ,CAAcC,QAAd,CAAuB;UACrBC,OAAO,EAAE,kBADY;UAErBC,IAAI,EAAE,OAFe;UAGrBC,QAAQ,EAAE;QAHW,CAAvB;MAKD,CAPD,MAOO;QACLrB,IAAI;MACL;IACF,CAZM,MAYA;MACLA,IAAI;IACL;EACF,CAnBD,MAmBO;IACL;IACAA,IAAI;EACL;AACF,CAvGD;AAyGA,eAAetB,MAAf"},"metadata":{},"sourceType":"module"}