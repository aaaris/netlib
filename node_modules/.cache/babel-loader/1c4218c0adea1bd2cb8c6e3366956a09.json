{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nmodule.exports = /*#__PURE__*/function () {\n  function LogInfoPlugin(source) {\n    _classCallCheck(this, LogInfoPlugin);\n\n    this.source = source;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(LogInfoPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var source = this.source;\n      resolver.getHook(this.source).tapAsync(\"LogInfoPlugin\", function (request, resolveContext, callback) {\n        if (!resolveContext.log) return callback();\n        var log = resolveContext.log;\n        var prefix = \"[\" + source + \"] \";\n        if (request.path) log(prefix + \"Resolving in directory: \" + request.path);\n        if (request.request) log(prefix + \"Resolving request: \" + request.request);\n        if (request.module) log(prefix + \"Request is an module request.\");\n        if (request.directory) log(prefix + \"Request is a directory request.\");\n        if (request.query) log(prefix + \"Resolving request query: \" + request.query);\n        if (request.fragment) log(prefix + \"Resolving request fragment: \" + request.fragment);\n        if (request.descriptionFilePath) log(prefix + \"Has description data from \" + request.descriptionFilePath);\n        if (request.relativePath) log(prefix + \"Relative path from description file is: \" + request.relativePath);\n        callback();\n      });\n    }\n  }]);\n\n  return LogInfoPlugin;\n}();","map":{"version":3,"names":["module","exports","source","resolver","getHook","tapAsync","request","resolveContext","callback","log","prefix","path","directory","query","fragment","descriptionFilePath","relativePath"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/LogInfoPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n\nmodule.exports = class LogInfoPlugin {\n\tconstructor(source) {\n\t\tthis.source = source;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst source = this.source;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"LogInfoPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!resolveContext.log) return callback();\n\t\t\t\tconst log = resolveContext.log;\n\t\t\t\tconst prefix = \"[\" + source + \"] \";\n\t\t\t\tif (request.path)\n\t\t\t\t\tlog(prefix + \"Resolving in directory: \" + request.path);\n\t\t\t\tif (request.request)\n\t\t\t\t\tlog(prefix + \"Resolving request: \" + request.request);\n\t\t\t\tif (request.module) log(prefix + \"Request is an module request.\");\n\t\t\t\tif (request.directory) log(prefix + \"Request is a directory request.\");\n\t\t\t\tif (request.query)\n\t\t\t\t\tlog(prefix + \"Resolving request query: \" + request.query);\n\t\t\t\tif (request.fragment)\n\t\t\t\t\tlog(prefix + \"Resolving request fragment: \" + request.fragment);\n\t\t\t\tif (request.descriptionFilePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix + \"Has description data from \" + request.descriptionFilePath\n\t\t\t\t\t);\n\t\t\t\tif (request.relativePath)\n\t\t\t\t\tlog(\n\t\t\t\t\t\tprefix +\n\t\t\t\t\t\t\t\"Relative path from description file is: \" +\n\t\t\t\t\t\t\trequest.relativePath\n\t\t\t\t\t);\n\t\t\t\tcallback();\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;;;;;AAEAA,MAAM,CAACC,OAAP;EACC,uBAAYC,MAAZ,EAAoB;IAAA;;IACnB,KAAKA,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EARA;IAAA;IAAA,OASC,eAAMC,QAAN,EAAgB;MACf,IAAMD,MAAM,GAAG,KAAKA,MAApB;MACAC,QAAQ,CACNC,OADF,CACU,KAAKF,MADf,EAEEG,QAFF,CAEW,eAFX,EAE4B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;QACjE,IAAI,CAACD,cAAc,CAACE,GAApB,EAAyB,OAAOD,QAAQ,EAAf;QACzB,IAAMC,GAAG,GAAGF,cAAc,CAACE,GAA3B;QACA,IAAMC,MAAM,GAAG,MAAMR,MAAN,GAAe,IAA9B;QACA,IAAII,OAAO,CAACK,IAAZ,EACCF,GAAG,CAACC,MAAM,GAAG,0BAAT,GAAsCJ,OAAO,CAACK,IAA/C,CAAH;QACD,IAAIL,OAAO,CAACA,OAAZ,EACCG,GAAG,CAACC,MAAM,GAAG,qBAAT,GAAiCJ,OAAO,CAACA,OAA1C,CAAH;QACD,IAAIA,OAAO,CAACN,MAAZ,EAAoBS,GAAG,CAACC,MAAM,GAAG,+BAAV,CAAH;QACpB,IAAIJ,OAAO,CAACM,SAAZ,EAAuBH,GAAG,CAACC,MAAM,GAAG,iCAAV,CAAH;QACvB,IAAIJ,OAAO,CAACO,KAAZ,EACCJ,GAAG,CAACC,MAAM,GAAG,2BAAT,GAAuCJ,OAAO,CAACO,KAAhD,CAAH;QACD,IAAIP,OAAO,CAACQ,QAAZ,EACCL,GAAG,CAACC,MAAM,GAAG,8BAAT,GAA0CJ,OAAO,CAACQ,QAAnD,CAAH;QACD,IAAIR,OAAO,CAACS,mBAAZ,EACCN,GAAG,CACFC,MAAM,GAAG,4BAAT,GAAwCJ,OAAO,CAACS,mBAD9C,CAAH;QAGD,IAAIT,OAAO,CAACU,YAAZ,EACCP,GAAG,CACFC,MAAM,GACL,0CADD,GAECJ,OAAO,CAACU,YAHP,CAAH;QAKDR,QAAQ;MACR,CA3BF;IA4BA;EAvCF;;EAAA;AAAA"},"metadata":{},"sourceType":"script"}