{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nvar _typeof = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.array.is-array.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.string.substr.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nvar versions = require(\"process\").versions;\n\nvar Resolver = require(\"./Resolver\");\n\nvar _require = require(\"./util/path\"),\n    getType = _require.getType,\n    PathType = _require.PathType;\n\nvar SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nvar AliasFieldPlugin = require(\"./AliasFieldPlugin\");\n\nvar AliasPlugin = require(\"./AliasPlugin\");\n\nvar AppendPlugin = require(\"./AppendPlugin\");\n\nvar ConditionalPlugin = require(\"./ConditionalPlugin\");\n\nvar DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\n\nvar DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\n\nvar ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\n\nvar FileExistsPlugin = require(\"./FileExistsPlugin\");\n\nvar ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\n\nvar JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\n\nvar JoinRequestPlugin = require(\"./JoinRequestPlugin\");\n\nvar MainFieldPlugin = require(\"./MainFieldPlugin\");\n\nvar ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\n\nvar ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\n\nvar NextPlugin = require(\"./NextPlugin\");\n\nvar ParsePlugin = require(\"./ParsePlugin\");\n\nvar PnpPlugin = require(\"./PnpPlugin\");\n\nvar RestrictionsPlugin = require(\"./RestrictionsPlugin\");\n\nvar ResultPlugin = require(\"./ResultPlugin\");\n\nvar RootsPlugin = require(\"./RootsPlugin\");\n\nvar SelfReferencePlugin = require(\"./SelfReferencePlugin\");\n\nvar SymlinkPlugin = require(\"./SymlinkPlugin\");\n\nvar TryNextPlugin = require(\"./TryNextPlugin\");\n\nvar UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\n\nvar UseFilePlugin = require(\"./UseFilePlugin\");\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\n\n\nfunction processPnpApiOption(option) {\n  if (option === undefined &&\n  /** @type {NodeJS.ProcessVersions & {pnp: string}} */\n  versions.pnp) {\n    // @ts-ignore\n    return require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n  }\n\n  return option || null;\n}\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\n\n\nfunction normalizeAlias(alias) {\n  return _typeof(alias) === \"object\" && !Array.isArray(alias) && alias !== null ? Object.keys(alias).map(function (key) {\n    /** @type {AliasOptionEntry} */\n    var obj = {\n      name: key,\n      onlyModule: false,\n      alias: alias[key]\n    };\n\n    if (/\\$$/.test(key)) {\n      obj.onlyModule = true;\n      obj.name = key.substr(0, key.length - 1);\n    }\n\n    return obj;\n  }) :\n  /** @type {Array<AliasOptionEntry>} */\n  alias || [];\n}\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\n\n\nfunction createOptions(options) {\n  var mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n  var mainFields = [];\n\n  var _iterator = _createForOfIteratorHelper(mainFieldsSet),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n\n      if (typeof item === \"string\") {\n        mainFields.push({\n          name: [item],\n          forceRelative: true\n        });\n      } else if (Array.isArray(item)) {\n        mainFields.push({\n          name: item,\n          forceRelative: true\n        });\n      } else {\n        mainFields.push({\n          name: Array.isArray(item.name) ? item.name : [item.name],\n          forceRelative: item.forceRelative\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return {\n    alias: normalizeAlias(options.alias),\n    fallback: normalizeAlias(options.fallback),\n    aliasFields: new Set(options.aliasFields),\n    cachePredicate: options.cachePredicate || function () {\n      return true;\n    },\n    cacheWithContext: typeof options.cacheWithContext !== \"undefined\" ? options.cacheWithContext : true,\n    exportsFields: new Set(options.exportsFields || [\"exports\"]),\n    importsFields: new Set(options.importsFields || [\"imports\"]),\n    conditionNames: new Set(options.conditionNames),\n    descriptionFiles: Array.from(new Set(options.descriptionFiles || [\"package.json\"])),\n    enforceExtension: options.enforceExtension === undefined ? options.extensions && options.extensions.includes(\"\") ? true : false : options.enforceExtension,\n    extensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n    fileSystem: options.useSyncFileSystemCalls ? new SyncAsyncFileSystemDecorator(\n    /** @type {SyncFileSystem} */\n\n    /** @type {unknown} */\n    options.fileSystem) : options.fileSystem,\n    unsafeCache: options.unsafeCache && _typeof(options.unsafeCache) !== \"object\" ? {} : options.unsafeCache || false,\n    symlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n    resolver: options.resolver,\n    modules: mergeFilteredToArray(Array.isArray(options.modules) ? options.modules : options.modules ? [options.modules] : [\"node_modules\"], function (item) {\n      var type = getType(item);\n      return type === PathType.Normal || type === PathType.Relative;\n    }),\n    mainFields: mainFields,\n    mainFiles: new Set(options.mainFiles || [\"index\"]),\n    plugins: options.plugins || [],\n    pnpApi: processPnpApiOption(options.pnpApi),\n    roots: new Set(options.roots || undefined),\n    fullySpecified: options.fullySpecified || false,\n    resolveToContext: options.resolveToContext || false,\n    preferRelative: options.preferRelative || false,\n    preferAbsolute: options.preferAbsolute || false,\n    restrictions: new Set(options.restrictions)\n  };\n}\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\n\n\nexports.createResolver = function (options) {\n  var normalizedOptions = createOptions(options);\n  var alias = normalizedOptions.alias,\n      fallback = normalizedOptions.fallback,\n      aliasFields = normalizedOptions.aliasFields,\n      cachePredicate = normalizedOptions.cachePredicate,\n      cacheWithContext = normalizedOptions.cacheWithContext,\n      conditionNames = normalizedOptions.conditionNames,\n      descriptionFiles = normalizedOptions.descriptionFiles,\n      enforceExtension = normalizedOptions.enforceExtension,\n      exportsFields = normalizedOptions.exportsFields,\n      importsFields = normalizedOptions.importsFields,\n      extensions = normalizedOptions.extensions,\n      fileSystem = normalizedOptions.fileSystem,\n      fullySpecified = normalizedOptions.fullySpecified,\n      mainFields = normalizedOptions.mainFields,\n      mainFiles = normalizedOptions.mainFiles,\n      modules = normalizedOptions.modules,\n      userPlugins = normalizedOptions.plugins,\n      pnpApi = normalizedOptions.pnpApi,\n      resolveToContext = normalizedOptions.resolveToContext,\n      preferRelative = normalizedOptions.preferRelative,\n      preferAbsolute = normalizedOptions.preferAbsolute,\n      symlinks = normalizedOptions.symlinks,\n      unsafeCache = normalizedOptions.unsafeCache,\n      customResolver = normalizedOptions.resolver,\n      restrictions = normalizedOptions.restrictions,\n      roots = normalizedOptions.roots;\n  var plugins = userPlugins.slice();\n  var resolver = customResolver ? customResolver : new Resolver(fileSystem, normalizedOptions); //// pipeline ////\n\n  resolver.ensureHook(\"resolve\");\n  resolver.ensureHook(\"internalResolve\");\n  resolver.ensureHook(\"newInternalResolve\");\n  resolver.ensureHook(\"parsedResolve\");\n  resolver.ensureHook(\"describedResolve\");\n  resolver.ensureHook(\"internal\");\n  resolver.ensureHook(\"rawModule\");\n  resolver.ensureHook(\"module\");\n  resolver.ensureHook(\"resolveAsModule\");\n  resolver.ensureHook(\"undescribedResolveInPackage\");\n  resolver.ensureHook(\"resolveInPackage\");\n  resolver.ensureHook(\"resolveInExistingDirectory\");\n  resolver.ensureHook(\"relative\");\n  resolver.ensureHook(\"describedRelative\");\n  resolver.ensureHook(\"directory\");\n  resolver.ensureHook(\"undescribedExistingDirectory\");\n  resolver.ensureHook(\"existingDirectory\");\n  resolver.ensureHook(\"undescribedRawFile\");\n  resolver.ensureHook(\"rawFile\");\n  resolver.ensureHook(\"file\");\n  resolver.ensureHook(\"finalFile\");\n  resolver.ensureHook(\"existingFile\");\n  resolver.ensureHook(\"resolved\"); // TODO remove in next major\n  // cspell:word Interal\n  // Backward-compat\n\n  resolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve; // resolve\n\n  for (var _i = 0, _arr = [{\n    source: \"resolve\",\n    resolveOptions: {\n      fullySpecified: fullySpecified\n    }\n  }, {\n    source: \"internal-resolve\",\n    resolveOptions: {\n      fullySpecified: false\n    }\n  }]; _i < _arr.length; _i++) {\n    var _arr$_i = _arr[_i],\n        source = _arr$_i.source,\n        resolveOptions = _arr$_i.resolveOptions;\n\n    if (unsafeCache) {\n      plugins.push(new UnsafeCachePlugin(source, cachePredicate, unsafeCache, cacheWithContext, \"new-\".concat(source)));\n      plugins.push(new ParsePlugin(\"new-\".concat(source), resolveOptions, \"parsed-resolve\"));\n    } else {\n      plugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n    }\n  } // parsed-resolve\n\n\n  plugins.push(new DescriptionFilePlugin(\"parsed-resolve\", descriptionFiles, false, \"described-resolve\"));\n  plugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\")); // described-resolve\n\n  plugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\n\n  if (fallback.length > 0) {\n    plugins.push(new AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\"));\n  } // normal-resolve\n\n\n  if (alias.length > 0) plugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\n  aliasFields.forEach(function (item) {\n    plugins.push(new AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\"));\n  });\n\n  if (preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    module: true\n  }, \"resolve as module\", false, \"raw-module\"));\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    internal: true\n  }, \"resolve as internal import\", false, \"internal\"));\n\n  if (preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  if (roots.size > 0) {\n    plugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n  }\n\n  if (!preferRelative && !preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  } // internal\n\n\n  importsFields.forEach(function (importsField) {\n    plugins.push(new ImportsFieldPlugin(\"internal\", conditionNames, importsField, \"relative\", \"internal-resolve\"));\n  }); // raw-module\n\n  exportsFields.forEach(function (exportsField) {\n    plugins.push(new SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\"));\n  });\n  modules.forEach(function (item) {\n    if (Array.isArray(item)) {\n      if (item.includes(\"node_modules\") && pnpApi) {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item.filter(function (i) {\n          return i !== \"node_modules\";\n        }), \"module\"));\n        plugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\"));\n      } else {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item, \"module\"));\n      }\n    } else {\n      plugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n    }\n  }); // module\n\n  plugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\")); // resolve-as-module\n\n  if (!resolveToContext) {\n    plugins.push(new ConditionalPlugin(\"resolve-as-module\", {\n      directory: false,\n      request: \".\"\n    }, \"single file module\", true, \"undescribed-raw-file\"));\n  }\n\n  plugins.push(new DirectoryExistsPlugin(\"resolve-as-module\", \"undescribed-resolve-in-package\")); // undescribed-resolve-in-package\n\n  plugins.push(new DescriptionFilePlugin(\"undescribed-resolve-in-package\", descriptionFiles, false, \"resolve-in-package\"));\n  plugins.push(new NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")); // resolve-in-package\n\n  exportsFields.forEach(function (exportsField) {\n    plugins.push(new ExportsFieldPlugin(\"resolve-in-package\", conditionNames, exportsField, \"relative\"));\n  });\n  plugins.push(new NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")); // resolve-in-existing-directory\n\n  plugins.push(new JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")); // relative\n\n  plugins.push(new DescriptionFilePlugin(\"relative\", descriptionFiles, true, \"described-relative\"));\n  plugins.push(new NextPlugin(\"after-relative\", \"described-relative\")); // described-relative\n\n  if (resolveToContext) {\n    plugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n  } else {\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      directory: false\n    }, null, true, \"raw-file\"));\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      fullySpecified: false\n    }, \"as directory\", true, \"directory\"));\n  } // directory\n\n\n  plugins.push(new DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\"));\n\n  if (resolveToContext) {\n    // undescribed-existing-directory\n    plugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n  } else {\n    // undescribed-existing-directory\n    plugins.push(new DescriptionFilePlugin(\"undescribed-existing-directory\", descriptionFiles, false, \"existing-directory\"));\n    mainFiles.forEach(function (item) {\n      plugins.push(new UseFilePlugin(\"undescribed-existing-directory\", item, \"undescribed-raw-file\"));\n    }); // described-existing-directory\n\n    mainFields.forEach(function (item) {\n      plugins.push(new MainFieldPlugin(\"existing-directory\", item, \"resolve-in-existing-directory\"));\n    });\n    mainFiles.forEach(function (item) {\n      plugins.push(new UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\"));\n    }); // undescribed-raw-file\n\n    plugins.push(new DescriptionFilePlugin(\"undescribed-raw-file\", descriptionFiles, true, \"raw-file\"));\n    plugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\")); // raw-file\n\n    plugins.push(new ConditionalPlugin(\"raw-file\", {\n      fullySpecified: true\n    }, null, false, \"file\"));\n\n    if (!enforceExtension) {\n      plugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n    }\n\n    extensions.forEach(function (item) {\n      plugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n    }); // file\n\n    if (alias.length > 0) plugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n    aliasFields.forEach(function (item) {\n      plugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n    });\n    plugins.push(new NextPlugin(\"file\", \"final-file\")); // final-file\n\n    plugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\")); // existing-file\n\n    if (symlinks) plugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n    plugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n  } // resolved\n\n\n  if (restrictions.size > 0) {\n    plugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n  }\n\n  plugins.push(new ResultPlugin(resolver.hooks.resolved)); //// RESOLVER ////\n\n  var _iterator2 = _createForOfIteratorHelper(plugins),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var plugin = _step2.value;\n\n      if (typeof plugin === \"function\") {\n        plugin.call(resolver, resolver);\n      } else {\n        plugin.apply(resolver);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return resolver;\n};\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\n\n\nfunction mergeFilteredToArray(array, filter) {\n  /** @type {Array<string | string[]>} */\n  var result = [];\n  var set = new Set(array);\n\n  var _iterator3 = _createForOfIteratorHelper(set),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var item = _step3.value;\n\n      if (filter(item)) {\n        var lastElement = result.length > 0 ? result[result.length - 1] : undefined;\n\n        if (Array.isArray(lastElement)) {\n          lastElement.push(item);\n        } else {\n          result.push([item]);\n        }\n      } else {\n        result.push(item);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return result;\n}","map":{"version":3,"names":["versions","require","Resolver","getType","PathType","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierarchicalDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","processPnpApiOption","option","undefined","pnp","normalizeAlias","alias","Array","isArray","Object","keys","map","key","obj","name","onlyModule","test","substr","length","createOptions","options","mainFieldsSet","Set","mainFields","item","push","forceRelative","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","conditionNames","descriptionFiles","from","enforceExtension","extensions","includes","fileSystem","useSyncFileSystemCalls","unsafeCache","symlinks","resolver","modules","mergeFilteredToArray","type","Normal","Relative","mainFiles","plugins","pnpApi","roots","fullySpecified","resolveToContext","preferRelative","preferAbsolute","restrictions","exports","createResolver","normalizedOptions","userPlugins","customResolver","slice","ensureHook","hooks","newInteralResolve","newInternalResolve","source","resolveOptions","forEach","module","internal","size","importsField","exportsField","filter","i","directory","request","resolved","plugin","call","apply","array","result","set","lastElement"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/ResolverFactory.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst versions = require(\"process\").versions;\nconst Resolver = require(\"./Resolver\");\nconst { getType, PathType } = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n\tif (\n\t\toption === undefined &&\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ versions.pnp\n\t) {\n\t\t// @ts-ignore\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n\t}\n\n\treturn option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\n\t\t? Object.keys(alias).map(key => {\n\t\t\t\t/** @type {AliasOptionEntry} */\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\n\n\t\t\t\tif (/\\$$/.test(key)) {\n\t\t\t\t\tobj.onlyModule = true;\n\t\t\t\t\tobj.name = key.substr(0, key.length - 1);\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t  })\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n\tconst mainFields = [];\n\n\tfor (const item of mainFieldsSet) {\n\t\tif (typeof item === \"string\") {\n\t\t\tmainFields.push({\n\t\t\t\tname: [item],\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else if (Array.isArray(item)) {\n\t\t\tmainFields.push({\n\t\t\t\tname: item,\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else {\n\t\t\tmainFields.push({\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\n\t\t\t\tforceRelative: item.forceRelative\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\talias: normalizeAlias(options.alias),\n\t\tfallback: normalizeAlias(options.fallback),\n\t\taliasFields: new Set(options.aliasFields),\n\t\tcachePredicate:\n\t\t\toptions.cachePredicate ||\n\t\t\tfunction () {\n\t\t\t\treturn true;\n\t\t\t},\n\t\tcacheWithContext:\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\n\t\t\t\t? options.cacheWithContext\n\t\t\t\t: true,\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\n\t\tconditionNames: new Set(options.conditionNames),\n\t\tdescriptionFiles: Array.from(\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\n\t\t),\n\t\tenforceExtension:\n\t\t\toptions.enforceExtension === undefined\n\t\t\t\t? options.extensions && options.extensions.includes(\"\")\n\t\t\t\t\t? true\n\t\t\t\t\t: false\n\t\t\t\t: options.enforceExtension,\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n\t\tfileSystem: options.useSyncFileSystemCalls\n\t\t\t? new SyncAsyncFileSystemDecorator(\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: options.fileSystem,\n\t\tunsafeCache:\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\n\t\t\t\t? {}\n\t\t\t\t: options.unsafeCache || false,\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n\t\tresolver: options.resolver,\n\t\tmodules: mergeFilteredToArray(\n\t\t\tArray.isArray(options.modules)\n\t\t\t\t? options.modules\n\t\t\t\t: options.modules\n\t\t\t\t? [options.modules]\n\t\t\t\t: [\"node_modules\"],\n\t\t\titem => {\n\t\t\t\tconst type = getType(item);\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\n\t\t\t}\n\t\t),\n\t\tmainFields,\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\n\t\tplugins: options.plugins || [],\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\n\t\troots: new Set(options.roots || undefined),\n\t\tfullySpecified: options.fullySpecified || false,\n\t\tresolveToContext: options.resolveToContext || false,\n\t\tpreferRelative: options.preferRelative || false,\n\t\tpreferAbsolute: options.preferAbsolute || false,\n\t\trestrictions: new Set(options.restrictions)\n\t};\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n\tconst normalizedOptions = createOptions(options);\n\n\tconst {\n\t\talias,\n\t\tfallback,\n\t\taliasFields,\n\t\tcachePredicate,\n\t\tcacheWithContext,\n\t\tconditionNames,\n\t\tdescriptionFiles,\n\t\tenforceExtension,\n\t\texportsFields,\n\t\timportsFields,\n\t\textensions,\n\t\tfileSystem,\n\t\tfullySpecified,\n\t\tmainFields,\n\t\tmainFiles,\n\t\tmodules,\n\t\tplugins: userPlugins,\n\t\tpnpApi,\n\t\tresolveToContext,\n\t\tpreferRelative,\n\t\tpreferAbsolute,\n\t\tsymlinks,\n\t\tunsafeCache,\n\t\tresolver: customResolver,\n\t\trestrictions,\n\t\troots\n\t} = normalizedOptions;\n\n\tconst plugins = userPlugins.slice();\n\n\tconst resolver = customResolver\n\t\t? customResolver\n\t\t: new Resolver(fileSystem, normalizedOptions);\n\n\t//// pipeline ////\n\n\tresolver.ensureHook(\"resolve\");\n\tresolver.ensureHook(\"internalResolve\");\n\tresolver.ensureHook(\"newInternalResolve\");\n\tresolver.ensureHook(\"parsedResolve\");\n\tresolver.ensureHook(\"describedResolve\");\n\tresolver.ensureHook(\"internal\");\n\tresolver.ensureHook(\"rawModule\");\n\tresolver.ensureHook(\"module\");\n\tresolver.ensureHook(\"resolveAsModule\");\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\n\tresolver.ensureHook(\"resolveInPackage\");\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\n\tresolver.ensureHook(\"relative\");\n\tresolver.ensureHook(\"describedRelative\");\n\tresolver.ensureHook(\"directory\");\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\n\tresolver.ensureHook(\"existingDirectory\");\n\tresolver.ensureHook(\"undescribedRawFile\");\n\tresolver.ensureHook(\"rawFile\");\n\tresolver.ensureHook(\"file\");\n\tresolver.ensureHook(\"finalFile\");\n\tresolver.ensureHook(\"existingFile\");\n\tresolver.ensureHook(\"resolved\");\n\n\t// TODO remove in next major\n\t// cspell:word Interal\n\t// Backward-compat\n\tresolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\n\n\t// resolve\n\tfor (const { source, resolveOptions } of [\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\n\t]) {\n\t\tif (unsafeCache) {\n\t\t\tplugins.push(\n\t\t\t\tnew UnsafeCachePlugin(\n\t\t\t\t\tsource,\n\t\t\t\t\tcachePredicate,\n\t\t\t\t\tunsafeCache,\n\t\t\t\t\tcacheWithContext,\n\t\t\t\t\t`new-${source}`\n\t\t\t\t)\n\t\t\t);\n\t\t\tplugins.push(\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\n\t\t\t);\n\t\t} else {\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n\t\t}\n\t}\n\n\t// parsed-resolve\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"parsed-resolve\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"described-resolve\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n\t// described-resolve\n\tplugins.push(new NextPlugin(\"described-resolve\", \"normal-resolve\"));\n\tif (fallback.length > 0) {\n\t\tplugins.push(\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\n\t\t);\n\t}\n\n\t// normal-resolve\n\tif (alias.length > 0)\n\t\tplugins.push(new AliasPlugin(\"normal-resolve\", alias, \"internal-resolve\"));\n\taliasFields.forEach(item => {\n\t\tplugins.push(\n\t\t\tnew AliasFieldPlugin(\"normal-resolve\", item, \"internal-resolve\")\n\t\t);\n\t});\n\tif (preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ module: true },\n\t\t\t\"resolve as module\",\n\t\t\tfalse,\n\t\t\t\"raw-module\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ internal: true },\n\t\t\t\"resolve as internal import\",\n\t\t\tfalse,\n\t\t\t\"internal\"\n\t\t)\n\t);\n\tif (preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tif (roots.size > 0) {\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n\t}\n\tif (!preferRelative && !preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\n\t// internal\n\timportsFields.forEach(importsField => {\n\t\tplugins.push(\n\t\t\tnew ImportsFieldPlugin(\n\t\t\t\t\"internal\",\n\t\t\t\tconditionNames,\n\t\t\t\timportsField,\n\t\t\t\t\"relative\",\n\t\t\t\t\"internal-resolve\"\n\t\t\t)\n\t\t);\n\t});\n\n\t// raw-module\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\n\t\t);\n\t});\n\tmodules.forEach(item => {\n\t\tif (Array.isArray(item)) {\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem.filter(i => i !== \"node_modules\"),\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem,\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n\t\t}\n\t});\n\n\t// module\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n\t// resolve-as-module\n\tif (!resolveToContext) {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"resolve-as-module\",\n\t\t\t\t{ directory: false, request: \".\" },\n\t\t\t\t\"single file module\",\n\t\t\t\ttrue,\n\t\t\t\t\"undescribed-raw-file\"\n\t\t\t)\n\t\t);\n\t}\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\n\t\t\t\"resolve-as-module\",\n\t\t\t\"undescribed-resolve-in-package\"\n\t\t)\n\t);\n\n\t// undescribed-resolve-in-package\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"undescribed-resolve-in-package\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"resolve-in-package\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\n\t);\n\n\t// resolve-in-package\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew ExportsFieldPlugin(\n\t\t\t\t\"resolve-in-package\",\n\t\t\t\tconditionNames,\n\t\t\t\texportsField,\n\t\t\t\t\"relative\"\n\t\t\t)\n\t\t);\n\t});\n\tplugins.push(\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\n\t);\n\n\t// resolve-in-existing-directory\n\tplugins.push(\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\n\t);\n\n\t// relative\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"relative\",\n\t\t\tdescriptionFiles,\n\t\t\ttrue,\n\t\t\t\"described-relative\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n\t// described-relative\n\tif (resolveToContext) {\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n\t} else {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ directory: false },\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ fullySpecified: false },\n\t\t\t\t\"as directory\",\n\t\t\t\ttrue,\n\t\t\t\t\"directory\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// directory\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\n\t);\n\n\tif (resolveToContext) {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n\t} else {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\tfalse,\n\t\t\t\t\"existing-directory\"\n\t\t\t)\n\t\t);\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\n\t\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"undescribed-raw-file\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\t// described-existing-directory\n\t\tmainFields.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew MainFieldPlugin(\n\t\t\t\t\t\"existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"resolve-in-existing-directory\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\n\t\t\t);\n\t\t});\n\n\t\t// undescribed-raw-file\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-raw-file\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n\t\t// raw-file\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"raw-file\",\n\t\t\t\t{ fullySpecified: true },\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\t\"file\"\n\t\t\t)\n\t\t);\n\t\tif (!enforceExtension) {\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n\t\t}\n\t\textensions.forEach(item => {\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n\t\t});\n\n\t\t// file\n\t\tif (alias.length > 0)\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n\t\taliasFields.forEach(item => {\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n\t\t});\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n\t\t// final-file\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n\t\t// existing-file\n\t\tif (symlinks)\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n\t}\n\n\t// resolved\n\tif (restrictions.size > 0) {\n\t\tplugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n\t}\n\tplugins.push(new ResultPlugin(resolver.hooks.resolved));\n\n\t//// RESOLVER ////\n\n\tfor (const plugin of plugins) {\n\t\tif (typeof plugin === \"function\") {\n\t\t\tplugin.call(resolver, resolver);\n\t\t} else {\n\t\t\tplugin.apply(resolver);\n\t\t}\n\t}\n\n\treturn resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n\t/** @type {Array<string | string[]>} */\n\tconst result = [];\n\tconst set = new Set(array);\n\n\tfor (const item of set) {\n\t\tif (filter(item)) {\n\t\t\tconst lastElement =\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\n\t\t\tif (Array.isArray(lastElement)) {\n\t\t\t\tlastElement.push(item);\n\t\t\t} else {\n\t\t\t\tresult.push([item]);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\treturn result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}