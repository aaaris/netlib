{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Footer from \"./Footer.vue\";\nimport Header from \"./Header.vue\";\nexport default {\n  components: {\n    Footer: Footer,\n    Header: Header\n  },\n  data: function data() {\n    return {\n      // 查询建议\n      suggestionArray: [],\n      searchText: \"\",\n      // 查询排行榜表单数据\n      tableData: [],\n      //编辑界面数据\n      curEditIndex: 0,\n      editDialogFormVisible: false,\n      editDialogForm: {}\n    };\n  },\n  // async created() {\n  //   // 从后端api初始化tableData\n  //   const { data: res } = await this.$http.get(\"/book\");\n  //   this.tableData = res.data;  \n  //     this.$store.state.userinfo = res.data;\n  //   }\n  // }, \n  methods: {\n    // 获取搜索建议\n    querySearch: function querySearch(queryString, cb) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http({\n                  method: \"get\",\n                  url: \"/book/suggestion?queryKey=\" + (_this.select != \"\" ? _this.select : \"book_name\") + \"&queryVal=\" + queryString\n                });\n\n              case 2:\n                _yield$_this$$http = _context.sent;\n                res = _yield$_this$$http.data;\n                // 调用callback返回建议的数据\n                cb(res.data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 寻找书本\n    searchBookItem: function searchBookItem() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(_this2.select === \"\")) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error(\"请选择搜索类别\"));\n\n              case 4:\n                if (!(_this2.searchText === \"\")) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _this2.$message.error(\"请输入搜索内容\"));\n\n              case 6:\n                _context2.next = 8;\n                return _this2.$http({\n                  method: \"get\",\n                  url: \"/book\" + \"?\" + _this2.select + \"=\" + _this2.searchText\n                });\n\n              case 8:\n                _yield$_this2$$http = _context2.sent;\n                res = _yield$_this2$$http.data;\n\n                if (res.code === 200) {\n                  _this2.tableData = res.data;\n\n                  _this2.$message.success(\"搜索成功\");\n                } else {\n                  _this2.$message.error(\"搜索失败\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 下载书本\n    downloadBookItem: function downloadBookItem(index, row) {\n      // 检验用户登录\n      if (this.$store.getters.getToken === null) {\n        return this.$message.error(\"请先登录！\");\n      }\n\n      var downloadURL = row.book_img_url;\n      row.book_dl_count++;\n      window.open(downloadURL, \"_blank\");\n    },\n    // 编辑书本信息\n    editBookItem: function editBookItem(index, row) {\n      // 检验用户登录\n      if (this.$store.getters.getToken === null) {\n        return this.$message.error(\"请先登录！\");\n      } // 获取表单信息，弹出编辑对话框\n\n\n      this.curEditIndex = index;\n      this.editDialogFormVisible = true;\n      this.editDialogForm = Object.assign({}, row);\n    },\n    // 编辑对话框对话表单提交\n    editDialogFormSubmit: function editDialogFormSubmit() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$_this3$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this3.$http({\n                  method: \"put\",\n                  url: \"/book/\" + _this3.editDialogForm.book_id + \"?access_token=\" + _this3.$store.getters.getToken,\n                  data: _this3.editDialogForm\n                });\n\n              case 2:\n                _yield$_this3$$http = _context3.sent;\n                res = _yield$_this3$$http.data;\n\n                _this3.takeData.splice(_this3.curEditIndex, 1, res.data); // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\n                // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\n\n\n                _this3.editDialogFormVisible = false;\n\n                _this3.$message.success(\"修改成功\");\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    // 收藏书本按钮事件\n    takeBookItem: function takeBookItem(index, row) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(_this4.$store.getters.getToken === null)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _this4.$message.error(\"请先登录！\"));\n\n              case 2:\n                _context4.next = 4;\n                return _this4.$http({\n                  method: \"post\",\n                  url: \"/collection?access_token=\" + _this4.$store.getters.getToken,\n                  data: {\n                    user_id: Number(_this4.$store.userinfo.user_id),\n                    book_id: row.book_id\n                  }\n                });\n\n              case 4:\n                _yield$_this4$$http = _context4.sent;\n                res = _yield$_this4$$http.data;\n\n                if (res.code === 200) {\n                  _this4.$message.success(\"收藏成功\");\n                } else {\n                  _this4.$message(\"已收藏\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;EACAA;IAAAC;IAAAC;EAAA,CADA;EAEAC,IAFA,kBAEA;IACA;MACA;MACAC,mBAFA;MAGAC,cAHA;MAIA;MACAC,aALA;MAMA;MACAC,eAPA;MAQAC,4BARA;MASAC;IATA;EAWA,CAdA;EAeA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC;IACA;IACAC,WAFA,uBAEAC,WAFA,EAEAC,EAFA,EAEA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAGA;kBACAC,aADA;kBAEAC,KACA,gCACA,+CADA,IAEA,YAFA,GAGAH;gBANA,EAHA;;cAAA;gBAAA;gBAGAI,GAHA,sBAGAb,IAHA;gBAWA;gBACAU;;cAZA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA,CAfA;IAiBA;IACAI,cAlBA,4BAkBA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,MACA,oBADA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAEA,gCAFA;;cAAA;gBAAA,MAGA,wBAHA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAIA,gCAJA;;cAAA;gBAAA;gBAAA,OAMA;kBACAH,aADA;kBAEAC;gBAFA,EANA;;cAAA;gBAAA;gBAMAC,GANA,uBAMAb,IANA;;gBAUA;kBACA;;kBACA;gBACA,CAHA,MAGA;kBACA;gBACA;;cAfA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBA,CAlCA;IAmCA;IACAe,gBApCA,4BAoCAC,KApCA,EAoCAC,GApCA,EAoCA;MACA;MACA;QACA;MACA;;MACA;MACAA;MACAC;IACA,CA5CA;IA6CA;IACAC,YA9CA,wBA8CAH,KA9CA,EA8CAC,GA9CA,EA8CA;MACA;MACA;QACA;MACA,CAJA,CAKA;;;MACA;MACA;MACA;IACA,CAvDA;IAwDA;IACAG,oBAzDA,kCAyDA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEA;kBACAT,aADA;kBAEAC,KACA,WACA,6BADA,GAEA,gBAFA,GAGA,8BANA;kBAOAZ;gBAPA,EAFA;;cAAA;gBAAA;gBAEAa,GAFA,uBAEAb,IAFA;;gBAWA,yDAXA,CAYA;gBACA;;;gBACA;;gBACA;;cAfA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBA,CAzEA;IA0EA;IACAqB,YA3EA,wBA2EAL,KA3EA,EA2EAC,GA3EA,EA2EA;MAAA;;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA,MAEA,uCAFA;kBAAA;kBAAA;gBAAA;;gBAAA,kCAGA,8BAHA;;cAAA;gBAAA;gBAAA,OAMA;kBACAN,cADA;kBAEAC,iEAFA;kBAGAZ;oBACAsB,+CADA;oBAEAC;kBAFA;gBAHA,EANA;;cAAA;gBAAA;gBAMAV,GANA,uBAMAb,IANA;;gBAcA;kBACA;gBACA,CAFA,MAEA;kBACA;gBACA;;cAlBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAmBA;EA9FA;AAtBA","names":["components","Footer","Header","data","suggestionArray","searchText","tableData","curEditIndex","editDialogFormVisible","editDialogForm","methods","querySearch","queryString","cb","method","url","res","searchBookItem","downloadBookItem","index","row","window","editBookItem","editDialogFormSubmit","takeBookItem","user_id","book_id"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-body\">\r\n    <!-- 头部 -->\r\n    <Header></Header>\r\n    <!-- 书本显示主体 -->\r\n    <el-container class=\"main-container\">\r\n      <!-- logo -->\r\n      <el-header class=\"logo-container\" height=\"100px\">\r\n        <a href=\"javascript:;\"><img src=\"../../public/logo.png\" alt=\"\" /> </a>\r\n      </el-header>\r\n      <!-- 搜索框 -->\r\n      <el-autocomplete\r\n        placeholder=\"搜索书本类型，名称，出版社，描述\"\r\n        v-model=\"searchText\"\r\n        class=\"input-with-select\"\r\n        :fetch-suggestions=\"querySearch\"\r\n        :trigger-on-focus=\"false\"\r\n        @select=\"handleSelect\"\r\n      >\r\n        <template slot-scope=\"{ item }\">\r\n          {{ item }}\r\n        </template>\r\n        <el-button\r\n          type=\"primer\"\r\n          slot=\"append\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"searchBookItem\"\r\n        ></el-button>\r\n      </el-autocomplete>\r\n      <!-- 显示书本部分 -->\r\n      <el-main>\r\n        <div class=\"divider\">\r\n          <h1>&nbsp;&nbsp;&nbsp;最受欢迎的</h1>\r\n          <el-divider></el-divider>\r\n        </div>\r\n        <!-- 书本信息表格 -->\r\n        <!-- 信息部分 --> \r\n      </el-main>\r\n    </el-container>\r\n    <Footer></Footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Footer from \"./Footer.vue\";\r\nimport Header from \"./Header.vue\";\r\nexport default {\r\n  components: { Footer, Header },\r\n  data() {\r\n    return {\r\n      // 查询建议\r\n      suggestionArray: [],\r\n      searchText: \"\",\r\n      // 查询排行榜表单数据\r\n      tableData: [],\r\n      //编辑界面数据\r\n      curEditIndex: 0,\r\n      editDialogFormVisible: false,\r\n      editDialogForm: {},\r\n    };\r\n  },\r\n  // async created() {\r\n  //   // 从后端api初始化tableData\r\n  //   const { data: res } = await this.$http.get(\"/book\");\r\n  //   this.tableData = res.data;  \r\n  //     this.$store.state.userinfo = res.data;\r\n  //   }\r\n  // }, \r\n  methods: { \r\n    // 获取搜索建议\r\n    async querySearch(queryString, cb) {\r\n      // console.log(str)\r\n      // 发送后台请求获取搜索建议\r\n      const { data: res } = await this.$http({\r\n        method: \"get\",\r\n        url:\r\n          \"/book/suggestion?queryKey=\" +\r\n          (this.select != \"\" ? this.select : \"book_name\") +\r\n          \"&queryVal=\" +\r\n          queryString,\r\n      }); \r\n      // 调用callback返回建议的数据\r\n      cb(res.data);\r\n    },\r\n\r\n    // 寻找书本\r\n    async searchBookItem() {\r\n      if (this.select === \"\") {\r\n        return this.$message.error(\"请选择搜索类别\");\r\n      } else if (this.searchText === \"\") {\r\n        return this.$message.error(\"请输入搜索内容\");\r\n      }\r\n      const { data: res } = await this.$http({\r\n        method: \"get\",\r\n        url: \"/book\" + \"?\" + this.select + \"=\" + this.searchText,\r\n      });\r\n      if (res.code === 200) {\r\n        this.tableData = res.data;\r\n        this.$message.success(\"搜索成功\");\r\n      } else {\r\n        this.$message.error(\"搜索失败\");\r\n      }\r\n    },\r\n    // 下载书本\r\n    downloadBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      let downloadURL = row.book_img_url;\r\n      row.book_dl_count++;\r\n      window.open(downloadURL, \"_blank\");\r\n    },\r\n    // 编辑书本信息\r\n    editBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 获取表单信息，弹出编辑对话框\r\n      this.curEditIndex = index;\r\n      this.editDialogFormVisible = true;\r\n      this.editDialogForm = Object.assign({}, row);\r\n    },\r\n    // 编辑对话框对话表单提交\r\n    async editDialogFormSubmit() {\r\n      // 向后台提交编辑请求\r\n      const { data: res } = await this.$http({\r\n        method: \"put\",\r\n        url:\r\n          \"/book/\" +\r\n          this.editDialogForm.book_id +\r\n          \"?access_token=\" +\r\n          this.$store.getters.getToken,\r\n        data: this.editDialogForm,\r\n      });\r\n      this.takeData.splice(this.curEditIndex, 1, res.data);\r\n      // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\r\n      // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\r\n      this.editDialogFormVisible = false;\r\n      this.$message.success(\"修改成功\");\r\n    },\r\n    // 收藏书本按钮事件\r\n    async takeBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 请后后台，收藏书籍\r\n      const { data: res } = await this.$http({\r\n        method: \"post\",\r\n        url: \"/collection?access_token=\" + this.$store.getters.getToken,\r\n        data: {\r\n          user_id: Number(this.$store.userinfo.user_id),\r\n          book_id: row.book_id,\r\n        },\r\n      });\r\n      if (res.code === 200) {\r\n        this.$message.success(\"收藏成功\");\r\n      } else {\r\n        this.$message(\"已收藏\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 内容容器\r\n\r\n.main-container {\r\n  line-height: 30px;\r\n  width: 75%;\r\n  padding: 20px;\r\n  margin: 50px auto;\r\n  background-color: white;\r\n  box-shadow: 0 4px 14px 0 rgb(0 0 0 / 5%);\r\n  box-sizing: border-box;\r\n}\r\n\r\n// logo样式\r\n.logo-container {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  img {\r\n    width: 300px;\r\n    height: 100px;\r\n  }\r\n}\r\n\r\n// 设置分割线\r\n.divider {\r\n  margin-top: 25px;\r\n  color: #49afd0;\r\n  font-size: 16pt;\r\n  // 分割线容器\r\n  .el-divider {\r\n    background-color: #49afd0;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}