{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nvar forEachBail = require(\"./forEachBail\");\n\nvar getPaths = require(\"./getPaths\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | Array<string>} directories directories\n   * @param {string | ResolveStepHook} target target\n   */\n  function ModulesInHierarchicalDirectoriesPlugin(source, directories, target) {\n    _classCallCheck(this, ModulesInHierarchicalDirectoriesPlugin);\n\n    this.source = source;\n    this.directories =\n    /** @type {Array<string>} */\n    [].concat(directories);\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(ModulesInHierarchicalDirectoriesPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"ModulesInHierarchicalDirectoriesPlugin\", function (request, resolveContext, callback) {\n        var fs = resolver.fileSystem;\n        var addrs = getPaths(request.path).paths.map(function (p) {\n          return _this.directories.map(function (d) {\n            return resolver.join(p, d);\n          });\n        }).reduce(function (array, p) {\n          array.push.apply(array, p);\n          return array;\n        }, []);\n        forEachBail(addrs, function (addr, callback) {\n          fs.stat(addr, function (err, stat) {\n            if (!err && stat && stat.isDirectory()) {\n              var obj = _objectSpread(_objectSpread({}, request), {}, {\n                path: addr,\n                request: \"./\" + request.request,\n                module: false\n              });\n\n              var message = \"looking for modules in \" + addr;\n              return resolver.doResolve(target, obj, message, resolveContext, callback);\n            }\n\n            if (resolveContext.log) resolveContext.log(addr + \" doesn't exist or is not a directory\");\n            if (resolveContext.missingDependencies) resolveContext.missingDependencies.add(addr);\n            return callback();\n          });\n        }, callback);\n      });\n    }\n  }]);\n\n  return ModulesInHierarchicalDirectoriesPlugin;\n}();","map":{"version":3,"names":["forEachBail","require","getPaths","module","exports","source","directories","target","concat","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","fs","fileSystem","addrs","path","paths","map","p","d","join","reduce","array","push","apply","addr","stat","err","isDirectory","obj","message","doResolve","log","missingDependencies","add"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/ModulesInHierarchicalDirectoriesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\nconst getPaths = require(\"./getPaths\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class ModulesInHierarchicalDirectoriesPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} directories directories\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, directories, target) {\n\t\tthis.source = source;\n\t\tthis.directories = /** @type {Array<string>} */ ([]).concat(directories);\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"ModulesInHierarchicalDirectoriesPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst addrs = getPaths(request.path)\n\t\t\t\t\t\t.paths.map(p => {\n\t\t\t\t\t\t\treturn this.directories.map(d => resolver.join(p, d));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce((array, p) => {\n\t\t\t\t\t\t\tarray.push.apply(array, p);\n\t\t\t\t\t\t\treturn array;\n\t\t\t\t\t\t}, []);\n\t\t\t\t\tforEachBail(\n\t\t\t\t\t\taddrs,\n\t\t\t\t\t\t(addr, callback) => {\n\t\t\t\t\t\t\tfs.stat(addr, (err, stat) => {\n\t\t\t\t\t\t\t\tif (!err && stat && stat.isDirectory()) {\n\t\t\t\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\t\t\t\tpath: addr,\n\t\t\t\t\t\t\t\t\t\trequest: \"./\" + request.request,\n\t\t\t\t\t\t\t\t\t\tmodule: false\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tconst message = \"looking for modules in \" + addr;\n\t\t\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\taddr + \" doesn't exist or is not a directory\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (resolveContext.missingDependencies)\n\t\t\t\t\t\t\t\t\tresolveContext.missingDependencies.add(addr);\n\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAxB;AAEA;;AACA;;;AAEAE,MAAM,CAACC,OAAP;EACC;AACD;AACA;AACA;AACA;EACC,gDAAYC,MAAZ,EAAoBC,WAApB,EAAiCC,MAAjC,EAAyC;IAAA;;IACxC,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,WAAL;IAAmB;IAA8B,EAAD,CAAKE,MAAL,CAAYF,WAAZ,CAAhD;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EAfA;IAAA;IAAA,OAgBC,eAAME,QAAN,EAAgB;MAAA;;MACf,IAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;MACAE,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAGE,wCAHF,EAIE,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;QACtC,IAAMC,EAAE,GAAGP,QAAQ,CAACQ,UAApB;QACA,IAAMC,KAAK,GAAGhB,QAAQ,CAACW,OAAO,CAACM,IAAT,CAAR,CACZC,KADY,CACNC,GADM,CACF,UAAAC,CAAC,EAAI;UACf,OAAO,KAAI,CAAChB,WAAL,CAAiBe,GAAjB,CAAqB,UAAAE,CAAC;YAAA,OAAId,QAAQ,CAACe,IAAT,CAAcF,CAAd,EAAiBC,CAAjB,CAAJ;UAAA,CAAtB,CAAP;QACA,CAHY,EAIZE,MAJY,CAIL,UAACC,KAAD,EAAQJ,CAAR,EAAc;UACrBI,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBF,KAAjB,EAAwBJ,CAAxB;UACA,OAAOI,KAAP;QACA,CAPY,EAOV,EAPU,CAAd;QAQA1B,WAAW,CACVkB,KADU,EAEV,UAACW,IAAD,EAAOd,QAAP,EAAoB;UACnBC,EAAE,CAACc,IAAH,CAAQD,IAAR,EAAc,UAACE,GAAD,EAAMD,IAAN,EAAe;YAC5B,IAAI,CAACC,GAAD,IAAQD,IAAR,IAAgBA,IAAI,CAACE,WAAL,EAApB,EAAwC;cACvC,IAAMC,GAAG,mCACLpB,OADK;gBAERM,IAAI,EAAEU,IAFE;gBAGRhB,OAAO,EAAE,OAAOA,OAAO,CAACA,OAHhB;gBAIRV,MAAM,EAAE;cAJA,EAAT;;cAMA,IAAM+B,OAAO,GAAG,4BAA4BL,IAA5C;cACA,OAAOpB,QAAQ,CAAC0B,SAAT,CACN5B,MADM,EAEN0B,GAFM,EAGNC,OAHM,EAINpB,cAJM,EAKNC,QALM,CAAP;YAOA;;YACD,IAAID,cAAc,CAACsB,GAAnB,EACCtB,cAAc,CAACsB,GAAf,CACCP,IAAI,GAAG,sCADR;YAGD,IAAIf,cAAc,CAACuB,mBAAnB,EACCvB,cAAc,CAACuB,mBAAf,CAAmCC,GAAnC,CAAuCT,IAAvC;YACD,OAAOd,QAAQ,EAAf;UACA,CAxBD;QAyBA,CA5BS,EA6BVA,QA7BU,CAAX;MA+BA,CA7CH;IA+CA;EAjEF;;EAAA;AAAA"},"metadata":{},"sourceType":"script"}