{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nvar _objectSpread = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string} appending appending\n   * @param {string | ResolveStepHook} target target\n   */\n  function AppendPlugin(source, appending, target) {\n    _classCallCheck(this, AppendPlugin);\n\n    this.source = source;\n    this.appending = appending;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(AppendPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"AppendPlugin\", function (request, resolveContext, callback) {\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: request.path + _this.appending,\n          relativePath: request.relativePath && request.relativePath + _this.appending\n        });\n\n        resolver.doResolve(target, obj, _this.appending, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return AppendPlugin;\n}();","map":{"version":3,"names":["module","exports","source","appending","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","obj","path","relativePath","doResolve"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/AppendPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AppendPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string} appending appending\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, appending, target) {\n\t\tthis.source = source;\n\t\tthis.appending = appending;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AppendPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.path + this.appending,\n\t\t\t\t\trelativePath:\n\t\t\t\t\t\trequest.relativePath && request.relativePath + this.appending\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\tthis.appending,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;;;;;;;AAEAA,MAAM,CAACC,OAAP;EACC;AACD;AACA;AACA;AACA;EACC,sBAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuC;IAAA;;IACtC,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EAfA;IAAA;IAAA,OAgBC,eAAMC,QAAN,EAAgB;MAAA;;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;MACAC,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,cAFX,EAE2B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;QAChE,IAAMC,GAAG,mCACLH,OADK;UAERI,IAAI,EAAEJ,OAAO,CAACI,IAAR,GAAe,KAAI,CAACV,SAFlB;UAGRW,YAAY,EACXL,OAAO,CAACK,YAAR,IAAwBL,OAAO,CAACK,YAAR,GAAuB,KAAI,CAACX;QAJ7C,EAAT;;QAMAE,QAAQ,CAACU,SAAT,CACCX,MADD,EAECQ,GAFD,EAGC,KAAI,CAACT,SAHN,EAICO,cAJD,EAKCC,QALD;MAOA,CAhBF;IAiBA;EAnCF;;EAAA;AAAA"},"metadata":{},"sourceType":"script"}