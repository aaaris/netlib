{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 用户信息对象\n      user: {},\n      // 收藏表格数据\n      tableData: [],\n      // 上传窗口\n      uploadDialogVisiable: false,\n      // 设置窗口\n      resetPwdDialogVisiable: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 检验用户登录\n    if (window.sessionStorage.getItem(\"token\") === null) {\n      this.$message.error(\"请先登录！\");\n      this.$router.push('/login');\n    }\n\n    var getUser = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get(\"/user/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\"));\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n                _this.user = res.data;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getUser(); // 从后端api初始化tableData\n\n    var getCollections = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this$$http$ge2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.$http.get(\"/collection/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\"));\n\n              case 2:\n                _yield$_this$$http$ge2 = _context2.sent;\n                res = _yield$_this$$http$ge2.data;\n                _this.tableData = res.data;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getCollections() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getCollections();\n  },\n  methods: {\n    // 返回主页\n    goBack: function goBack() {\n      this.$router.push(\"/home\");\n    },\n    // 注销\n    logout: function logout() {\n      var _this2 = this;\n\n      this.$confirm(\"亲，您确定要退出登录吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        window.sessionStorage.removeItem(\"id\");\n        window.sessionStorage.removeItem(\"token\");\n\n        _this2.goBack();\n      });\n    },\n    // 重新设置密码\n    resetUserPwd: function resetUserPwd() {},\n    // 删除收藏书籍\n    deleteBookItem: function deleteBookItem(index, row) {\n      var _this3 = this;\n\n      // 弹窗询问\n      this.$confirm(\"是否取消收藏该书籍\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        // 确定按钮逻辑\n        // 向后台发送删除请求\n        var delCollection = /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n            var _yield$_this3$$http, res;\n\n            return regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return _this3.$http({\n                      method: \"delete\",\n                      url: \"/collection?access_token=\" + window.sessionStorage.getItem(\"token\"),\n                      data: {\n                        user_id: _this3.user.user_id,\n                        book_id: row.book_id\n                      }\n                    });\n\n                  case 2:\n                    _yield$_this3$$http = _context3.sent;\n                    res = _yield$_this3$$http.data;\n\n                    if (res.code === 200) {\n                      // 删除页面上表单\n                      _this3.tableData.splice(index, 1); // 删除成功提示\n\n\n                      _this3.$message({\n                        type: \"success\",\n                        message: \"已不再收藏该书籍!\"\n                      });\n                    } else {\n                      // 删除失败提示\n                      _this3.$message({\n                        type: \"error\",\n                        message: res.data\n                      });\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function delCollection() {\n            return _ref3.apply(this, arguments);\n          };\n        }();\n\n        delCollection();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;EACAA,IADA,kBACA;IACA;MACA;MACAC,QAFA;MAGA;MACAC,aAJA;MAKA;MACAC,2BANA;MAOA;MACAC;IARA;EAUA,CAZA;EAaAC,OAbA,qBAaA;IAAA;;IACA;IACA;MACA;MACA;IACA;;IACA;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,gBACA,0GADA,CADA;;cAAA;gBAAA;gBACAC,GADA,yBACAN,IADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAMAO,UAZA,CAaA;;IACA;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,gBACA,gHADA,CADA;;cAAA;gBAAA;gBACAD,GADA,0BACAN,IADA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;IAAA;;IAMAQ;EACA,CAlCA;EAmCAC;IACA;IACAC,MAFA,oBAEA;MACA;IACA,CAJA;IAKA;IACAC,MANA,oBAMA;MAAA;;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAC,IAJA,CAIA;QACAC;QACAA;;QACA;MACA,CARA;IASA,CAhBA;IAiBA;IACAC,YAlBA,0BAkBA,CAEA,CApBA;IAqBA;IACAC,cAtBA,0BAsBAC,KAtBA,EAsBAC,GAtBA,EAsBA;MAAA;;MACA;MACA;QACAR,uBADA;QAEAC,sBAFA;QAGAC;MAHA,GAIAC,IAJA,CAIA;QACA;QACA;QACA;UAAA;YAAA;;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA,OACA;sBACAM,gBADA;sBAEAC,yEAFA;sBAGAtB;wBACAuB,4BADA;wBAEAC;sBAFA;oBAHA,EADA;;kBAAA;oBAAA;oBACAlB,GADA,uBACAN,IADA;;oBASA;sBACA;sBACA,kCAFA,CAGA;;;sBACA;wBACAc,eADA;wBAEAW;sBAFA;oBAIA,CARA,MAQA;sBACA;sBACA;wBACAX,aADA;wBAEAW;sBAFA;oBAIA;;kBAvBA;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA;;UAAA;YAAA;UAAA;QAAA;;QAyBAC;MACA,CAjCA;IAkCA;EA1DA;AAnCA","names":["data","user","tableData","uploadDialogVisiable","resetPwdDialogVisiable","created","res","getUser","getCollections","methods","goBack","logout","confirmButtonText","cancelButtonText","type","then","window","resetUserPwd","deleteBookItem","index","row","method","url","user_id","book_id","message","delCollection"],"sourceRoot":"src/components","sources":["User.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"page-container\">\r\n    <!-- 网页头部 -->\r\n    <el-header>\r\n      <el-page-header class=\"page-header\" @back=\"goBack\" content=\"个人主页\">\r\n      </el-page-header>\r\n    </el-header>\r\n    <!-- 网页主体 -->\r\n    <el-container>\r\n      <!-- 侧边栏 -->\r\n      <el-aside class=\"user-tabs-container\">\r\n        <!-- 用户头像 -->\r\n        <div class=\"user-avatar-container\">\r\n          <img src=\"../assets/avatar.png\">\r\n        </div>\r\n        <!-- 用户信息 -->\r\n        <div class=\"userItem\">\r\n          <h2>个人信息</h2>\r\n          <span>账号: {{ user.user_id }}</span><br />\r\n          <span>用户名: {{ user.user_name }}</span>\r\n        </div>\r\n        <!-- 用户设置 -->\r\n        <br><br><br>\r\n        <el-button type=\"primary\" plain @click=\"resetPwdDialogVisiable = true\">重设密码\r\n        </el-button>\r\n        <el-button type=\"danger\" plain @click=\"logout\">注销\r\n        </el-button>\r\n        <el-dialog title=\"设置密码\" :visible.sync=\"resetPwdDialogVisiable\" width=\"60%\">\r\n          <el-form ref=\"resetPwdFormRef\" :model=\"resetPwdForm\" :rules=\"resetPwdFormRules\" status-icon\r\n            class=\"register_form\">\r\n            <!-- username -->\r\n            <el-form-item prop=\"username\">\r\n              <el-input v-model=\"resetPwdForm.username\" prefix-icon=\"el-icon-user-solid\" placeholder=\"username\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <!-- password -->\r\n            <el-form-item prop=\"password\">\r\n              <el-input type=\"password\" v-model=\"resetPwdForm.password\" prefix-icon=\"el-icon-lock\"\r\n                placeholder=\"password\">\r\n              </el-input>\r\n            </el-form-item>\r\n            <!-- 确认密码 -->\r\n            <el-form-item prop=\"checkPw\">\r\n              <el-input type=\"password\" prefix-icon=\"el-icon-lock\" v-model=\"resetPwdForm.checkPw\"\r\n                placeholder=\"check password\"></el-input>\r\n            </el-form-item>\r\n            <!-- 按钮 -->\r\n            <el-form-item class=\"btns\">\r\n              <el-button type=\"primary\" @click=\"resetUserPwd('resetPwdFormRef')\">注册</el-button>\r\n              <el-button type=\"info\" @click=\"resetResetPwdForm('resetPwdFormRef')\">重置</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n\r\n        </el-dialog>\r\n\r\n      </el-aside>\r\n      <!-- 用户行为主体 -->\r\n      <el-main class=\"page-main-contain\">\r\n        <el-tabs tab-position=\"top\">\r\n          <!-- 用户收藏 -->\r\n          <el-tab-pane label=\"我的收藏\">\r\n            <el-table class=\"tableClass\" :data=\"tableData\">\r\n              <el-table-column prop=\"class_name\" align=\"center\" label=\"类型\" width=\"130px\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"book_name\" align=\"center\" label=\"名称\" width=\"200px\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"book_author\" align=\"center\" label=\"作者\" width=\"200px\">\r\n              </el-table-column>\r\n              <el-table-column prop=\"book_addr\" align=\"center\" label=\"出版社\" width=\"200px\">\r\n              </el-table-column>\r\n              <!-- <el-table-column prop=\"book_dl_count\" align=\"center\" label=\"下载量\" width=\"130px\">\r\n              </el-table-column> -->\r\n              <el-table-column prop=\"book_info\" align=\"center\" label=\"描述性息\" width=\"230px\" show-overflow-tooltip>\r\n              </el-table-column>\r\n              <el-table-column align=\"center\" label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button @click=\"deleteBookItem(scope.$index, scope.row)\" icon=\"el-icon-star-on\" circle></el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <!-- 用户上传书籍 -->\r\n          </el-tab-pane>\r\n          <!-- 用户上传 -->\r\n          <el-tab-pane label=\"我的上传\">\r\n            <el-button icon=\"el-icon-upload2\" @click=\"uploadDialogVisiable = true\">\r\n            </el-button>\r\n            <!-- 上传弹窗 -->\r\n            <el-dialog title=\"上传书籍\" :visible.sync=\"uploadDialogVisiable\" width=\"60%\">\r\n              <el-upload class=\"upload-demo\" drag action=\"https://jsonplaceholder.typicode.com/posts/\" multiple>\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">\r\n                  将文件拖到此处，或<em>点击上传</em>\r\n                </div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">\r\n                  只能上传jpg/png文件，且不超过500kb\r\n                </div>\r\n              </el-upload>\r\n            </el-dialog>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 用户信息对象\r\n      user: {},\r\n      // 收藏表格数据\r\n      tableData: [],\r\n      // 上传窗口\r\n      uploadDialogVisiable: false,\r\n      // 设置窗口\r\n      resetPwdDialogVisiable: false,\r\n    };\r\n  },\r\n  created() {\r\n    // 检验用户登录\r\n    if (window.sessionStorage.getItem(\"token\") === null) {\r\n      this.$message.error(\"请先登录！\")\r\n      this.$router.push('/login')\r\n    }\r\n    let getUser = async () => {\r\n      const { data: res } = await this.$http.get(\r\n        \"/user/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\")\r\n      )\r\n      this.user = res.data\r\n    };\r\n    getUser()\r\n    // 从后端api初始化tableData\r\n    let getCollections = async () => {\r\n      const { data: res } = await this.$http.get(\r\n        \"/collection/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\")\r\n      );\r\n      this.tableData = res.data;\r\n    };\r\n    getCollections();\r\n  },\r\n  methods: {\r\n    // 返回主页\r\n    goBack() {\r\n      this.$router.push(\"/home\");\r\n    },\r\n    // 注销\r\n    logout() {\r\n      this.$confirm(\"亲，您确定要退出登录吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        window.sessionStorage.removeItem(\"id\")\r\n        window.sessionStorage.removeItem(\"token\")\r\n        this.goBack()\r\n      })\r\n    },\r\n    // 重新设置密码\r\n    resetUserPwd() {\r\n\r\n    },\r\n    // 删除收藏书籍\r\n    deleteBookItem(index, row) {\r\n      // 弹窗询问\r\n      this.$confirm(\"是否取消收藏该书籍\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        // 确定按钮逻辑\r\n        // 向后台发送删除请求\r\n        let delCollection = async () => {\r\n          const { data: res } = await this.$http({\r\n            method: \"delete\",\r\n            url: \"/collection?access_token=\" + window.sessionStorage.getItem(\"token\"),\r\n            data: {\r\n              user_id: this.user.user_id,\r\n              book_id: row.book_id\r\n            }\r\n          });\r\n          if (res.code === 200) {\r\n            // 删除页面上表单\r\n            this.tableData.splice(index, 1);\r\n            // 删除成功提示\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"已不再收藏该书籍!\",\r\n            });\r\n          } else {\r\n            // 删除失败提示\r\n            this.$message({\r\n              type: \"error\",\r\n              message: res.data,\r\n            });\r\n          }\r\n        };\r\n        delCollection();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n//主体容器\r\n.page-container {\r\n  line-height: 30px;\r\n}\r\n\r\n//页头容器\r\n// .el-page-header {\r\n// }\r\n\r\n// 侧边标签栏\r\n.user-tabs-container {\r\n  width: 300px;\r\n  text-align: center;\r\n\r\n  // 头像容器\r\n  .user-avatar-container {\r\n    margin: 10px auto;\r\n  }\r\n\r\n  // 个人信息\r\n  .userItem {\r\n    font-size: 20px;\r\n  }\r\n\r\n  // 收藏部分容器\r\n  .page-main-contain {\r\n    width: 800px;\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}