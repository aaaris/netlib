{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //登录表单的数据绑定对象\n      loginForm: {\n        userAccount: \"\",\n        password: \"\"\n      },\n      // 表单的验证规则对象\n      loginFormRules: {\n        //验证用户名是否合法\n        userAccount: [{\n          required: true,\n          message: \"请输入登录账号名\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 10,\n          message: \"长度在 3 到 10 个字符\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入登录密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 15,\n          message: \"长度在 6 到 15 个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    // 登录\n    login: function login() {\n      var _this = this;\n\n      this.$refs.loginFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var targetURL, _yield$_this$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  targetURL = \"?userid=\" + _this.loginForm.userAccount + \"&password=\" + _this.loginForm.password;\n                  _context.next = 5;\n                  return _this.$http({\n                    method: \"get\",\n                    url: \"/user\" + targetURL\n                  });\n\n                case 5:\n                  _yield$_this$$http = _context.sent;\n                  res = _yield$_this$$http.data;\n\n                  if (!(res.code != 200)) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", _this.$message.error(\"登录失败! \" + res.data));\n\n                case 9:\n                  _this.$message.success({\n                    message: \"登录成功\"\n                  }); //将登录成功之后的token，保存到客户端的sessionStorage中\n\n\n                  window.sessionStorage.setItem(\"token\", res.data.access_token);\n                  window.sessionStorage.setItem(\"id\", _this.loginForm.userAccount); // console.log(window.sessionStorage.length)\n                  // 跳转到后台主页\n\n                  _this.$router.push(\"/home\");\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置登录表单\n    resetLoginForm: function resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;EACAA,IADA,kBACA;IACA;MACA;MACAC;QACAC,eADA;QAEAC;MAFA,CAFA;MAMA;MACAC;QACA;QACAF,cACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,yBAHA;UAIAC;QAJA,CAFA,CAFA;QAWAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UACAC,MADA;UAEAC,OAFA;UAGAH,yBAHA;UAIAC;QAJA,CAFA;MAXA;IAPA;EA6BA,CA/BA;EAgCAG;IACA;IACAC,KAFA,mBAEA;MAAA;;MACA;QAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,IACAC,KADA;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAEAC,SAFA,GAGA,aACA,2BADA,GAEA,YAFA,GAGA,wBANA;kBAAA;kBAAA,OAOA;oBACAC,aADA;oBAEAC;kBAFA,EAPA;;gBAAA;kBAAA;kBAOAC,GAPA,sBAOAhB,IAPA;;kBAAA,MAWAgB,eAXA;oBAAA;oBAAA;kBAAA;;kBAAA,iCAYA,yCAZA;;gBAAA;kBAaA;oBACAV;kBADA,GAbA,CAgBA;;;kBACAW;kBACAA,iEAlBA,CAmBA;kBACA;;kBACA;;gBArBA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAuBA,CA1BA;IA2BA;IACAC,cA5BA,4BA4BA;MACA;IACA;EA9BA;AAhCA","names":["data","loginForm","userAccount","password","loginFormRules","required","message","trigger","min","max","methods","login","valid","targetURL","method","url","res","window","resetLoginForm"],"sourceRoot":"src/components","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <!-- 头像区域 -->\n      <!-- <div class=\"avatar_box\">\n        <a href=\"/\">\n          <img src=\"../assets/logo.png\" alt=\"logo.png\" />\n        </a>\n      </div> -->\n      <div class=\"logo_name\">\n        <img class=\"logo_img\" src=\"../assets/logo.png\" alt=\"\" />\n      </div>\n      <!-- 登录表单区域 -->\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginFormRules\"\n        class=\"login_form\"\n      >\n        <!-- accout -->\n        <el-form-item prop=\"userAccount\">\n          <el-input\n            v-model=\"loginForm.userAccount\"\n            prefix-icon=\"el-icon-user-solid\"\n            placeholder=\"user accout\"\n          >\n          </el-input>\n        </el-form-item>\n        <!-- password -->\n        <el-form-item prop=\"password\">\n          <el-input\n            type=\"password\"\n            v-model=\"loginForm.password\"\n            prefix-icon=\"el-icon-lock\"\n            placeholder=\"password\"\n          >\n          </el-input>\n        </el-form-item>\n        <a class=\"a_register\" href=\"/#/register\">没有账号？点击注册</a>\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      //登录表单的数据绑定对象\n      loginForm: {\n        userAccount: \"\",\n        password: \"\",\n      },\n      // 表单的验证规则对象\n      loginFormRules: {\n        //验证用户名是否合法\n        userAccount: [\n          { required: true, message: \"请输入登录账号名\", trigger: \"blur\" },\n          {\n            min: 3,\n            max: 10,\n            message: \"长度在 3 到 10 个字符\",\n            trigger: \"blur\",\n          },\n        ],\n        password: [\n          { required: true, message: \"请输入登录密码\", trigger: \"blur\" },\n          {\n            min: 6,\n            max: 15,\n            message: \"长度在 6 到 15 个字符\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n    };\n  },\n  methods: {\n    // 登录\n    login() {\n      this.$refs.loginFormRef.validate(async (valid) => {\n        if (!valid) return;\n        var targetURL =\n          \"?userid=\" +\n          this.loginForm.userAccount +\n          \"&password=\" +\n          this.loginForm.password;\n        const { data: res } = await this.$http({\n          method: \"get\",\n          url: \"/user\" + targetURL,\n        });\n        if (res.code != 200)\n          return this.$message.error(\"登录失败! \" + res.data);\n        this.$message.success({\n          message: \"登录成功\",\n        });\n        //将登录成功之后的token，保存到客户端的sessionStorage中\n        window.sessionStorage.setItem(\"token\", res.data.access_token);\n        window.sessionStorage.setItem(\"id\", this.loginForm.userAccount);\n        // console.log(window.sessionStorage.length)\n        // 跳转到后台主页\n        this.$router.push(\"/home\");\n      });\n    },\n    // 重置登录表单\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  height: 100%;\n  background-image: url(\"../assets/bg.jpg\");\n  background-size: 100% 100%;\n}\n\n.login_box {\n  width: 700px;\n  height: 500px;\n  background-color: #fff;\n  border-radius: 3px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.avatar_box {\n  height: 130px;\n  widows: 130px;\n  border-bottom-right-radius: 50%;\n  padding: 10px;\n  box-shadow: 0 0 10px #2b4b6b;\n  position: absolute;\n  left: 0;\n  transform: translate(-50%, -50%);\n  background-color: rgba(255, 255, 255, 0.3);\n\n  img {\n    width: 100%;\n    height: 100%;\n    border-bottom-right-radius: 50%;\n  }\n}\n\n.logo_name {\n  font-family: \"Courier New\", Courier, monospace;\n  font-weight: bold;\n  margin: 20px;\n  text-align: center;\n  font-size: 30px;\n  .logo_img {\n    height: 100px;\n  }\n  background-color: #2b4b6b;\n}\n\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 60%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n\n.a_register {\n  text-decoration: none;\n  color: blue;\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-end;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}