{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Footer from \"./Footer.vue\";\nimport Header from \"./Header.vue\";\nexport default {\n  components: {\n    Footer: Footer,\n    Header: Header\n  },\n  data: function data() {\n    return {\n      // 查询建议\n      suggestionArray: [],\n      // 查询排行榜表单数据\n      tableData: [],\n      searchText: \"\",\n      select: \"\",\n      //编辑界面数据\n      curEditIndex: 0,\n      editDialogFormVisible: false,\n      editDialogForm: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _yield$_this$$http$ge, res, _yield$_this$$http$ge2, _res;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$http.get(\"/book\");\n\n            case 2:\n              _yield$_this$$http$ge = _context.sent;\n              res = _yield$_this$$http$ge.data;\n              _this.tableData = res.data;\n\n              if (!_this.isLogin) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 8;\n              return _this.$http.get(\"/book/\" + _this.$store.state.userinfo.userid);\n\n            case 8:\n              _yield$_this$$http$ge2 = _context.sent;\n              _res = _yield$_this$$http$ge2.data;\n              console.log(_res);\n              _this.$store.state.userinfo = _res.data;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  computed: {\n    isLogin: {\n      get: function get() {\n        return this.$store.getters.getLoginState;\n      }\n    }\n  },\n  methods: {\n    handleSelect: function handleSelect(item) {\n      if (this.select == \"\") {\n        this.select = \"book_name\";\n      }\n\n      this.searchText = item;\n    },\n    // 获取搜索建议\n    querySearch: function querySearch(queryString, cb) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http({\n                  method: \"get\",\n                  url: \"/book/suggestion?queryKey=\" + (_this2.select != \"\" ? _this2.select : \"book_name\") + \"&queryVal=\" + queryString\n                });\n\n              case 2:\n                _yield$_this2$$http = _context2.sent;\n                res = _yield$_this2$$http.data;\n                console.log(res.data); // 调用callback返回建议的数据\n\n                cb(res.data);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 寻找书本\n    searchBookItem: function searchBookItem() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$_this3$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(_this3.select === \"\")) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this3.$message.error(\"请选择搜索类别\"));\n\n              case 4:\n                if (!(_this3.searchText === \"\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this3.$message.error(\"请输入搜索内容\"));\n\n              case 6:\n                _context3.next = 8;\n                return _this3.$http({\n                  method: \"get\",\n                  url: \"/book\" + \"?\" + _this3.select + \"=\" + _this3.searchText\n                });\n\n              case 8:\n                _yield$_this3$$http = _context3.sent;\n                res = _yield$_this3$$http.data;\n\n                if (res.code === 200) {\n                  _this3.tableData = res.data;\n\n                  _this3.$message.success(\"搜索成功\");\n                } else {\n                  _this3.$message.error(\"搜索失败\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    // 下载书本\n    downloadBookItem: function downloadBookItem(index, row) {\n      // 检验用户登录\n      if (this.$store.getters.getToken === null) {\n        return this.$message.error(\"请先登录！\");\n      }\n\n      var downloadURL = row.book_img_url;\n      row.book_dl_count++;\n      window.open(downloadURL, \"_blank\");\n    },\n    // 编辑书本信息\n    editBookItem: function editBookItem(index, row) {\n      // 检验用户登录\n      if (this.$store.getters.getToken === null) {\n        return this.$message.error(\"请先登录！\");\n      } // 获取表单信息，弹出编辑对话框\n\n\n      this.curEditIndex = index;\n      this.editDialogFormVisible = true;\n      this.editDialogForm = Object.assign({}, row);\n    },\n    // 编辑对话框对话表单提交\n    editDialogFormSubmit: function editDialogFormSubmit() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this4.$http({\n                  method: \"put\",\n                  url: \"/book/\" + _this4.editDialogForm.book_id + \"?access_token=\" + _this4.$store.getters.getToken,\n                  data: _this4.editDialogForm\n                });\n\n              case 2:\n                _yield$_this4$$http = _context4.sent;\n                res = _yield$_this4$$http.data;\n\n                _this4.takeData.splice(_this4.curEditIndex, 1, res.data); // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\n                // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\n\n\n                _this4.editDialogFormVisible = false;\n\n                _this4.$message.success(\"修改成功\");\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    // 收藏书本按钮事件\n    takeBookItem: function takeBookItem(index, row) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var _yield$_this5$$http, res;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(_this5.$store.getters.getToken === null)) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", _this5.$message.error(\"请先登录！\"));\n\n              case 2:\n                _context5.next = 4;\n                return _this5.$http({\n                  method: \"post\",\n                  url: \"/collection?access_token=\" + _this5.$store.getters.getToken,\n                  data: {\n                    user_id: Number(_this5.$store.userinfo.user_id),\n                    book_id: row.book_id\n                  }\n                });\n\n              case 4:\n                _yield$_this5$$http = _context5.sent;\n                res = _yield$_this5$$http.data;\n\n                if (res.code === 200) {\n                  _this5.$message.success(\"收藏成功\");\n                } else {\n                  _this5.$message(\"已收藏\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["components","Footer","Header","data","suggestionArray","tableData","searchText","select","curEditIndex","editDialogFormVisible","editDialogForm","created","res","console","computed","isLogin","get","methods","handleSelect","item","querySearch","queryString","cb","method","url","searchBookItem","downloadBookItem","index","row","window","editBookItem","editDialogFormSubmit","takeBookItem","user_id","book_id"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-body\">\r\n    <!-- 头部 -->\r\n    <Header></Header>\r\n    <!-- 书本显示主体 -->\r\n    <el-container class=\"main-container\">\r\n      <!-- logo -->\r\n      <el-header class=\"logo-container\" height=\"150px\">\r\n        <a href=\"javascript:;\"><img src=\"../../public/logo.png\" alt=\"\" /> </a>\r\n      </el-header>\r\n      <!-- 搜索框 -->\r\n      <el-autocomplete\r\n        placeholder=\"请输入查找内容\"\r\n        v-model=\"searchText\"\r\n        class=\"input-with-select\"\r\n        :fetch-suggestions=\"querySearch\"\r\n        :trigger-on-focus=\"false\"\r\n        @select=\"handleSelect\"\r\n      >\r\n        <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择类别\">\r\n          <el-option label=\"类型\" value=\"class_name\"></el-option>\r\n          <el-option label=\"书名\" value=\"book_name\"></el-option>\r\n          <el-option label=\"作者\" value=\"book_author\"></el-option>\r\n          <el-option label=\"出版社\" value=\"book_addr\"></el-option>\r\n          <el-option label=\"描述信息\" value=\"book_info\"></el-option>\r\n        </el-select>\r\n        <template slot-scope=\"{ item }\">\r\n          {{ item }}\r\n        </template>\r\n        <el-button\r\n          type=\"primer\"\r\n          slot=\"append\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"searchBookItem\"\r\n        ></el-button>\r\n      </el-autocomplete>\r\n      <!-- 显示书本部分 -->\r\n      <el-main>\r\n        <!--书本表格主体部分-->\r\n        <div class=\"divider\">\r\n          <h1>&nbsp;&nbsp;&nbsp;最受欢迎的</h1>\r\n          <el-divider></el-divider>\r\n        </div>\r\n        <!-- 书本信息表格 -->\r\n        <!-- 信息部分 -->\r\n        <el-table :data=\"tableData\" height=\"650px\">\r\n          <el-table-column\r\n            prop=\"class_name\"\r\n            align=\"center\"\r\n            label=\"类型\"\r\n            width=\"130px\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"book_name\"\r\n            align=\"center\"\r\n            label=\"名称\"\r\n            width=\"200px\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"book_addr\"\r\n            align=\"center\"\r\n            label=\"出版社\"\r\n            width=\"200px\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"book_info\"\r\n            align=\"center\"\r\n            label=\"描述信息\"\r\n            width=\"230px\"\r\n            show-overflow-tooltip\r\n          >\r\n            <!-- 操作部分 -->\r\n          </el-table-column>\r\n          <el-table-column fixed=\"right\" align=\"center\" label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"downloadBookItem(scope.$index, scope.row)\"\r\n                icon=\"el-icon-download\"\r\n                circle\r\n              ></el-button>\r\n              <el-button\r\n                type=\"primary\"\r\n                icon=\"el-icon-edit\"\r\n                circle\r\n                @click=\"editBookItem(scope.$index, scope.row)\"\r\n              >\r\n              </el-button>\r\n              <el-button\r\n                type=\"warning\"\r\n                icon=\"el-icon-star-off\"\r\n                circle\r\n                @click=\"takeBookItem(scope.$index, scope.row)\"\r\n              >\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!--编辑界面-->\r\n        <el-dialog\r\n          title=\"编辑书籍\"\r\n          :visible.sync=\"editDialogFormVisible\"\r\n          :close-on-click-modal=\"false\"\r\n          :append-to-body=\"true\"\r\n        >\r\n          <!--editDialogForm表单提交的数据-->\r\n          <el-form\r\n            :model=\"editDialogForm\"\r\n            label-width=\"80px\"\r\n            ref=\"editDialogForm\"\r\n          >\r\n            <el-form-item label=\"类型\" prop=\"class_name\">\r\n              <el-input\r\n                v-model=\"editDialogForm.class_name\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"名称\" prop=\"book_name\">\r\n              <el-input\r\n                v-model=\"editDialogForm.book_name\"\r\n                auto-complete=\"off\"\r\n                readonly\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"描述信息\" prop=\"book_info\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                v-model=\"editDialogForm.book_info\"\r\n                autosize\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editDialogFormVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editDialogFormSubmit\"\r\n              >确 定</el-button\r\n            >\r\n          </div>\r\n        </el-dialog>\r\n      </el-main>\r\n    </el-container>\r\n    <Footer></Footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Footer from \"./Footer.vue\";\r\nimport Header from \"./Header.vue\";\r\nexport default {\r\n  components: { Footer, Header },\r\n  data() {\r\n    return {\r\n      // 查询建议\r\n      suggestionArray: [],\r\n      // 查询排行榜表单数据\r\n      tableData: [],\r\n      searchText: \"\",\r\n      select: \"\",\r\n      //编辑界面数据\r\n      curEditIndex: 0,\r\n      editDialogFormVisible: false,\r\n      editDialogForm: {},\r\n    };\r\n  },\r\n  async created() {\r\n    // 从后端api初始化tableData\r\n    const { data: res } = await this.$http.get(\"/book\");\r\n    this.tableData = res.data;\r\n    if (this.isLogin) {\r\n      const { data: res } = await this.$http.get(\r\n        \"/book/\" + this.$store.state.userinfo.userid\r\n      );\r\n      console.log(res);\r\n      this.$store.state.userinfo = res.data;\r\n    }\r\n  },\r\n  computed: {\r\n    isLogin: {\r\n      get() {\r\n        return this.$store.getters.getLoginState;\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    handleSelect(item) {\r\n      if (this.select == \"\") {\r\n        this.select = \"book_name\";\r\n      }\r\n      this.searchText = item;\r\n    },\r\n    // 获取搜索建议\r\n    async querySearch(queryString, cb) {\r\n      // console.log(str)\r\n      // 发送后台请求获取搜索建议\r\n      const { data: res } = await this.$http({\r\n        method: \"get\",\r\n        url:\r\n          \"/book/suggestion?queryKey=\" +\r\n          (this.select != \"\" ? this.select : \"book_name\") +\r\n          \"&queryVal=\" +\r\n          queryString,\r\n      });\r\n      console.log(res.data);\r\n      // 调用callback返回建议的数据\r\n      cb(res.data);\r\n    },\r\n\r\n    // 寻找书本\r\n    async searchBookItem() {\r\n      if (this.select === \"\") {\r\n        return this.$message.error(\"请选择搜索类别\");\r\n      } else if (this.searchText === \"\") {\r\n        return this.$message.error(\"请输入搜索内容\");\r\n      }\r\n      const { data: res } = await this.$http({\r\n        method: \"get\",\r\n        url: \"/book\" + \"?\" + this.select + \"=\" + this.searchText,\r\n      });\r\n      if (res.code === 200) {\r\n        this.tableData = res.data;\r\n        this.$message.success(\"搜索成功\");\r\n      } else {\r\n        this.$message.error(\"搜索失败\");\r\n      }\r\n    },\r\n    // 下载书本\r\n    downloadBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      let downloadURL = row.book_img_url;\r\n      row.book_dl_count++;\r\n      window.open(downloadURL, \"_blank\");\r\n    },\r\n    // 编辑书本信息\r\n    editBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 获取表单信息，弹出编辑对话框\r\n      this.curEditIndex = index;\r\n      this.editDialogFormVisible = true;\r\n      this.editDialogForm = Object.assign({}, row);\r\n    },\r\n    // 编辑对话框对话表单提交\r\n    async editDialogFormSubmit() {\r\n      // 向后台提交编辑请求\r\n      const { data: res } = await this.$http({\r\n        method: \"put\",\r\n        url:\r\n          \"/book/\" +\r\n          this.editDialogForm.book_id +\r\n          \"?access_token=\" +\r\n          this.$store.getters.getToken,\r\n        data: this.editDialogForm,\r\n      });\r\n      this.takeData.splice(this.curEditIndex, 1, res.data);\r\n      // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\r\n      // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\r\n      this.editDialogFormVisible = false;\r\n      this.$message.success(\"修改成功\");\r\n    },\r\n    // 收藏书本按钮事件\r\n    async takeBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (this.$store.getters.getToken === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 请后后台，收藏书籍\r\n      const { data: res } = await this.$http({\r\n        method: \"post\",\r\n        url: \"/collection?access_token=\" + this.$store.getters.getToken,\r\n        data: {\r\n          user_id: Number(this.$store.userinfo.user_id),\r\n          book_id: row.book_id,\r\n        },\r\n      });\r\n      if (res.code === 200) {\r\n        this.$message.success(\"收藏成功\");\r\n      } else {\r\n        this.$message(\"已收藏\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 内容容器\r\n.main-container {\r\n  line-height: 30px;\r\n  margin: 20px auto;\r\n  padding: 15px;\r\n  background-color: white;\r\n  box-shadow: 0 4px 14px 0 rgb(0 0 0 / 5%);\r\n  box-sizing: border-box;\r\n}\r\n\r\nelement.style {\r\n}\r\n@media (min-width: 1200px) {\r\n  .main-container {\r\n    width: 1000px;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .main-container {\r\n    width: 900px;\r\n  }\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .main-container {\r\n    width: 750px;\r\n  }\r\n}\r\n\r\n@media (min-width: 1200px) {\r\n  .main-container {\r\n    width: 1170px;\r\n  }\r\n}\r\n@media (min-width: 992px) {\r\n  .main-container {\r\n    width: 970px;\r\n  }\r\n}\r\n@media (min-width: 768px) {\r\n  .main-container {\r\n    width: 750px;\r\n  }\r\n}\r\n\r\n// logo样式\r\n.logo-container {\r\n  text-align: center;\r\n  margin: 30px auto;\r\n  img {\r\n    width: 70%;\r\n  }\r\n}\r\n\r\n//搜索框样式\r\n.input-with-select {\r\n  margin: 30px auto;\r\n  width: 70%;\r\n  // height: 10%;\r\n}\r\n// 搜索框选择列表样式\r\n.el-input {\r\n  .el-select {\r\n    width: 130px;\r\n  }\r\n}\r\n\r\n// 设置分割线\r\n.divider {\r\n  margin-top: 25px;\r\n  color: #49afd0;\r\n  font-size: 16pt;\r\n  // 分割线容器\r\n  .el-divider {\r\n    background-color: #49afd0;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}