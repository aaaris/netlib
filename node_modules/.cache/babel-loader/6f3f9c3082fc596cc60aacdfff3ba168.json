{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex); // 定义会话状态\n\nvar state = {\n  // access_token\n  token: \"\",\n  // 用户信息\n  userinfo: {\n    user_id: 0,\n    user_img_url: \"\",\n    user_level: 0,\n    user_name: \"\",\n    user_password: \"\"\n  },\n  // 菜单导航\n  menu_data: [],\n  //  加载动态路由标志\n  isLoadRoute: false\n}; // 定义行为方法\n\nvar mutations = {\n  // 设置授权密钥\n  setToken: function setToken(state, token) {\n    state.token = token; // 更新userinfo\n    // const { data: res } = await this.$http.get(\n    //   \"/user/\" + +\"?access_token=\" + token\n    // );\n    // this.user = res.data;\n  },\n  // 设置用户信息\n  setUserInfo: function setUserInfo(state, data) {\n    // state.userinfo = JSON.parse(data);\n    state.userinfo = data;\n  },\n  //  设置菜单导航\n  setMeunData: function setMeunData(state, data) {\n    state.menu_data = data;\n  },\n  //   设置加载路由标志\n  setLoadRoute: function setLoadRoute(state, data) {\n    state.isLoadRoute = data;\n  },\n  //   清空会话状态\n  clearState: function clearState(state) {\n    state = {\n      token: \"\",\n      userinfo: {},\n      menu_data: [],\n      isLoadRoute: false\n    };\n  }\n}; // 定义获取加工方法\n\nvar getters = {\n  // 获取用户登录信息\n  getLoginState: function getLoginState(state) {\n    return state.token != \"\";\n  },\n  // 获取用户角色\n  getUserLevel: function getUserLevel(state) {\n    var data;\n\n    if (state.userinfo.user_level == 0) {\n      data = \"用户\";\n    } else {\n      data = \"管理员\";\n    }\n\n    return data;\n  },\n  //   获取用户授权密钥\n  getToken: function getToken(state) {\n    return state.token;\n  },\n  // 获取用户明\n  getUserName: function getUserName(state) {\n    if (state.userinfo == null) {\n      return null;\n    } else {\n      return state.userinfo.user_name;\n    }\n  }\n};\nexport default new Vuex.Store({\n  state: state,\n  mutations: mutations,\n  getters: getters\n});","map":{"version":3,"names":["Vue","Vuex","use","state","token","userinfo","user_id","user_img_url","user_level","user_name","user_password","menu_data","isLoadRoute","mutations","setToken","setUserInfo","data","setMeunData","setLoadRoute","clearState","getters","getLoginState","getUserLevel","getToken","getUserName","Store"],"sources":["D:/Work/Project/LMS/lms/src/store/store.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.use(Vuex);\r\n\r\n// 定义会话状态\r\nconst state = {\r\n  // access_token\r\n  token: \"\",\r\n  // 用户信息\r\n  userinfo: {\r\n    user_id: 0,\r\n    user_img_url: \"\",\r\n    user_level: 0,\r\n    user_name: \"\",\r\n    user_password: \"\",\r\n  },\r\n  // 菜单导航\r\n  menu_data: [],\r\n  //  加载动态路由标志\r\n  isLoadRoute: false,\r\n};\r\n\r\n// 定义行为方法\r\nconst mutations = {\r\n  // 设置授权密钥\r\n  setToken(state, token) {\r\n    state.token = token;\r\n    // 更新userinfo\r\n    // const { data: res } = await this.$http.get(\r\n    //   \"/user/\" + +\"?access_token=\" + token\r\n    // );\r\n    // this.user = res.data;\r\n  },\r\n  // 设置用户信息\r\n  setUserInfo(state, data) {\r\n    // state.userinfo = JSON.parse(data);\r\n    state.userinfo = data;\r\n  },\r\n  //  设置菜单导航\r\n  setMeunData(state, data) {\r\n    state.menu_data = data;\r\n  },\r\n  //   设置加载路由标志\r\n  setLoadRoute(state, data) {\r\n    state.isLoadRoute = data;\r\n  },\r\n  //   清空会话状态\r\n  clearState(state) {\r\n    state = {\r\n      token: \"\",\r\n      userinfo: {},\r\n      menu_data: [],\r\n      isLoadRoute: false,\r\n    };\r\n  },\r\n};\r\n\r\n// 定义获取加工方法\r\nconst getters = {\r\n  // 获取用户登录信息\r\n  getLoginState(state) {\r\n    return state.token != \"\";\r\n  },\r\n  // 获取用户角色\r\n  getUserLevel(state) {\r\n    let data;\r\n    if (state.userinfo.user_level == 0) {\r\n      data = \"用户\";\r\n    } else {\r\n      data = \"管理员\";\r\n    }\r\n    return data;\r\n  },\r\n  //   获取用户授权密钥\r\n  getToken(state) {\r\n    return state.token;\r\n  },\r\n  // 获取用户明\r\n  getUserName(state) {\r\n    if (state.userinfo == null) {\r\n      return null;\r\n    } else {\r\n      return state.userinfo.user_name;\r\n    }\r\n  },\r\n};\r\n\r\nexport default new Vuex.Store({\r\n  state,\r\n  mutations,\r\n  getters,\r\n});\r\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR,E,CAEA;;AACA,IAAME,KAAK,GAAG;EACZ;EACAC,KAAK,EAAE,EAFK;EAGZ;EACAC,QAAQ,EAAE;IACRC,OAAO,EAAE,CADD;IAERC,YAAY,EAAE,EAFN;IAGRC,UAAU,EAAE,CAHJ;IAIRC,SAAS,EAAE,EAJH;IAKRC,aAAa,EAAE;EALP,CAJE;EAWZ;EACAC,SAAS,EAAE,EAZC;EAaZ;EACAC,WAAW,EAAE;AAdD,CAAd,C,CAiBA;;AACA,IAAMC,SAAS,GAAG;EAChB;EACAC,QAFgB,oBAEPX,KAFO,EAEAC,KAFA,EAEO;IACrBD,KAAK,CAACC,KAAN,GAAcA,KAAd,CADqB,CAErB;IACA;IACA;IACA;IACA;EACD,CATe;EAUhB;EACAW,WAXgB,uBAWJZ,KAXI,EAWGa,IAXH,EAWS;IACvB;IACAb,KAAK,CAACE,QAAN,GAAiBW,IAAjB;EACD,CAde;EAehB;EACAC,WAhBgB,uBAgBJd,KAhBI,EAgBGa,IAhBH,EAgBS;IACvBb,KAAK,CAACQ,SAAN,GAAkBK,IAAlB;EACD,CAlBe;EAmBhB;EACAE,YApBgB,wBAoBHf,KApBG,EAoBIa,IApBJ,EAoBU;IACxBb,KAAK,CAACS,WAAN,GAAoBI,IAApB;EACD,CAtBe;EAuBhB;EACAG,UAxBgB,sBAwBLhB,KAxBK,EAwBE;IAChBA,KAAK,GAAG;MACNC,KAAK,EAAE,EADD;MAENC,QAAQ,EAAE,EAFJ;MAGNM,SAAS,EAAE,EAHL;MAINC,WAAW,EAAE;IAJP,CAAR;EAMD;AA/Be,CAAlB,C,CAkCA;;AACA,IAAMQ,OAAO,GAAG;EACd;EACAC,aAFc,yBAEAlB,KAFA,EAEO;IACnB,OAAOA,KAAK,CAACC,KAAN,IAAe,EAAtB;EACD,CAJa;EAKd;EACAkB,YANc,wBAMDnB,KANC,EAMM;IAClB,IAAIa,IAAJ;;IACA,IAAIb,KAAK,CAACE,QAAN,CAAeG,UAAf,IAA6B,CAAjC,EAAoC;MAClCQ,IAAI,GAAG,IAAP;IACD,CAFD,MAEO;MACLA,IAAI,GAAG,KAAP;IACD;;IACD,OAAOA,IAAP;EACD,CAda;EAed;EACAO,QAhBc,oBAgBLpB,KAhBK,EAgBE;IACd,OAAOA,KAAK,CAACC,KAAb;EACD,CAlBa;EAmBd;EACAoB,WApBc,uBAoBFrB,KApBE,EAoBK;IACjB,IAAIA,KAAK,CAACE,QAAN,IAAkB,IAAtB,EAA4B;MAC1B,OAAO,IAAP;IACD,CAFD,MAEO;MACL,OAAOF,KAAK,CAACE,QAAN,CAAeI,SAAtB;IACD;EACF;AA1Ba,CAAhB;AA6BA,eAAe,IAAIR,IAAI,CAACwB,KAAT,CAAe;EAC5BtB,KAAK,EAALA,KAD4B;EAE5BU,SAAS,EAATA,SAF4B;EAG5BO,OAAO,EAAPA;AAH4B,CAAf,CAAf"},"metadata":{},"sourceType":"module"}