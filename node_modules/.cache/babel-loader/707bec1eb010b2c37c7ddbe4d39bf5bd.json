{"ast":null,"code":"\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\n\nvar _createForOfIteratorHelper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nvar _typeof = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nvar _assertThisInitialized = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/assertThisInitialized.js\")[\"default\"];\n\nvar _inherits = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/inherits.js\")[\"default\"];\n\nvar _createSuper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createSuper.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.error.to-string.js\");\n\nrequire(\"core-js/modules/es.array.is-array.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.function.bind.js\");\n\nrequire(\"core-js/modules/es.json.stringify.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tracer = void 0;\n\nvar stream_1 = require(\"stream\");\n\nfunction evCommon() {\n  var hrtime = process.hrtime(); // [seconds, nanoseconds]\n\n  var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n\n  return {\n    ts: ts,\n    pid: process.pid,\n    tid: process.pid // no meaningful tid for node.js\n\n  };\n}\n\nvar Tracer = /*#__PURE__*/function (_stream_1$Readable) {\n  _inherits(Tracer, _stream_1$Readable);\n\n  var _super = _createSuper(Tracer);\n\n  function Tracer() {\n    var _this;\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Tracer);\n\n    _this = _super.call(this);\n    _this.noStream = false;\n    _this.events = [];\n\n    if (_typeof(opts) !== \"object\") {\n      throw new Error(\"Invalid options passed (must be an object)\");\n    }\n\n    if (opts.parent != null && _typeof(opts.parent) !== \"object\") {\n      throw new Error(\"Invalid option (parent) passed (must be an object)\");\n    }\n\n    if (opts.fields != null && _typeof(opts.fields) !== \"object\") {\n      throw new Error(\"Invalid option (fields) passed (must be an object)\");\n    }\n\n    if (opts.objectMode != null && opts.objectMode !== true && opts.objectMode !== false) {\n      throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n    }\n\n    _this.noStream = opts.noStream || false;\n    _this.parent = opts.parent;\n\n    if (_this.parent) {\n      _this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n    } else {\n      _this.fields = {};\n    }\n\n    if (opts.fields) {\n      Object.assign(_this.fields, opts.fields);\n    }\n\n    if (!_this.fields.cat) {\n      // trace-viewer *requires* `cat`, so let's have a fallback.\n      _this.fields.cat = \"default\";\n    } else if (Array.isArray(_this.fields.cat)) {\n      _this.fields.cat = _this.fields.cat.join(\",\");\n    }\n\n    if (!_this.fields.args) {\n      // trace-viewer *requires* `args`, so let's have a fallback.\n      _this.fields.args = {};\n    }\n\n    if (_this.parent) {\n      // TODO: Not calling Readable ctor here. Does that cause probs?\n      //      Probably if trying to pipe from the child.\n      //      Might want a serpate TracerChild class for these guys.\n      _this._push = _this.parent._push.bind(_this.parent);\n    } else {\n      _this._objectMode = Boolean(opts.objectMode);\n      var streamOpts = {\n        objectMode: _this._objectMode\n      };\n\n      if (_this._objectMode) {\n        _this._push = _this.push;\n      } else {\n        _this._push = _this._pushString;\n        streamOpts.encoding = \"utf8\";\n      }\n\n      stream_1.Readable.call(_assertThisInitialized(_this), streamOpts);\n    }\n\n    return _this;\n  }\n  /**\n   * If in no streamMode in order to flush out the trace\n   * you need to call flush.\n   */\n\n\n  _createClass(Tracer, [{\n    key: \"flush\",\n    value: function flush() {\n      if (this.noStream === true) {\n        var _iterator = _createForOfIteratorHelper(this.events),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var evt = _step.value;\n\n            this._push(evt);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        this._flush();\n      }\n    }\n  }, {\n    key: \"_read\",\n    value: function _read(_) {}\n  }, {\n    key: \"_pushString\",\n    value: function _pushString(ev) {\n      var separator = \"\";\n\n      if (!this.firstPush) {\n        this.push(\"[\");\n        this.firstPush = true;\n      } else {\n        separator = \",\\n\";\n      }\n\n      this.push(separator + JSON.stringify(ev), \"utf8\");\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush() {\n      if (!this._objectMode) {\n        this.push(\"]\");\n      }\n    }\n  }, {\n    key: \"child\",\n    value: function child(fields) {\n      return new Tracer({\n        parent: this,\n        fields: fields\n      });\n    }\n  }, {\n    key: \"begin\",\n    value: function begin(fields) {\n      return this.mkEventFunc(\"b\")(fields);\n    }\n  }, {\n    key: \"end\",\n    value: function end(fields) {\n      return this.mkEventFunc(\"e\")(fields);\n    }\n  }, {\n    key: \"completeEvent\",\n    value: function completeEvent(fields) {\n      return this.mkEventFunc(\"X\")(fields);\n    }\n  }, {\n    key: \"instantEvent\",\n    value: function instantEvent(fields) {\n      return this.mkEventFunc(\"I\")(fields);\n    }\n  }, {\n    key: \"mkEventFunc\",\n    value: function mkEventFunc(ph) {\n      var _this2 = this;\n\n      return function (fields) {\n        var ev = evCommon(); // Assign the event phase.\n\n        ev.ph = ph;\n\n        if (fields) {\n          if (typeof fields === \"string\") {\n            ev.name = fields;\n          } else {\n            for (var _i = 0, _Object$keys = Object.keys(fields); _i < _Object$keys.length; _i++) {\n              var k = _Object$keys[_i];\n\n              if (k === \"cat\") {\n                ev.cat = fields.cat.join(\",\");\n              } else {\n                ev[k] = fields[k];\n              }\n            }\n          }\n        }\n\n        if (!_this2.noStream) {\n          _this2._push(ev);\n        } else {\n          _this2.events.push(ev);\n        }\n      };\n    }\n  }]);\n\n  return Tracer;\n}(stream_1.Readable);\n\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */","map":{"version":3,"names":["Object","defineProperty","exports","value","Tracer","stream_1","require","evCommon","hrtime","process","ts","Math","round","pid","tid","opts","noStream","events","Error","parent","fields","objectMode","assign","cat","Array","isArray","join","args","_push","bind","_objectMode","Boolean","streamOpts","push","_pushString","encoding","Readable","call","evt","_flush","_","ev","separator","firstPush","JSON","stringify","mkEventFunc","ph","name","keys","k"],"sources":["D:/Work/Project/LMS/lms/node_modules/chrome-trace-event/dist/trace-event.js"],"sourcesContent":["\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst stream_1 = require(\"stream\");\nfunction evCommon() {\n    var hrtime = process.hrtime(); // [seconds, nanoseconds]\n    var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n    return {\n        ts,\n        pid: process.pid,\n        tid: process.pid // no meaningful tid for node.js\n    };\n}\nclass Tracer extends stream_1.Readable {\n    constructor(opts = {}) {\n        super();\n        this.noStream = false;\n        this.events = [];\n        if (typeof opts !== \"object\") {\n            throw new Error(\"Invalid options passed (must be an object)\");\n        }\n        if (opts.parent != null && typeof opts.parent !== \"object\") {\n            throw new Error(\"Invalid option (parent) passed (must be an object)\");\n        }\n        if (opts.fields != null && typeof opts.fields !== \"object\") {\n            throw new Error(\"Invalid option (fields) passed (must be an object)\");\n        }\n        if (opts.objectMode != null &&\n            (opts.objectMode !== true && opts.objectMode !== false)) {\n            throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n        }\n        this.noStream = opts.noStream || false;\n        this.parent = opts.parent;\n        if (this.parent) {\n            this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n        }\n        else {\n            this.fields = {};\n        }\n        if (opts.fields) {\n            Object.assign(this.fields, opts.fields);\n        }\n        if (!this.fields.cat) {\n            // trace-viewer *requires* `cat`, so let's have a fallback.\n            this.fields.cat = \"default\";\n        }\n        else if (Array.isArray(this.fields.cat)) {\n            this.fields.cat = this.fields.cat.join(\",\");\n        }\n        if (!this.fields.args) {\n            // trace-viewer *requires* `args`, so let's have a fallback.\n            this.fields.args = {};\n        }\n        if (this.parent) {\n            // TODO: Not calling Readable ctor here. Does that cause probs?\n            //      Probably if trying to pipe from the child.\n            //      Might want a serpate TracerChild class for these guys.\n            this._push = this.parent._push.bind(this.parent);\n        }\n        else {\n            this._objectMode = Boolean(opts.objectMode);\n            var streamOpts = { objectMode: this._objectMode };\n            if (this._objectMode) {\n                this._push = this.push;\n            }\n            else {\n                this._push = this._pushString;\n                streamOpts.encoding = \"utf8\";\n            }\n            stream_1.Readable.call(this, streamOpts);\n        }\n    }\n    /**\n     * If in no streamMode in order to flush out the trace\n     * you need to call flush.\n     */\n    flush() {\n        if (this.noStream === true) {\n            for (const evt of this.events) {\n                this._push(evt);\n            }\n            this._flush();\n        }\n    }\n    _read(_) { }\n    _pushString(ev) {\n        var separator = \"\";\n        if (!this.firstPush) {\n            this.push(\"[\");\n            this.firstPush = true;\n        }\n        else {\n            separator = \",\\n\";\n        }\n        this.push(separator + JSON.stringify(ev), \"utf8\");\n    }\n    _flush() {\n        if (!this._objectMode) {\n            this.push(\"]\");\n        }\n    }\n    child(fields) {\n        return new Tracer({\n            parent: this,\n            fields: fields\n        });\n    }\n    begin(fields) {\n        return this.mkEventFunc(\"b\")(fields);\n    }\n    end(fields) {\n        return this.mkEventFunc(\"e\")(fields);\n    }\n    completeEvent(fields) {\n        return this.mkEventFunc(\"X\")(fields);\n    }\n    instantEvent(fields) {\n        return this.mkEventFunc(\"I\")(fields);\n    }\n    mkEventFunc(ph) {\n        return (fields) => {\n            var ev = evCommon();\n            // Assign the event phase.\n            ev.ph = ph;\n            if (fields) {\n                if (typeof fields === \"string\") {\n                    ev.name = fields;\n                }\n                else {\n                    for (const k of Object.keys(fields)) {\n                        if (k === \"cat\") {\n                            ev.cat = fields.cat.join(\",\");\n                        }\n                        else {\n                            ev[k] = fields[k];\n                        }\n                    }\n                }\n            }\n            if (!this.noStream) {\n                this._push(ev);\n            }\n            else {\n                this.events.push(ev);\n            }\n        };\n    }\n}\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}