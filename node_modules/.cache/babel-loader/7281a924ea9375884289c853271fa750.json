{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 登录状态\n      isLogin: false,\n      // 查询建议\n      suggestionArray: [],\n      // 查询排行榜表单数据\n      tableData: [],\n      searchText: \"\",\n      select: \"\",\n      //编辑界面数据\n      curEditIndex: 0,\n      editDialogFormVisible: false,\n      editDialogForm: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 从后端api初始化tableData\n    var getBooks = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get(\"/book\");\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n                _this.tableData = res.data;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getBooks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getBooks();\n    this.isLogin = window.sessionStorage.getItem(\"token\") != null;\n  },\n  methods: {\n    handleSelect: function handleSelect(item) {\n      if (this.select == \"\") {\n        this.select = \"book_name\";\n      }\n\n      this.searchText = item;\n    },\n    // 获取搜索建议\n    querySearch: function querySearch(queryString, cb) {\n      var _this2 = this;\n\n      // console.log(str)\n      // 发送后台请求获取搜索建议\n      var getSuggestion = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n          var _yield$_this2$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return _this2.$http({\n                    method: \"get\",\n                    url: \"/book/suggestion?queryKey=\" + (_this2.select != \"\" ? _this2.select : \"book_name\") + \"&queryVal=\" + queryString\n                  });\n\n                case 2:\n                  _yield$_this2$$http = _context2.sent;\n                  res = _yield$_this2$$http.data;\n                  console.log(res.data); // 调用callback返回建议的数据\n\n                  cb(res.data);\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function getSuggestion() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      getSuggestion();\n    },\n    // 寻找书本\n    searchBookItem: function searchBookItem() {\n      var _this3 = this;\n\n      if (this.select === \"\") {\n        return this.$message.error(\"请选择搜索类别\");\n      } else if (this.searchText === \"\") {\n        return this.$message.error(\"请输入搜索内容\");\n      }\n\n      var sbi = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n          var _yield$_this3$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return _this3.$http({\n                    method: \"get\",\n                    url: \"/book\" + \"?\" + _this3.select + \"=\" + _this3.searchText\n                  });\n\n                case 2:\n                  _yield$_this3$$http = _context3.sent;\n                  res = _yield$_this3$$http.data;\n\n                  if (res.code === 200) {\n                    _this3.tableData = res.data;\n\n                    _this3.$message.success(\"搜索成功\");\n                  } else {\n                    _this3.$message.error(\"搜索失败\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function sbi() {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      sbi();\n    },\n    gotoUesr: function gotoUesr() {\n      var _this4 = this;\n\n      // 检验用户登录\n      if (window.sessionStorage.getItem(\"token\") === null) {\n        return this.$confirm(\"请先登录！\", \"提示\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"返回\",\n          type: \"warning\"\n        }).then(function () {\n          _this4.$router.push(\"/login\");\n        });\n      }\n    },\n    // 下载书本\n    downloadBookItem: function downloadBookItem(index, row) {\n      // 检验用户登录\n      if (window.sessionStorage.getItem(\"token\") === null) {\n        return this.$message.error(\"请先登录！\");\n      } // 下载\n      // let downloadURL = this.$http.defaults.baseURL + \"/books/download/\" + row.link + \".txt\"\n\n\n      var downloadURL = row.book_img_url;\n      row.book_dl_count++;\n      window.open(downloadURL, \"_blank\");\n    },\n    // 编辑书本信息\n    editBookItem: function editBookItem(index, row) {\n      // 检验用户登录\n      if (window.sessionStorage.getItem(\"token\") === null) {\n        return this.$message.error(\"请先登录！\");\n      } // 获取表单信息，弹出编辑对话框\n\n\n      this.curEditIndex = index;\n      this.editDialogFormVisible = true;\n      this.editDialogForm = Object.assign({}, row);\n    },\n    // 编辑对话框对话表单提交\n    editDialogFormSubmit: function editDialogFormSubmit() {\n      var _this5 = this;\n\n      // 向后台提交编辑请求\n      var edfs = /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n          var _yield$_this5$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _this5.$http({\n                    method: \"put\",\n                    url: \"/book/\" + _this5.editDialogForm.book_id + \"?access_token=\" + window.sessionStorage.getItem(\"token\"),\n                    data: _this5.editDialogForm\n                  });\n\n                case 2:\n                  _yield$_this5$$http = _context4.sent;\n                  res = _yield$_this5$$http.data;\n\n                  _this5.takeData.splice(_this5.curEditIndex, 1, res.data);\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        }));\n\n        return function edfs() {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n\n      edfs(); // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\n      // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\n\n      this.editDialogFormVisible = false;\n      this.$message.success(\"修改成功\");\n    },\n    // 收藏书本按钮事件\n    takeBookItem: function takeBookItem(index, row) {\n      var _this6 = this;\n\n      // 检验用户登录\n      if (window.sessionStorage.getItem(\"token\") === null) {\n        return this.$message.error(\"请先登录！\");\n      } // 请后后台，收藏书籍\n\n\n      var tbi = /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n          var _yield$_this6$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return _this6.$http({\n                    method: \"post\",\n                    url: \"/collection?access_token=\" + window.sessionStorage.getItem(\"token\"),\n                    data: {\n                      user_id: Number(window.sessionStorage.getItem(\"id\")),\n                      book_id: row.book_id\n                    }\n                  });\n\n                case 2:\n                  _yield$_this6$$http = _context5.sent;\n                  res = _yield$_this6$$http.data;\n\n                  if (res.code === 200) {\n                    _this6.$message.success(\"收藏成功\");\n                  } else {\n                    _this6.$message(\"已收藏\");\n                  }\n\n                case 5:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function tbi() {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n\n      tbi();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","isLogin","suggestionArray","tableData","searchText","select","curEditIndex","editDialogFormVisible","editDialogForm","created","res","getBooks","methods","handleSelect","item","querySearch","queryString","cb","method","url","console","getSuggestion","searchBookItem","sbi","gotoUesr","confirmButtonText","cancelButtonText","type","then","downloadBookItem","index","row","window","editBookItem","editDialogFormSubmit","edfs","takeBookItem","user_id","book_id","tbi"],"sourceRoot":"src/components","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"page-body\">\r\n    <!-- 头部 -->\r\n    <el-header class=\"page-header\">\r\n      <el-col> </el-col>\r\n      <div class=\"user-container\">\r\n        <!-- 用户 -->\r\n\r\n        <a href=\"this.isLogin ? `#/user` : `#/login`\" class=\"userlink\">\r\n          <i class=\"el-icon-user\"\r\n            >&nbsp;{{ this.isLogin ? \"欢迎登录\" : \"游客 去登陆\" }}</i\r\n          >\r\n        </a>\r\n      </div>\r\n    </el-header>\r\n    <!-- 书本显示主体 -->\r\n    <el-container class=\"main-container\">\r\n      <!-- logo -->\r\n      <el-header class=\"logo-container\" height=\"150px\">\r\n        <!-- <a href=\"#/home\" class=\"logo-text\"> -->\r\n        <img src=\"../assets/logo.png\" alt=\"\" />\r\n        <!-- </a> -->\r\n      </el-header>\r\n      <!-- 搜索框 -->\r\n      <el-autocomplete\r\n        placeholder=\"请输入查找内容\"\r\n        v-model=\"searchText\"\r\n        class=\"input-with-select\"\r\n        :fetch-suggestions=\"querySearch\"\r\n        :trigger-on-focus=\"false\"\r\n        @select=\"handleSelect\"\r\n      >\r\n        <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择类别\">\r\n          <el-option label=\"类型\" value=\"class_name\"></el-option>\r\n          <el-option label=\"书名\" value=\"book_name\"></el-option>\r\n          <el-option label=\"作者\" value=\"book_author\"></el-option>\r\n          <el-option label=\"出版社\" value=\"book_addr\"></el-option>\r\n          <el-option label=\"描述信息\" value=\"book_info\"></el-option>\r\n        </el-select>\r\n        <template slot-scope=\"{ item }\">\r\n          {{ item }}\r\n        </template>\r\n        <el-button\r\n          type=\"primer\"\r\n          slot=\"append\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"searchBookItem\"\r\n        ></el-button>\r\n      </el-autocomplete>\r\n      <!-- 显示书本部分 -->\r\n      <el-main>\r\n        <!--书本表格主体部分-->\r\n        <div class=\"divider\">\r\n          <h1>最受欢迎的</h1>\r\n          <el-divider></el-divider>\r\n        </div>\r\n        <!-- 书本信息表格 -->\r\n        <!-- 信息部分 -->\r\n        <el-table :data=\"tableData\" height=\"650px\">\r\n          <el-table-column\r\n            prop=\"class_name\"\r\n            align=\"center\"\r\n            label=\"类型\"\r\n            width=\"130px\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"book_name\"\r\n            align=\"center\"\r\n            label=\"名称\"\r\n            width=\"200px\"\r\n          >\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"book_addr\"\r\n            align=\"center\"\r\n            label=\"出版社\"\r\n            width=\"200px\"\r\n          >\r\n          </el-table-column>\r\n          <!-- <el-table-column prop=\"book_dl_count\" align=\"center\" label=\"下载量\" width=\"130px\">\r\n          </el-table-column> -->\r\n          <el-table-column\r\n            prop=\"book_info\"\r\n            align=\"center\"\r\n            label=\"描述信息\"\r\n            width=\"230px\"\r\n            show-overflow-tooltip\r\n          >\r\n            <!-- 操作部分 -->\r\n          </el-table-column>\r\n          <el-table-column fixed=\"right\" align=\"center\" label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button\r\n                @click=\"downloadBookItem(scope.$index, scope.row)\"\r\n                icon=\"el-icon-download\"\r\n                circle\r\n              ></el-button>\r\n              <el-button\r\n                type=\"primary\"\r\n                icon=\"el-icon-edit\"\r\n                circle\r\n                @click=\"editBookItem(scope.$index, scope.row)\"\r\n              >\r\n              </el-button>\r\n              <el-button\r\n                type=\"warning\"\r\n                icon=\"el-icon-star-off\"\r\n                circle\r\n                @click=\"takeBookItem(scope.$index, scope.row)\"\r\n              >\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        <!--编辑界面-->\r\n        <el-dialog\r\n          title=\"编辑书籍\"\r\n          :visible.sync=\"editDialogFormVisible\"\r\n          :close-on-click-modal=\"false\"\r\n          :append-to-body=\"true\"\r\n        >\r\n          <!--editDialogForm表单提交的数据-->\r\n          <el-form\r\n            :model=\"editDialogForm\"\r\n            label-width=\"80px\"\r\n            ref=\"editDialogForm\"\r\n          >\r\n            <el-form-item label=\"类型\" prop=\"class_name\">\r\n              <el-input\r\n                v-model=\"editDialogForm.class_name\"\r\n                auto-complete=\"off\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"名称\" prop=\"book_name\">\r\n              <el-input\r\n                v-model=\"editDialogForm.book_name\"\r\n                auto-complete=\"off\"\r\n                readonly\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"描述信息\" prop=\"book_info\">\r\n              <el-input\r\n                type=\"textarea\"\r\n                v-model=\"editDialogForm.book_info\"\r\n                autosize\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editDialogFormVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"editDialogFormSubmit\"\r\n              >确 定</el-button\r\n            >\r\n          </div>\r\n        </el-dialog>\r\n      </el-main>\r\n      <el-fonter> </el-fonter>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 登录状态\r\n      isLogin: false,\r\n      // 查询建议\r\n      suggestionArray: [],\r\n      // 查询排行榜表单数据\r\n      tableData: [],\r\n      searchText: \"\",\r\n      select: \"\",\r\n      //编辑界面数据\r\n      curEditIndex: 0,\r\n      editDialogFormVisible: false,\r\n      editDialogForm: {},\r\n    };\r\n  },\r\n  created() {\r\n    // 从后端api初始化tableData\r\n    let getBooks = async () => {\r\n      const { data: res } = await this.$http.get(\"/book\");\r\n      this.tableData = res.data;\r\n    };\r\n    getBooks();\r\n    this.isLogin = window.sessionStorage.getItem(\"token\") != null;\r\n  },\r\n  methods: {\r\n    handleSelect(item) {\r\n      if (this.select == \"\") {\r\n        this.select = \"book_name\";\r\n      }\r\n      this.searchText = item;\r\n    },\r\n    // 获取搜索建议\r\n    querySearch(queryString, cb) {\r\n      // console.log(str)\r\n      // 发送后台请求获取搜索建议\r\n      let getSuggestion = async () => {\r\n        const { data: res } = await this.$http({\r\n          method: \"get\",\r\n          url:\r\n            \"/book/suggestion?queryKey=\" +\r\n            (this.select != \"\" ? this.select : \"book_name\") +\r\n            \"&queryVal=\" +\r\n            queryString,\r\n        });\r\n        console.log(res.data);\r\n        // 调用callback返回建议的数据\r\n        cb(res.data);\r\n      };\r\n      getSuggestion();\r\n    },\r\n\r\n    // 寻找书本\r\n    searchBookItem() {\r\n      if (this.select === \"\") {\r\n        return this.$message.error(\"请选择搜索类别\");\r\n      } else if (this.searchText === \"\") {\r\n        return this.$message.error(\"请输入搜索内容\");\r\n      }\r\n      let sbi = async () => {\r\n        const { data: res } = await this.$http({\r\n          method: \"get\",\r\n          url: \"/book\" + \"?\" + this.select + \"=\" + this.searchText,\r\n        });\r\n        if (res.code === 200) {\r\n          this.tableData = res.data;\r\n          this.$message.success(\"搜索成功\");\r\n        } else {\r\n          this.$message.error(\"搜索失败\");\r\n        }\r\n      };\r\n      sbi();\r\n    },\r\n    gotoUesr() {\r\n      // 检验用户登录\r\n      if (window.sessionStorage.getItem(\"token\") === null) {\r\n        return this.$confirm(\"请先登录！\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"返回\",\r\n          type: \"warning\",\r\n        }).then(() => {\r\n          this.$router.push(\"/login\");\r\n        });\r\n      }\r\n    },\r\n    // 下载书本\r\n    downloadBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (window.sessionStorage.getItem(\"token\") === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 下载\r\n      // let downloadURL = this.$http.defaults.baseURL + \"/books/download/\" + row.link + \".txt\"\r\n      let downloadURL = row.book_img_url;\r\n      row.book_dl_count++;\r\n      window.open(downloadURL, \"_blank\");\r\n    },\r\n    // 编辑书本信息\r\n    editBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (window.sessionStorage.getItem(\"token\") === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 获取表单信息，弹出编辑对话框\r\n      this.curEditIndex = index;\r\n      this.editDialogFormVisible = true;\r\n      this.editDialogForm = Object.assign({}, row);\r\n    },\r\n    // 编辑对话框对话表单提交\r\n    editDialogFormSubmit() {\r\n      // 向后台提交编辑请求\r\n      let edfs = async () => {\r\n        const { data: res } = await this.$http({\r\n          method: \"put\",\r\n          url:\r\n            \"/book/\" +\r\n            this.editDialogForm.book_id +\r\n            \"?access_token=\" +\r\n            window.sessionStorage.getItem(\"token\"),\r\n          data: this.editDialogForm,\r\n        });\r\n        this.takeData.splice(this.curEditIndex, 1, res.data);\r\n      };\r\n      edfs();\r\n      // 渲染页面,只修改页面上单个修改的书籍,不再向后端请求所有书籍\r\n      // this.tableData.splice(this.curEditIndex, 1, this.editDialogForm);\r\n      this.editDialogFormVisible = false;\r\n      this.$message.success(\"修改成功\");\r\n    },\r\n    // 收藏书本按钮事件\r\n    takeBookItem(index, row) {\r\n      // 检验用户登录\r\n      if (window.sessionStorage.getItem(\"token\") === null) {\r\n        return this.$message.error(\"请先登录！\");\r\n      }\r\n      // 请后后台，收藏书籍\r\n      let tbi = async () => {\r\n        const { data: res } = await this.$http({\r\n          method: \"post\",\r\n          url:\r\n            \"/collection?access_token=\" +\r\n            window.sessionStorage.getItem(\"token\"),\r\n          data: {\r\n            user_id: Number(window.sessionStorage.getItem(\"id\")),\r\n            book_id: row.book_id,\r\n          },\r\n        });\r\n        if (res.code === 200) {\r\n          this.$message.success(\"收藏成功\");\r\n        } else {\r\n          this.$message(\"已收藏\");\r\n        }\r\n      };\r\n      tbi();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 主页容器\r\n.page-body {\r\n  height: 1500px;\r\n  width: 100%;\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n// 头部设置\r\n.page-header {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  background-color: rgb(71, 70, 70);\r\n  box-shadow: 0 4px 14px 0 rgb(0 0 0 / 5%);\r\n}\r\n\r\n//用户容器样式\r\n.user-container {\r\n  margin: 15px 10px;\r\n  a {\r\n    text-decoration: none;\r\n    color: #f2f2f2;\r\n    :hover {\r\n      color: #49afd0;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n// 内容容器\r\n.main-container {\r\n  width: 70%;\r\n  line-height: 30px;\r\n  margin: 20px auto;\r\n  background-color: white;\r\n  box-shadow: 0 4px 14px 0 rgb(0 0 0 / 5%);\r\n}\r\n\r\n// logo样式\r\n.logo-container {\r\n  text-align: center;\r\n  margin: 10px auto;\r\n  img {\r\n    height: 100%;\r\n  }\r\n}\r\n\r\n//搜索框样式\r\n.input-with-select {\r\n  margin: 30px auto;\r\n  width: 70%;\r\n  // height: 10%;\r\n}\r\n// 搜索框选择列表样式\r\n.el-input {\r\n  .el-select {\r\n    width: 130px;\r\n  }\r\n}\r\n\r\n// 设置分割线\r\n.divider {\r\n  margin-top: 25px;\r\n  color: #49afd0;\r\n  font-size: 16pt;\r\n  // 分割线容器\r\n  .el-divider {\r\n    background-color: #49afd0;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}