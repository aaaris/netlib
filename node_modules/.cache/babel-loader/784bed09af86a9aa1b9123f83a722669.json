{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nvar Hook = require(\"./Hook\");\n\nvar MultiHook = /*#__PURE__*/function () {\n  function MultiHook(hooks) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, MultiHook);\n\n    this.hooks = hooks;\n    this.name = name;\n  }\n\n  _createClass(MultiHook, [{\n    key: \"tap\",\n    value: function tap(options, fn) {\n      var _iterator = _createForOfIteratorHelper(this.hooks),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var hook = _step.value;\n          hook.tap(options, fn);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"tapAsync\",\n    value: function tapAsync(options, fn) {\n      var _iterator2 = _createForOfIteratorHelper(this.hooks),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var hook = _step2.value;\n          hook.tapAsync(options, fn);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise(options, fn) {\n      var _iterator3 = _createForOfIteratorHelper(this.hooks),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var hook = _step3.value;\n          hook.tapPromise(options, fn);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"isUsed\",\n    value: function isUsed() {\n      var _iterator4 = _createForOfIteratorHelper(this.hooks),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var hook = _step4.value;\n          if (hook.isUsed()) return true;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(interceptor) {\n      var _iterator5 = _createForOfIteratorHelper(this.hooks),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var hook = _step5.value;\n          hook.intercept(interceptor);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      return new MultiHook(this.hooks.map(function (h) {\n        return h.withOptions(options);\n      }), this.name);\n    }\n  }]);\n\n  return MultiHook;\n}();\n\nmodule.exports = MultiHook;","map":{"version":3,"names":["Hook","require","MultiHook","hooks","name","undefined","options","fn","hook","tap","tapAsync","tapPromise","isUsed","interceptor","intercept","map","h","withOptions","module","exports"],"sources":["D:/Work/Project/LMS/lms/node_modules/tapable/lib/MultiHook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nclass MultiHook {\n\tconstructor(hooks, name = undefined) {\n\t\tthis.hooks = hooks;\n\t\tthis.name = name;\n\t}\n\n\ttap(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tap(options, fn);\n\t\t}\n\t}\n\n\ttapAsync(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tapAsync(options, fn);\n\t\t}\n\t}\n\n\ttapPromise(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tapPromise(options, fn);\n\t\t}\n\t}\n\n\tisUsed() {\n\t\tfor (const hook of this.hooks) {\n\t\t\tif (hook.isUsed()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tintercept(interceptor) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.intercept(interceptor);\n\t\t}\n\t}\n\n\twithOptions(options) {\n\t\treturn new MultiHook(\n\t\t\tthis.hooks.map(h => h.withOptions(options)),\n\t\t\tthis.name\n\t\t);\n\t}\n}\n\nmodule.exports = MultiHook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;IAEMC,S;EACL,mBAAYC,KAAZ,EAAqC;IAAA,IAAlBC,IAAkB,uEAAXC,SAAW;;IAAA;;IACpC,KAAKF,KAAL,GAAaA,KAAb;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACA;;;;WAED,aAAIE,OAAJ,EAAaC,EAAb,EAAiB;MAAA,2CACG,KAAKJ,KADR;MAAA;;MAAA;QAChB,oDAA+B;UAAA,IAApBK,IAAoB;UAC9BA,IAAI,CAACC,GAAL,CAASH,OAAT,EAAkBC,EAAlB;QACA;MAHe;QAAA;MAAA;QAAA;MAAA;IAIhB;;;WAED,kBAASD,OAAT,EAAkBC,EAAlB,EAAsB;MAAA,4CACF,KAAKJ,KADH;MAAA;;MAAA;QACrB,uDAA+B;UAAA,IAApBK,IAAoB;UAC9BA,IAAI,CAACE,QAAL,CAAcJ,OAAd,EAAuBC,EAAvB;QACA;MAHoB;QAAA;MAAA;QAAA;MAAA;IAIrB;;;WAED,oBAAWD,OAAX,EAAoBC,EAApB,EAAwB;MAAA,4CACJ,KAAKJ,KADD;MAAA;;MAAA;QACvB,uDAA+B;UAAA,IAApBK,IAAoB;UAC9BA,IAAI,CAACG,UAAL,CAAgBL,OAAhB,EAAyBC,EAAzB;QACA;MAHsB;QAAA;MAAA;QAAA;MAAA;IAIvB;;;WAED,kBAAS;MAAA,4CACW,KAAKJ,KADhB;MAAA;;MAAA;QACR,uDAA+B;UAAA,IAApBK,IAAoB;UAC9B,IAAIA,IAAI,CAACI,MAAL,EAAJ,EAAmB,OAAO,IAAP;QACnB;MAHO;QAAA;MAAA;QAAA;MAAA;;MAIR,OAAO,KAAP;IACA;;;WAED,mBAAUC,WAAV,EAAuB;MAAA,4CACH,KAAKV,KADF;MAAA;;MAAA;QACtB,uDAA+B;UAAA,IAApBK,IAAoB;UAC9BA,IAAI,CAACM,SAAL,CAAeD,WAAf;QACA;MAHqB;QAAA;MAAA;QAAA;MAAA;IAItB;;;WAED,qBAAYP,OAAZ,EAAqB;MACpB,OAAO,IAAIJ,SAAJ,CACN,KAAKC,KAAL,CAAWY,GAAX,CAAe,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,WAAF,CAAcX,OAAd,CAAJ;MAAA,CAAhB,CADM,EAEN,KAAKF,IAFC,CAAP;IAIA;;;;;;AAGFc,MAAM,CAACC,OAAP,GAAiBjB,SAAjB"},"metadata":{},"sourceType":"script"}