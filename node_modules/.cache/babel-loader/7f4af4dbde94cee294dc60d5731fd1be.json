{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar createMappingsSerializer = require(\"./createMappingsSerializer\");\n\nvar streamChunks = require(\"./streamChunks\");\n\nvar streamAndGetSourceAndMap = function streamAndGetSourceAndMap(inputSource, options, onChunk, onSource, onName) {\n  var code = \"\";\n  var mappings = \"\";\n  var sources = [];\n  var sourcesContent = [];\n  var names = [];\n  var addMapping = createMappingsSerializer(Object.assign({}, options, {\n    columns: true\n  }));\n  var finalSource = !!(options && options.finalSource);\n\n  var _streamChunks = streamChunks(inputSource, options, function (chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex) {\n    if (chunk !== undefined) code += chunk;\n    mappings += addMapping(generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n    return onChunk(finalSource ? undefined : chunk, generatedLine, generatedColumn, sourceIndex, originalLine, originalColumn, nameIndex);\n  }, function (sourceIndex, source, sourceContent) {\n    while (sources.length < sourceIndex) {\n      sources.push(null);\n    }\n\n    sources[sourceIndex] = source;\n\n    if (sourceContent !== undefined) {\n      while (sourcesContent.length < sourceIndex) {\n        sourcesContent.push(null);\n      }\n\n      sourcesContent[sourceIndex] = sourceContent;\n    }\n\n    return onSource(sourceIndex, source, sourceContent);\n  }, function (nameIndex, name) {\n    while (names.length < nameIndex) {\n      names.push(null);\n    }\n\n    names[nameIndex] = name;\n    return onName(nameIndex, name);\n  }),\n      generatedLine = _streamChunks.generatedLine,\n      generatedColumn = _streamChunks.generatedColumn,\n      source = _streamChunks.source;\n\n  var resultSource = source !== undefined ? source : code;\n  return {\n    result: {\n      generatedLine: generatedLine,\n      generatedColumn: generatedColumn,\n      source: finalSource ? resultSource : undefined\n    },\n    source: resultSource,\n    map: mappings.length > 0 ? {\n      version: 3,\n      file: \"x\",\n      mappings: mappings,\n      sources: sources,\n      sourcesContent: sourcesContent.length > 0 ? sourcesContent : undefined,\n      names: names\n    } : null\n  };\n};\n\nmodule.exports = streamAndGetSourceAndMap;","map":{"version":3,"names":["createMappingsSerializer","require","streamChunks","streamAndGetSourceAndMap","inputSource","options","onChunk","onSource","onName","code","mappings","sources","sourcesContent","names","addMapping","Object","assign","columns","finalSource","chunk","generatedLine","generatedColumn","sourceIndex","originalLine","originalColumn","nameIndex","undefined","source","sourceContent","length","push","name","resultSource","result","map","version","file","module","exports"],"sources":["D:/Work/Project/LMS/lms/node_modules/webpack-sources/lib/helpers/streamAndGetSourceAndMap.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst createMappingsSerializer = require(\"./createMappingsSerializer\");\nconst streamChunks = require(\"./streamChunks\");\n\nconst streamAndGetSourceAndMap = (\n\tinputSource,\n\toptions,\n\tonChunk,\n\tonSource,\n\tonName\n) => {\n\tlet code = \"\";\n\tlet mappings = \"\";\n\tlet sources = [];\n\tlet sourcesContent = [];\n\tlet names = [];\n\tconst addMapping = createMappingsSerializer(\n\t\tObject.assign({}, options, { columns: true })\n\t);\n\tconst finalSource = !!(options && options.finalSource);\n\tconst { generatedLine, generatedColumn, source } = streamChunks(\n\t\tinputSource,\n\t\toptions,\n\t\t(\n\t\t\tchunk,\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsourceIndex,\n\t\t\toriginalLine,\n\t\t\toriginalColumn,\n\t\t\tnameIndex\n\t\t) => {\n\t\t\tif (chunk !== undefined) code += chunk;\n\t\t\tmappings += addMapping(\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t\treturn onChunk(\n\t\t\t\tfinalSource ? undefined : chunk,\n\t\t\t\tgeneratedLine,\n\t\t\t\tgeneratedColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\toriginalLine,\n\t\t\t\toriginalColumn,\n\t\t\t\tnameIndex\n\t\t\t);\n\t\t},\n\t\t(sourceIndex, source, sourceContent) => {\n\t\t\twhile (sources.length < sourceIndex) {\n\t\t\t\tsources.push(null);\n\t\t\t}\n\t\t\tsources[sourceIndex] = source;\n\t\t\tif (sourceContent !== undefined) {\n\t\t\t\twhile (sourcesContent.length < sourceIndex) {\n\t\t\t\t\tsourcesContent.push(null);\n\t\t\t\t}\n\t\t\t\tsourcesContent[sourceIndex] = sourceContent;\n\t\t\t}\n\t\t\treturn onSource(sourceIndex, source, sourceContent);\n\t\t},\n\t\t(nameIndex, name) => {\n\t\t\twhile (names.length < nameIndex) {\n\t\t\t\tnames.push(null);\n\t\t\t}\n\t\t\tnames[nameIndex] = name;\n\t\t\treturn onName(nameIndex, name);\n\t\t}\n\t);\n\tconst resultSource = source !== undefined ? source : code;\n\treturn {\n\t\tresult: {\n\t\t\tgeneratedLine,\n\t\t\tgeneratedColumn,\n\t\t\tsource: finalSource ? resultSource : undefined\n\t\t},\n\t\tsource: resultSource,\n\t\tmap:\n\t\t\tmappings.length > 0\n\t\t\t\t? {\n\t\t\t\t\t\tversion: 3,\n\t\t\t\t\t\tfile: \"x\",\n\t\t\t\t\t\tmappings,\n\t\t\t\t\t\tsources,\n\t\t\t\t\t\tsourcesContent:\n\t\t\t\t\t\t\tsourcesContent.length > 0 ? sourcesContent : undefined,\n\t\t\t\t\t\tnames\n\t\t\t\t  }\n\t\t\t\t: null\n\t};\n};\n\nmodule.exports = streamAndGetSourceAndMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,IAAMA,wBAAwB,GAAGC,OAAO,CAAC,4BAAD,CAAxC;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAChCC,WADgC,EAEhCC,OAFgC,EAGhCC,OAHgC,EAIhCC,QAJgC,EAKhCC,MALgC,EAM5B;EACJ,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,OAAO,GAAG,EAAd;EACA,IAAIC,cAAc,GAAG,EAArB;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAMC,UAAU,GAAGd,wBAAwB,CAC1Ce,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBX,OAAlB,EAA2B;IAAEY,OAAO,EAAE;EAAX,CAA3B,CAD0C,CAA3C;EAGA,IAAMC,WAAW,GAAG,CAAC,EAAEb,OAAO,IAAIA,OAAO,CAACa,WAArB,CAArB;;EACA,oBAAmDhB,YAAY,CAC9DE,WAD8D,EAE9DC,OAF8D,EAG9D,UACCc,KADD,EAECC,aAFD,EAGCC,eAHD,EAICC,WAJD,EAKCC,YALD,EAMCC,cAND,EAOCC,SAPD,EAQK;IACJ,IAAIN,KAAK,KAAKO,SAAd,EAAyBjB,IAAI,IAAIU,KAAR;IACzBT,QAAQ,IAAII,UAAU,CACrBM,aADqB,EAErBC,eAFqB,EAGrBC,WAHqB,EAIrBC,YAJqB,EAKrBC,cALqB,EAMrBC,SANqB,CAAtB;IAQA,OAAOnB,OAAO,CACbY,WAAW,GAAGQ,SAAH,GAAeP,KADb,EAEbC,aAFa,EAGbC,eAHa,EAIbC,WAJa,EAKbC,YALa,EAMbC,cANa,EAObC,SAPa,CAAd;EASA,CA9B6D,EA+B9D,UAACH,WAAD,EAAcK,MAAd,EAAsBC,aAAtB,EAAwC;IACvC,OAAOjB,OAAO,CAACkB,MAAR,GAAiBP,WAAxB,EAAqC;MACpCX,OAAO,CAACmB,IAAR,CAAa,IAAb;IACA;;IACDnB,OAAO,CAACW,WAAD,CAAP,GAAuBK,MAAvB;;IACA,IAAIC,aAAa,KAAKF,SAAtB,EAAiC;MAChC,OAAOd,cAAc,CAACiB,MAAf,GAAwBP,WAA/B,EAA4C;QAC3CV,cAAc,CAACkB,IAAf,CAAoB,IAApB;MACA;;MACDlB,cAAc,CAACU,WAAD,CAAd,GAA8BM,aAA9B;IACA;;IACD,OAAOrB,QAAQ,CAACe,WAAD,EAAcK,MAAd,EAAsBC,aAAtB,CAAf;EACA,CA3C6D,EA4C9D,UAACH,SAAD,EAAYM,IAAZ,EAAqB;IACpB,OAAOlB,KAAK,CAACgB,MAAN,GAAeJ,SAAtB,EAAiC;MAChCZ,KAAK,CAACiB,IAAN,CAAW,IAAX;IACA;;IACDjB,KAAK,CAACY,SAAD,CAAL,GAAmBM,IAAnB;IACA,OAAOvB,MAAM,CAACiB,SAAD,EAAYM,IAAZ,CAAb;EACA,CAlD6D,CAA/D;EAAA,IAAQX,aAAR,iBAAQA,aAAR;EAAA,IAAuBC,eAAvB,iBAAuBA,eAAvB;EAAA,IAAwCM,MAAxC,iBAAwCA,MAAxC;;EAoDA,IAAMK,YAAY,GAAGL,MAAM,KAAKD,SAAX,GAAuBC,MAAvB,GAAgClB,IAArD;EACA,OAAO;IACNwB,MAAM,EAAE;MACPb,aAAa,EAAbA,aADO;MAEPC,eAAe,EAAfA,eAFO;MAGPM,MAAM,EAAET,WAAW,GAAGc,YAAH,GAAkBN;IAH9B,CADF;IAMNC,MAAM,EAAEK,YANF;IAONE,GAAG,EACFxB,QAAQ,CAACmB,MAAT,GAAkB,CAAlB,GACG;MACAM,OAAO,EAAE,CADT;MAEAC,IAAI,EAAE,GAFN;MAGA1B,QAAQ,EAARA,QAHA;MAIAC,OAAO,EAAPA,OAJA;MAKAC,cAAc,EACbA,cAAc,CAACiB,MAAf,GAAwB,CAAxB,GAA4BjB,cAA5B,GAA6Cc,SAN9C;MAOAb,KAAK,EAALA;IAPA,CADH,GAUG;EAlBE,CAAP;AAoBA,CAzFD;;AA2FAwB,MAAM,CAACC,OAAP,GAAiBnC,wBAAjB"},"metadata":{},"sourceType":"script"}