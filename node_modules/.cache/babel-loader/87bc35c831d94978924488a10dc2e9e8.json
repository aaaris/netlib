{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var _this = this;\n\n    //   验证输入用户名\n    var validateUserName = function validateUserName(rule, value, callback) {\n      // if (value === \"\") {\n      //   callback(new Error(\"请输入用户名\"));\n      // } else {\n      callback(); // }\n    }; // 验证输入密码\n\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入新密码\"));\n      } else if (value.length < 6 || value.length > 15) {\n        callback(new Error(\"长度在6到15个字符\"));\n      } else {\n        if (_this.registerForm.checkPw !== \"\") {\n          _this.$refs.registerFormRef.validateField(\"checkPw\");\n        }\n\n        callback();\n      }\n    }; // 验证再次输入的密码\n\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.registerForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else if (value.length < 6 || value.length > 15) {\n        callback(new Error(\"长度在6到15个字符\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      // 用户信息对象\n      user: {},\n      // 重置密码表单\n      resetPwdForm: {\n        username: \"\",\n        password: \"\",\n        checkPw: \"\"\n      },\n      //   规则验证对象\n      resetPwdFormRules: {\n        username: [{\n          validator: validateUserName,\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        checkPw: [{\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      },\n      // 收藏表格数据\n      tableData: [],\n      // 上传窗口\n      uploadDialogVisiable: false,\n      // 设置窗口\n      resetPwdDialogVisiable: false\n    };\n  },\n  created: function created() {\n    var _this2 = this;\n\n    var getUser = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this2$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this2.$http.get(\"/user/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\"));\n\n              case 2:\n                _yield$_this2$$http$g = _context.sent;\n                res = _yield$_this2$$http$g.data;\n                _this2.user = res.data; // console.log(this.user)\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getUser(); // 从后端api初始化tableData\n\n    var getCollections = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http$g2, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http.get(\"/collection/\" + window.sessionStorage.getItem(\"id\") + \"?access_token=\" + window.sessionStorage.getItem(\"token\"));\n\n              case 2:\n                _yield$_this2$$http$g2 = _context2.sent;\n                res = _yield$_this2$$http$g2.data;\n                _this2.tableData = res.data;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getCollections() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getCollections();\n  },\n  methods: {\n    // 返回主页\n    goBack: function goBack() {\n      this.$router.push(\"/home\");\n    },\n    // 注销\n    logout: function logout() {\n      var _this3 = this;\n\n      this.$confirm(\"亲，您确定要退出登录吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        window.sessionStorage.removeItem(\"id\");\n        window.sessionStorage.removeItem(\"token\"); // console.log(window.sessionStorage.length)\n\n        _this3.goBack();\n      });\n    },\n    // 重新设置密码\n    resetUserPwd: function resetUserPwd(formName) {\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置密码表单\n    resetResetPwdForm: function resetResetPwdForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    // 删除收藏书籍\n    deleteBookItem: function deleteBookItem(index, row) {\n      var _this4 = this;\n\n      // 弹窗询问\n      this.$confirm(\"是否取消收藏该书籍\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        // 确定按钮逻辑\n        // 向后台发送删除请求\n        var delCollection = /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n            var _yield$_this4$$http, res;\n\n            return regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return _this4.$http({\n                      method: \"delete\",\n                      url: \"/collection?access_token=\" + window.sessionStorage.getItem(\"token\"),\n                      data: {\n                        user_id: _this4.user.user_id,\n                        book_id: row.book_id\n                      }\n                    });\n\n                  case 2:\n                    _yield$_this4$$http = _context4.sent;\n                    res = _yield$_this4$$http.data;\n\n                    if (res.code === 200) {\n                      // 删除页面上表单\n                      _this4.tableData.splice(index, 1); // 删除成功提示\n\n\n                      _this4.$message({\n                        type: \"success\",\n                        message: \"已不再收藏该书籍!\"\n                      });\n                    } else {\n                      // 删除失败提示\n                      _this4.$message({\n                        type: \"error\",\n                        message: res.data\n                      });\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function delCollection() {\n            return _ref4.apply(this, arguments);\n          };\n        }();\n\n        delCollection();\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","callback","user","resetPwdForm","username","password","checkPw","resetPwdFormRules","validator","trigger","tableData","uploadDialogVisiable","resetPwdDialogVisiable","created","window","res","getUser","getCollections","methods","goBack","logout","confirmButtonText","cancelButtonText","type","then","resetUserPwd","formName","valid","resetResetPwdForm","deleteBookItem","index","row","method","url","user_id","book_id","message","delCollection"],"sourceRoot":"src/components","sources":["User.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"page-container\">\r\n    <!-- 网页头部 -->\r\n    <el-header class=\"p\">\r\n      <el-row>\r\n        <el-col :span=\"6\"> </el-col>\r\n      </el-row>\r\n    </el-header>\r\n    <!-- 网页主体 -->\r\n    <el-container>\r\n      <!-- 侧边栏 -->\r\n      <el-aside class=\"user-tabs-container\">\r\n        <!-- 用户头像 -->\r\n        <div class=\"user-avatar-container\">\r\n          <img src=\"../assets/user/default.png\" />\r\n        </div>\r\n        <!-- 用户信息 -->\r\n        <div class=\"userItem\">\r\n          <h2>个人信息</h2>\r\n          <span>账号: {{ user.user_id }}</span\r\n          ><br />\r\n          <span>用户名: {{ user.user_name }}</span>\r\n        </div>\r\n        <!-- 用户设置 -->\r\n        <br /><br /><br />\r\n        <el-button type=\"primary\" plain @click=\"resetPwdDialogVisiable = true\"\r\n          >重设密码\r\n        </el-button>\r\n        <el-button type=\"danger\" plain @click=\"logout\">注销 </el-button>\r\n        <el-dialog\r\n          title=\"设置新密码\"\r\n          :visible.sync=\"resetPwdDialogVisiable\"\r\n          width=\"60%\"\r\n        >\r\n          <el-form\r\n            ref=\"resetPwdFormRef\"\r\n            :model=\"resetPwdForm\"\r\n            :rules=\"resetPwdFormRules\"\r\n            status-icon\r\n            class=\"register_form\"\r\n          >\r\n            <!-- username -->\r\n            <el-form-item prop=\"username\">\r\n              <el-input\r\n                v-model=\"resetPwdForm.username\"\r\n                prefix-icon=\"el-icon-user-solid\"\r\n                placeholder=\"username\"\r\n              >\r\n              </el-input>\r\n            </el-form-item>\r\n            <!-- password -->\r\n            <el-form-item prop=\"password\">\r\n              <el-input\r\n                type=\"password\"\r\n                v-model=\"resetPwdForm.password\"\r\n                prefix-icon=\"el-icon-lock\"\r\n                placeholder=\"password\"\r\n              >\r\n              </el-input>\r\n            </el-form-item>\r\n            <!-- 确认密码 -->\r\n            <el-form-item prop=\"checkPw\">\r\n              <el-input\r\n                type=\"password\"\r\n                prefix-icon=\"el-icon-lock\"\r\n                v-model=\"resetPwdForm.checkPw\"\r\n                placeholder=\"check password\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <!-- 按钮 -->\r\n            <el-form-item class=\"btns\">\r\n              <el-button type=\"primary\" @click=\"resetUserPwd('resetPwdFormRef')\"\r\n                >确定</el-button\r\n              >\r\n              <el-button\r\n                type=\"info\"\r\n                @click=\"resetResetPwdForm('resetPwdFormRef')\"\r\n                >重置</el-button\r\n              >\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-dialog>\r\n      </el-aside>\r\n      <!-- 用户行为主体 -->\r\n      <el-main class=\"page-main-contain\">\r\n        <el-tabs tab-position=\"top\">\r\n          <!-- 用户收藏 -->\r\n          <el-tab-pane label=\"我的收藏\">\r\n            <el-table class=\"tableClass\" :data=\"tableData\">\r\n              <el-table-column\r\n                prop=\"class_name\"\r\n                align=\"center\"\r\n                label=\"类型\"\r\n                width=\"130px\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                prop=\"book_name\"\r\n                align=\"center\"\r\n                label=\"名称\"\r\n                width=\"200px\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                prop=\"book_author\"\r\n                align=\"center\"\r\n                label=\"作者\"\r\n                width=\"200px\"\r\n              >\r\n              </el-table-column>\r\n              <el-table-column\r\n                prop=\"book_addr\"\r\n                align=\"center\"\r\n                label=\"出版社\"\r\n                width=\"200px\"\r\n              >\r\n              </el-table-column>\r\n              <!-- <el-table-column prop=\"book_dl_count\" align=\"center\" label=\"下载量\" width=\"130px\">\r\n              </el-table-column> -->\r\n              <el-table-column\r\n                prop=\"book_info\"\r\n                align=\"center\"\r\n                label=\"描述性息\"\r\n                width=\"230px\"\r\n                show-overflow-tooltip\r\n              >\r\n              </el-table-column>\r\n              <el-table-column align=\"center\" label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button\r\n                    @click=\"deleteBookItem(scope.$index, scope.row)\"\r\n                    icon=\"el-icon-star-on\"\r\n                    circle\r\n                  ></el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n            <!-- 用户上传书籍 -->\r\n          </el-tab-pane>\r\n          <!-- 用户上传 -->\r\n          <el-tab-pane label=\"我的上传\">\r\n            <el-button\r\n              icon=\"el-icon-upload2\"\r\n              @click=\"uploadDialogVisiable = true\"\r\n            >\r\n            </el-button>\r\n            <!-- 上传弹窗 -->\r\n            <el-dialog\r\n              title=\"上传书籍\"\r\n              :visible.sync=\"uploadDialogVisiable\"\r\n              width=\"60%\"\r\n            >\r\n              <el-upload\r\n                class=\"upload-demo\"\r\n                drag\r\n                action=\"https://jsonplaceholder.typicode.com/posts/\"\r\n                multiple\r\n              >\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">\r\n                  将文件拖到此处，或<em>点击上传</em>\r\n                </div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">\r\n                  只能上传jpg/png文件，且不超过500kb\r\n                </div>\r\n              </el-upload>\r\n            </el-dialog>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    //   验证输入用户名\r\n    var validateUserName = (rule, value, callback) => {\r\n      // if (value === \"\") {\r\n      //   callback(new Error(\"请输入用户名\"));\r\n      // } else {\r\n      callback();\r\n      // }\r\n    };\r\n    // 验证输入密码\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入新密码\"));\r\n      } else if (value.length < 6 || value.length > 15) {\r\n        callback(new Error(\"长度在6到15个字符\"));\r\n      } else {\r\n        if (this.registerForm.checkPw !== \"\") {\r\n          this.$refs.registerFormRef.validateField(\"checkPw\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    // 验证再次输入的密码\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.registerForm.password) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else if (value.length < 6 || value.length > 15) {\r\n        callback(new Error(\"长度在6到15个字符\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      // 用户信息对象\r\n      user: {},\r\n      // 重置密码表单\r\n      resetPwdForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checkPw: \"\",\r\n      },\r\n      //   规则验证对象\r\n      resetPwdFormRules: {\r\n        username: [{ validator: validateUserName, trigger: \"blur\" }],\r\n        password: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkPw: [{ validator: validatePass2, trigger: \"blur\" }],\r\n      },\r\n      // 收藏表格数据\r\n      tableData: [],\r\n      // 上传窗口\r\n      uploadDialogVisiable: false,\r\n      // 设置窗口\r\n      resetPwdDialogVisiable: false,\r\n    };\r\n  },\r\n  created() {\r\n    let getUser = async () => {\r\n      const { data: res } = await this.$http.get(\r\n        \"/user/\" +\r\n          window.sessionStorage.getItem(\"id\") +\r\n          \"?access_token=\" +\r\n          window.sessionStorage.getItem(\"token\")\r\n      );\r\n      this.user = res.data;\r\n      // console.log(this.user)\r\n    };\r\n    getUser();\r\n    // 从后端api初始化tableData\r\n    let getCollections = async () => {\r\n      const { data: res } = await this.$http.get(\r\n        \"/collection/\" +\r\n          window.sessionStorage.getItem(\"id\") +\r\n          \"?access_token=\" +\r\n          window.sessionStorage.getItem(\"token\")\r\n      );\r\n      this.tableData = res.data;\r\n    };\r\n    getCollections();\r\n  },\r\n  methods: {\r\n    // 返回主页\r\n    goBack() {\r\n      this.$router.push(\"/home\");\r\n    },\r\n    // 注销\r\n    logout() {\r\n      this.$confirm(\"亲，您确定要退出登录吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        window.sessionStorage.removeItem(\"id\");\r\n        window.sessionStorage.removeItem(\"token\");\r\n        // console.log(window.sessionStorage.length)\r\n        this.goBack();\r\n      });\r\n    },\r\n    // 重新设置密码\r\n    resetUserPwd(formName) {\r\n      this.$refs[formName].validate(async (valid) => {\r\n        if (!valid) return;\r\n        // const { data: res } = await this.$http({\r\n        //   method: \"post\",\r\n        //   url:\r\n        //     \"/user\",\r\n        //   data: {\r\n        //     user_name: this.resetPwdForm.username,\r\n        //     user_password: this.resetPwdForm.password\r\n        //   }\r\n        // });\r\n        // console.log(res)\r\n        // this.$message({\r\n        //   showClose: true,\r\n        //   duration: 0,\r\n        //   type: \"success\",\r\n        //   message: \"修改成功！请重新登录\"\r\n        // });\r\n        // this.$router.push(\"/login\");\r\n      });\r\n    },\r\n    // 重置密码表单\r\n    resetResetPwdForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n\r\n    // 删除收藏书籍\r\n    deleteBookItem(index, row) {\r\n      // 弹窗询问\r\n      this.$confirm(\"是否取消收藏该书籍\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        // 确定按钮逻辑\r\n        // 向后台发送删除请求\r\n        let delCollection = async () => {\r\n          const { data: res } = await this.$http({\r\n            method: \"delete\",\r\n            url:\r\n              \"/collection?access_token=\" +\r\n              window.sessionStorage.getItem(\"token\"),\r\n            data: {\r\n              user_id: this.user.user_id,\r\n              book_id: row.book_id,\r\n            },\r\n          });\r\n          if (res.code === 200) {\r\n            // 删除页面上表单\r\n            this.tableData.splice(index, 1);\r\n            // 删除成功提示\r\n            this.$message({\r\n              type: \"success\",\r\n              message: \"已不再收藏该书籍!\",\r\n            });\r\n          } else {\r\n            // 删除失败提示\r\n            this.$message({\r\n              type: \"error\",\r\n              message: res.data,\r\n            });\r\n          }\r\n        };\r\n        delCollection();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n//主体容器\r\n.page-container {\r\n  line-height: 30px;\r\n}\r\n\r\n//页头容器\r\n.page-header {\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  background-color: rgb(71, 70, 70);\r\n  box-shadow: 0 4px 14px 0 rgb(0 0 0 / 5%);\r\n}\r\n\r\n// 侧边标签栏\r\n.user-tabs-container {\r\n  width: 300px;\r\n  text-align: center;\r\n\r\n  // 头像容器\r\n  .user-avatar-container {\r\n    margin: 10px auto;\r\n  }\r\n\r\n  // 个人信息\r\n  .userItem {\r\n    font-size: 20px;\r\n  }\r\n\r\n  // 收藏部分容器\r\n  .page-main-contain {\r\n    width: 800px;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}