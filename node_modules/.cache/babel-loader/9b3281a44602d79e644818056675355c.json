{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar forEachBail = require(\"./forEachBail\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n\nvar RootsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source hook\n   * @param {Set<string>} roots roots\n   * @param {string | ResolveStepHook} target target hook\n   */\n  function RootsPlugin(source, roots, target) {\n    _classCallCheck(this, RootsPlugin);\n\n    this.roots = Array.from(roots);\n    this.source = source;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(RootsPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"RootsPlugin\", function (request, resolveContext, callback) {\n        var req = request.request;\n        if (!req) return callback();\n        if (!req.startsWith(\"/\")) return callback();\n        forEachBail(_this.roots, function (root, callback) {\n          var path = resolver.join(root, req.slice(1));\n\n          var obj = _objectSpread(_objectSpread({}, request), {}, {\n            path: path,\n            relativePath: request.relativePath && path\n          });\n\n          resolver.doResolve(target, obj, \"root path \".concat(root), resolveContext, callback);\n        }, callback);\n      });\n    }\n  }]);\n\n  return RootsPlugin;\n}();\n\nmodule.exports = RootsPlugin;","map":{"version":3,"names":["forEachBail","require","RootsPlugin","source","roots","target","Array","from","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","startsWith","root","path","join","slice","obj","relativePath","doResolve","module","exports"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/RootsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootsPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source hook\n\t * @param {Set<string>} roots roots\n\t * @param {string | ResolveStepHook} target target hook\n\t */\n\tconstructor(source, roots, target) {\n\t\tthis.roots = Array.from(roots);\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RootsPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\t\t\t\tif (!req.startsWith(\"/\")) return callback();\n\n\t\t\t\tforEachBail(\n\t\t\t\t\tthis.roots,\n\t\t\t\t\t(root, callback) => {\n\t\t\t\t\t\tconst path = resolver.join(root, req.slice(1));\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\trelativePath: request.relativePath && path\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t`root path ${root}`,\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\nmodule.exports = RootsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;AAEA;;AACA;;;IAEMC,W;EACL;AACD;AACA;AACA;AACA;EACC,qBAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;IAAA;;IAClC,KAAKD,KAAL,GAAaE,KAAK,CAACC,IAAN,CAAWH,KAAX,CAAb;IACA,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKE,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;;;WACC,eAAMG,QAAN,EAAgB;MAAA;;MACf,IAAMH,MAAM,GAAGG,QAAQ,CAACC,UAAT,CAAoB,KAAKJ,MAAzB,CAAf;MAEAG,QAAQ,CACNE,OADF,CACU,KAAKP,MADf,EAEEQ,QAFF,CAEW,aAFX,EAE0B,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;QAC/D,IAAMC,GAAG,GAAGH,OAAO,CAACA,OAApB;QACA,IAAI,CAACG,GAAL,EAAU,OAAOD,QAAQ,EAAf;QACV,IAAI,CAACC,GAAG,CAACC,UAAJ,CAAe,GAAf,CAAL,EAA0B,OAAOF,QAAQ,EAAf;QAE1Bd,WAAW,CACV,KAAI,CAACI,KADK,EAEV,UAACa,IAAD,EAAOH,QAAP,EAAoB;UACnB,IAAMI,IAAI,GAAGV,QAAQ,CAACW,IAAT,CAAcF,IAAd,EAAoBF,GAAG,CAACK,KAAJ,CAAU,CAAV,CAApB,CAAb;;UACA,IAAMC,GAAG,mCACLT,OADK;YAERM,IAAI,EAAJA,IAFQ;YAGRI,YAAY,EAAEV,OAAO,CAACU,YAAR,IAAwBJ;UAH9B,EAAT;;UAKAV,QAAQ,CAACe,SAAT,CACClB,MADD,EAECgB,GAFD,sBAGcJ,IAHd,GAICJ,cAJD,EAKCC,QALD;QAOA,CAhBS,EAiBVA,QAjBU,CAAX;MAmBA,CA1BF;IA2BA;;;;;;AAGFU,MAAM,CAACC,OAAP,GAAiBvB,WAAjB"},"metadata":{},"sourceType":"script"}