{"ast":null,"code":"import _asyncToGenerator from \"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var _this = this;\n\n    //   验证输入用户名\n    var validateUserName = function validateUserName(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入用户名\"));\n      } else {\n        callback();\n      }\n    }; // 验证输入密码\n\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请输入密码\"));\n      } else if (value.length < 6 || value.length > 15) {\n        callback(new Error(\"长度在6到15个字符\"));\n      } else {\n        if (_this.registerForm.checkPw !== \"\") {\n          _this.$refs.registerFormRef.validateField(\"checkPw\");\n        }\n\n        callback();\n      }\n    }; // 验证再次输入的密码\n\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== _this.registerForm.password) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else if (value.length < 6 || value.length > 15) {\n        callback(new Error(\"长度在6到15个字符\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        checkPw: \"\"\n      },\n      //   规则验证对象\n      registerFormRules: {\n        username: [{\n          validator: validateUserName,\n          trigger: \"blur\"\n        }],\n        password: [{\n          validator: validatePass,\n          trigger: \"blur\"\n        }],\n        checkPw: [{\n          validator: validatePass2,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    //   注册\n    register: function register(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var _yield$_this2$$http, res;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (valid) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 2:\n                  _context.next = 4;\n                  return _this2.$http({\n                    method: \"post\",\n                    url: \"//user/\" + _this2.registerForm.username + \"/\" + _this2.registerForm.password\n                  });\n\n                case 4:\n                  _yield$_this2$$http = _context.sent;\n                  res = _yield$_this2$$http.data;\n                  window.sessionStorage.setItem(\"id\", res.data.accountnum);\n\n                  _this2.$message({\n                    showClose: true,\n                    duration: 0,\n                    type: \"success\",\n                    message: \"注册成功！您的账号:\" + res.data.accountnum\n                  });\n\n                  _this2.$router.push(\"/login\");\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置注册表单\n    resetregisterForm: function resetregisterForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;EACAA,IADA,kBACA;IAAA;;IACA;IACA;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA;IACA,CANA,CAFA,CASA;;;IACA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CAXA,CAVA,CAsBA;;;IACA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CAVA;;IAYA;MACAC;QACAC,YADA;QAEAC,YAFA;QAGAC;MAHA,CADA;MAMA;MACAC;QACAH;UAAAI;UAAAC;QAAA,EADA;QAEAJ;UAAAG;UAAAC;QAAA,EAFA;QAGAH;UAAAE;UAAAC;QAAA;MAHA;IAPA;EAaA,CAjDA;EAkDAC;IACA;IACAC,QAFA,oBAEAC,QAFA,EAEA;MAAA;;MACA;QAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,IACAC,KADA;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAAA;kBAAA,OAEA;oBACAC,cADA;oBAEAC,KACA,YACA,4BADA,GAEA,GAFA,GAGA;kBANA,EAFA;;gBAAA;kBAAA;kBAEAC,GAFA,uBAEAf,IAFA;kBAUAgB;;kBACA;oBACAC,eADA;oBAEAC,WAFA;oBAGAC,eAHA;oBAIAC;kBAJA;;kBAMA;;gBAjBA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAmBA,CAtBA;IAuBA;IACAC,iBAxBA,6BAwBAV,QAxBA,EAwBA;MACA;IACA;EA1BA;AAlDA","names":["data","callback","registerForm","username","password","checkPw","registerFormRules","validator","trigger","methods","register","formName","valid","method","url","res","window","showClose","duration","type","message","resetregisterForm"],"sourceRoot":"src/components","sources":["Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register_container\">\r\n    <div class=\"register_box\">\r\n      <!-- 头像区域 -->\r\n      <div class=\"avatar_box\">\r\n        <a href=\"/\">\r\n          <img src=\"../assets/logo.png\" alt=\"logo.png\" />\r\n        </a>\r\n      </div>\r\n      <!-- logo名字 -->\r\n      <div class=\"logo_name\">\r\n        <span>NetLib</span>\r\n      </div>\r\n      <!-- 注册表单区域 -->\r\n      <el-form ref=\"registerFormRef\" :model=\"registerForm\" :rules=\"registerFormRules\" status-icon class=\"register_form\">\r\n        <!-- username -->\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"registerForm.username\" prefix-icon=\"el-icon-user-solid\" placeholder=\"username\"></el-input>\r\n        </el-form-item>\r\n        <!-- password -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"registerForm.password\" prefix-icon=\"el-icon-lock\" placeholder=\"password\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <!-- 确认密码 -->\r\n        <el-form-item prop=\"checkPw\">\r\n          <el-input type=\"password\" prefix-icon=\"el-icon-lock\" v-model=\"registerForm.checkPw\"\r\n            placeholder=\"check password\"></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮 -->\r\n        <el-form-item class=\"btns\">\r\n          <el-button type=\"primary\" @click=\"register('registerFormRef')\">注册</el-button>\r\n          <el-button type=\"info\" @click=\"resetregisterForm('registerFormRef')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    //   验证输入用户名\r\n    var validateUserName = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入用户名\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 验证输入密码\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else if (value.length < 6 || value.length > 15) {\r\n        callback(new Error(\"长度在6到15个字符\"));\r\n      } else {\r\n        if (this.registerForm.checkPw !== \"\") {\r\n          this.$refs.registerFormRef.validateField(\"checkPw\");\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    // 验证再次输入的密码\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"请再次输入密码\"));\r\n      } else if (value !== this.registerForm.password) {\r\n        callback(new Error(\"两次输入密码不一致!\"));\r\n      } else if (value.length < 6 || value.length > 15) {\r\n        callback(new Error(\"长度在6到15个字符\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      registerForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checkPw: \"\",\r\n      },\r\n      //   规则验证对象\r\n      registerFormRules: {\r\n        username: [{ validator: validateUserName, trigger: \"blur\" }],\r\n        password: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkPw: [{ validator: validatePass2, trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    //   注册\r\n    register(formName) {\r\n      this.$refs[formName].validate(async (valid) => {\r\n        if (!valid) return;\r\n        const { data: res } = await this.$http({\r\n          method: \"post\",\r\n          url:\r\n            \"//user/\" +\r\n            this.registerForm.username +\r\n            \"/\" +\r\n            this.registerForm.password,\r\n        });\r\n        window.sessionStorage.setItem(\"id\", res.data.accountnum)\r\n        this.$message({\r\n          showClose: true,\r\n          duration: 0,\r\n          type: \"success\",\r\n          message: \"注册成功！您的账号:\" + res.data.accountnum\r\n        });\r\n        this.$router.push(\"/login\");\r\n      });\r\n    },\r\n    // 重置注册表单\r\n    resetregisterForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.register_container {\r\n  height: 100%;\r\n  background-image: url(\"../assets/bg.jpg\");\r\n  background-size: 100% 100%;\r\n}\r\n\r\n.register_box {\r\n  width: 450px;\r\n  height: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  line-height: 30px;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.avatar_box {\r\n  height: 130px;\r\n  widows: 130px;\r\n  border-bottom-right-radius: 50%;\r\n  padding: 10px;\r\n  box-shadow: 0 0 10px #2b4b6b;\r\n  position: absolute;\r\n  left: 0;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(255, 255, 255, 0.3);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-bottom-right-radius: 50%;\r\n  }\r\n}\r\n\r\n.logo_name {\r\n  font-size: 30px;\r\n  font-family: \"Courier New\", Courier, monospace;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin: 5px;\r\n}\r\n\r\n.register_form {\r\n  bottom: 0;\r\n  width: 100%;\r\n  padding: 28px 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.btns {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}