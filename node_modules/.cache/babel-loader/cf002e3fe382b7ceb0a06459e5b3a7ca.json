{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/slicedToArray.js\")[\"default\"];\n\nvar _createForOfIteratorHelper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nvar _inherits = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/inherits.js\")[\"default\"];\n\nvar _createSuper = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createSuper.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.freeze.js\");\n\nrequire(\"core-js/modules/es.map.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.set.js\");\n\nrequire(\"core-js/modules/es.function.bind.js\");\n\nrequire(\"core-js/modules/es.date.now.js\");\n\nrequire(\"core-js/modules/es.date.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/web.timers.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.object.create.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nvar fs = require(\"graceful-fs\");\n\nvar path = require(\"path\");\n\nvar watchEventSource = require(\"./watchEventSource\");\n\nvar EXISTANCE_ONLY_TIME_ENTRY = Object.freeze({});\nvar FS_ACCURACY = 1000;\nvar IS_OSX = require(\"os\").platform() === \"darwin\";\nvar WATCHPACK_POLLING = process.env.WATCHPACK_POLLING;\nvar FORCE_POLLING = \"\".concat(+WATCHPACK_POLLING) === WATCHPACK_POLLING ? +WATCHPACK_POLLING : !!WATCHPACK_POLLING && WATCHPACK_POLLING !== \"false\";\n\nfunction withoutCase(str) {\n  return str.toLowerCase();\n}\n\nfunction needCalls(times, callback) {\n  return function () {\n    if (--times === 0) {\n      return callback();\n    }\n  };\n}\n\nvar Watcher = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Watcher, _EventEmitter);\n\n  var _super = _createSuper(Watcher);\n\n  function Watcher(directoryWatcher, filePath, startTime) {\n    var _this;\n\n    _classCallCheck(this, Watcher);\n\n    _this = _super.call(this);\n    _this.directoryWatcher = directoryWatcher;\n    _this.path = filePath;\n    _this.startTime = startTime && +startTime;\n    return _this;\n  }\n\n  _createClass(Watcher, [{\n    key: \"checkStartTime\",\n    value: function checkStartTime(mtime, initial) {\n      var startTime = this.startTime;\n      if (typeof startTime !== \"number\") return !initial;\n      return startTime <= mtime;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.emit(\"closed\");\n    }\n  }]);\n\n  return Watcher;\n}(EventEmitter);\n\nvar DirectoryWatcher = /*#__PURE__*/function (_EventEmitter2) {\n  _inherits(DirectoryWatcher, _EventEmitter2);\n\n  var _super2 = _createSuper(DirectoryWatcher);\n\n  function DirectoryWatcher(watcherManager, directoryPath, options) {\n    var _this2;\n\n    _classCallCheck(this, DirectoryWatcher);\n\n    _this2 = _super2.call(this);\n\n    if (FORCE_POLLING) {\n      options.poll = FORCE_POLLING;\n    }\n\n    _this2.watcherManager = watcherManager;\n    _this2.options = options;\n    _this2.path = directoryPath; // safeTime is the point in time after which reading is safe to be unchanged\n    // timestamp is a value that should be compared with another timestamp (mtime)\n\n    /** @type {Map<string, { safeTime: number, timestamp: number }} */\n\n    _this2.files = new Map();\n    /** @type {Map<string, number>} */\n\n    _this2.filesWithoutCase = new Map();\n    _this2.directories = new Map();\n    _this2.lastWatchEvent = 0;\n    _this2.initialScan = true;\n\n    _this2.ignored = options.ignored || function () {\n      return false;\n    };\n\n    _this2.nestedWatching = false;\n    _this2.polledWatching = typeof options.poll === \"number\" ? options.poll : options.poll ? 5007 : false;\n    _this2.timeout = undefined;\n    _this2.initialScanRemoved = new Set();\n    _this2.initialScanFinished = undefined;\n    /** @type {Map<string, Set<Watcher>>} */\n\n    _this2.watchers = new Map();\n    _this2.parentWatcher = null;\n    _this2.refs = 0;\n    _this2._activeEvents = new Map();\n    _this2.closed = false;\n    _this2.scanning = false;\n    _this2.scanAgain = false;\n    _this2.scanAgainInitial = false;\n\n    _this2.createWatcher();\n\n    _this2.doScan(true);\n\n    return _this2;\n  }\n\n  _createClass(DirectoryWatcher, [{\n    key: \"createWatcher\",\n    value: function createWatcher() {\n      var _this3 = this;\n\n      try {\n        if (this.polledWatching) {\n          this.watcher = {\n            close: function close() {\n              if (_this3.timeout) {\n                clearTimeout(_this3.timeout);\n                _this3.timeout = undefined;\n              }\n            }\n          };\n        } else {\n          if (IS_OSX) {\n            this.watchInParentDirectory();\n          }\n\n          this.watcher = watchEventSource.watch(this.path);\n          this.watcher.on(\"change\", this.onWatchEvent.bind(this));\n          this.watcher.on(\"error\", this.onWatcherError.bind(this));\n        }\n      } catch (err) {\n        this.onWatcherError(err);\n      }\n    }\n  }, {\n    key: \"forEachWatcher\",\n    value: function forEachWatcher(path, fn) {\n      var watchers = this.watchers.get(withoutCase(path));\n\n      if (watchers !== undefined) {\n        var _iterator = _createForOfIteratorHelper(watchers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var w = _step.value;\n            fn(w);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }, {\n    key: \"setMissing\",\n    value: function setMissing(itemPath, initial, type) {\n      if (this.initialScan) {\n        this.initialScanRemoved.add(itemPath);\n      }\n\n      var oldDirectory = this.directories.get(itemPath);\n\n      if (oldDirectory) {\n        if (this.nestedWatching) oldDirectory.close();\n        this.directories[\"delete\"](itemPath);\n        this.forEachWatcher(itemPath, function (w) {\n          return w.emit(\"remove\", type);\n        });\n\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", itemPath, null, type, initial);\n          });\n        }\n      }\n\n      var oldFile = this.files.get(itemPath);\n\n      if (oldFile) {\n        this.files[\"delete\"](itemPath);\n        var key = withoutCase(itemPath);\n        var count = this.filesWithoutCase.get(key) - 1;\n\n        if (count <= 0) {\n          this.filesWithoutCase[\"delete\"](key);\n          this.forEachWatcher(itemPath, function (w) {\n            return w.emit(\"remove\", type);\n          });\n        } else {\n          this.filesWithoutCase.set(key, count);\n        }\n\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", itemPath, null, type, initial);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setFileTime\",\n    value: function setFileTime(filePath, mtime, initial, ignoreWhenEqual, type) {\n      var now = Date.now();\n      if (this.ignored(filePath)) return;\n      var old = this.files.get(filePath);\n      var safeTime, accuracy;\n\n      if (initial) {\n        safeTime = Math.min(now, mtime) + FS_ACCURACY;\n        accuracy = FS_ACCURACY;\n      } else {\n        safeTime = now;\n        accuracy = 0;\n\n        if (old && old.timestamp === mtime && mtime + FS_ACCURACY < now - 1000) {\n          // We are sure that mtime is untouched\n          // This can be caused by some file attribute change\n          // e. g. when access time has been changed\n          // but the file content is untouched\n          return;\n        }\n      }\n\n      if (ignoreWhenEqual && old && old.timestamp === mtime) return;\n      this.files.set(filePath, {\n        safeTime: safeTime,\n        accuracy: accuracy,\n        timestamp: mtime\n      });\n\n      if (!old) {\n        var key = withoutCase(filePath);\n        var count = this.filesWithoutCase.get(key);\n        this.filesWithoutCase.set(key, (count || 0) + 1);\n\n        if (count !== undefined) {\n          // There is already a file with case-insensitive-equal name\n          // On a case-insensitive filesystem we may miss the renaming\n          // when only casing is changed.\n          // To be sure that our information is correct\n          // we trigger a rescan here\n          this.doScan(false);\n        }\n\n        this.forEachWatcher(filePath, function (w) {\n          if (!initial || w.checkStartTime(safeTime, initial)) {\n            w.emit(\"change\", mtime, type);\n          }\n        });\n      } else if (!initial) {\n        this.forEachWatcher(filePath, function (w) {\n          return w.emit(\"change\", mtime, type);\n        });\n      }\n\n      this.forEachWatcher(this.path, function (w) {\n        if (!initial || w.checkStartTime(safeTime, initial)) {\n          w.emit(\"change\", filePath, safeTime, type, initial);\n        }\n      });\n    }\n  }, {\n    key: \"setDirectory\",\n    value: function setDirectory(directoryPath, birthtime, initial, type) {\n      if (this.ignored(directoryPath)) return;\n\n      if (directoryPath === this.path) {\n        if (!initial) {\n          this.forEachWatcher(this.path, function (w) {\n            return w.emit(\"change\", directoryPath, birthtime, type, initial);\n          });\n        }\n      } else {\n        var old = this.directories.get(directoryPath);\n\n        if (!old) {\n          var now = Date.now();\n\n          if (this.nestedWatching) {\n            this.createNestedWatcher(directoryPath);\n          } else {\n            this.directories.set(directoryPath, true);\n          }\n\n          var safeTime;\n\n          if (initial) {\n            safeTime = Math.min(now, birthtime) + FS_ACCURACY;\n          } else {\n            safeTime = now;\n          }\n\n          this.forEachWatcher(directoryPath, function (w) {\n            if (!initial || w.checkStartTime(safeTime, false)) {\n              w.emit(\"change\", birthtime, type);\n            }\n          });\n          this.forEachWatcher(this.path, function (w) {\n            if (!initial || w.checkStartTime(safeTime, initial)) {\n              w.emit(\"change\", directoryPath, safeTime, type, initial);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"createNestedWatcher\",\n    value: function createNestedWatcher(directoryPath) {\n      var _this4 = this;\n\n      var watcher = this.watcherManager.watchDirectory(directoryPath, 1);\n      watcher.on(\"change\", function (filePath, mtime, type, initial) {\n        _this4.forEachWatcher(_this4.path, function (w) {\n          if (!initial || w.checkStartTime(mtime, initial)) {\n            w.emit(\"change\", filePath, mtime, type, initial);\n          }\n        });\n      });\n      this.directories.set(directoryPath, watcher);\n    }\n  }, {\n    key: \"setNestedWatching\",\n    value: function setNestedWatching(flag) {\n      if (this.nestedWatching !== !!flag) {\n        this.nestedWatching = !!flag;\n\n        if (this.nestedWatching) {\n          var _iterator2 = _createForOfIteratorHelper(this.directories.keys()),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var directory = _step2.value;\n              this.createNestedWatcher(directory);\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        } else {\n          var _iterator3 = _createForOfIteratorHelper(this.directories),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _slicedToArray(_step3.value, 2),\n                  _directory = _step3$value[0],\n                  watcher = _step3$value[1];\n\n              watcher.close();\n              this.directories.set(_directory, true);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"watch\",\n    value: function watch(filePath, startTime) {\n      var _this5 = this;\n\n      var key = withoutCase(filePath);\n      var watchers = this.watchers.get(key);\n\n      if (watchers === undefined) {\n        watchers = new Set();\n        this.watchers.set(key, watchers);\n      }\n\n      this.refs++;\n      var watcher = new Watcher(this, filePath, startTime);\n      watcher.on(\"closed\", function () {\n        if (--_this5.refs <= 0) {\n          _this5.close();\n\n          return;\n        }\n\n        watchers[\"delete\"](watcher);\n\n        if (watchers.size === 0) {\n          _this5.watchers[\"delete\"](key);\n\n          if (_this5.path === filePath) _this5.setNestedWatching(false);\n        }\n      });\n      watchers.add(watcher);\n      var safeTime;\n\n      if (filePath === this.path) {\n        this.setNestedWatching(true);\n        safeTime = this.lastWatchEvent;\n\n        var _iterator4 = _createForOfIteratorHelper(this.files.values()),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var entry = _step4.value;\n            fixupEntryAccuracy(entry);\n            safeTime = Math.max(safeTime, entry.safeTime);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      } else {\n        var _entry = this.files.get(filePath);\n\n        if (_entry) {\n          fixupEntryAccuracy(_entry);\n          safeTime = _entry.safeTime;\n        } else {\n          safeTime = 0;\n        }\n      }\n\n      if (safeTime) {\n        if (safeTime >= startTime) {\n          process.nextTick(function () {\n            if (_this5.closed) return;\n\n            if (filePath === _this5.path) {\n              watcher.emit(\"change\", filePath, safeTime, \"watch (outdated on attach)\", true);\n            } else {\n              watcher.emit(\"change\", safeTime, \"watch (outdated on attach)\", true);\n            }\n          });\n        }\n      } else if (this.initialScan) {\n        if (this.initialScanRemoved.has(filePath)) {\n          process.nextTick(function () {\n            if (_this5.closed) return;\n            watcher.emit(\"remove\");\n          });\n        }\n      } else if (!this.directories.has(filePath) && watcher.checkStartTime(this.initialScanFinished, false)) {\n        process.nextTick(function () {\n          if (_this5.closed) return;\n          watcher.emit(\"initial-missing\", \"watch (missing on attach)\");\n        });\n      }\n\n      return watcher;\n    }\n  }, {\n    key: \"onWatchEvent\",\n    value: function onWatchEvent(eventType, filename) {\n      var _this6 = this;\n\n      if (this.closed) return;\n\n      if (!filename) {\n        // In some cases no filename is provided\n        // This seem to happen on windows\n        // So some event happened but we don't know which file is affected\n        // We have to do a full scan of the directory\n        this.doScan(false);\n        return;\n      }\n\n      var filePath = path.join(this.path, filename);\n      if (this.ignored(filePath)) return;\n\n      if (this._activeEvents.get(filename) === undefined) {\n        this._activeEvents.set(filename, false);\n\n        var checkStats = function checkStats() {\n          if (_this6.closed) return;\n\n          _this6._activeEvents.set(filename, false);\n\n          fs.lstat(filePath, function (err, stats) {\n            if (_this6.closed) return;\n\n            if (_this6._activeEvents.get(filename) === true) {\n              process.nextTick(checkStats);\n              return;\n            }\n\n            _this6._activeEvents[\"delete\"](filename); // ENOENT happens when the file/directory doesn't exist\n            // EPERM happens when the containing directory doesn't exist\n\n\n            if (err) {\n              if (err.code !== \"ENOENT\" && err.code !== \"EPERM\" && err.code !== \"EBUSY\") {\n                _this6.onStatsError(err);\n              } else {\n                if (filename === path.basename(_this6.path)) {\n                  // This may indicate that the directory itself was removed\n                  if (!fs.existsSync(_this6.path)) {\n                    _this6.onDirectoryRemoved(\"stat failed\");\n                  }\n                }\n              }\n            }\n\n            _this6.lastWatchEvent = Date.now();\n\n            if (!stats) {\n              _this6.setMissing(filePath, false, eventType);\n            } else if (stats.isDirectory()) {\n              _this6.setDirectory(filePath, +stats.birthtime || 1, false, eventType);\n            } else if (stats.isFile() || stats.isSymbolicLink()) {\n              if (stats.mtime) {\n                ensureFsAccuracy(stats.mtime);\n              }\n\n              _this6.setFileTime(filePath, +stats.mtime || +stats.ctime || 1, false, false, eventType);\n            }\n          });\n        };\n\n        process.nextTick(checkStats);\n      } else {\n        this._activeEvents.set(filename, true);\n      }\n    }\n  }, {\n    key: \"onWatcherError\",\n    value: function onWatcherError(err) {\n      if (this.closed) return;\n\n      if (err) {\n        if (err.code !== \"EPERM\" && err.code !== \"ENOENT\") {\n          console.error(\"Watchpack Error (watcher): \" + err);\n        }\n\n        this.onDirectoryRemoved(\"watch error\");\n      }\n    }\n  }, {\n    key: \"onStatsError\",\n    value: function onStatsError(err) {\n      if (err) {\n        console.error(\"Watchpack Error (stats): \" + err);\n      }\n    }\n  }, {\n    key: \"onScanError\",\n    value: function onScanError(err) {\n      if (err) {\n        console.error(\"Watchpack Error (initial scan): \" + err);\n      }\n\n      this.onScanFinished();\n    }\n  }, {\n    key: \"onScanFinished\",\n    value: function onScanFinished() {\n      var _this7 = this;\n\n      if (this.polledWatching) {\n        this.timeout = setTimeout(function () {\n          if (_this7.closed) return;\n\n          _this7.doScan(false);\n        }, this.polledWatching);\n      }\n    }\n  }, {\n    key: \"onDirectoryRemoved\",\n    value: function onDirectoryRemoved(reason) {\n      if (this.watcher) {\n        this.watcher.close();\n        this.watcher = null;\n      }\n\n      this.watchInParentDirectory();\n      var type = \"directory-removed (\".concat(reason, \")\");\n\n      var _iterator5 = _createForOfIteratorHelper(this.directories.keys()),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var directory = _step5.value;\n          this.setMissing(directory, null, type);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var _iterator6 = _createForOfIteratorHelper(this.files.keys()),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var file = _step6.value;\n          this.setMissing(file, null, type);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"watchInParentDirectory\",\n    value: function watchInParentDirectory() {\n      var _this8 = this;\n\n      if (!this.parentWatcher) {\n        var parentDir = path.dirname(this.path); // avoid watching in the root directory\n        // removing directories in the root directory is not supported\n\n        if (path.dirname(parentDir) === parentDir) return;\n        this.parentWatcher = this.watcherManager.watchFile(this.path, 1);\n        this.parentWatcher.on(\"change\", function (mtime, type) {\n          if (_this8.closed) return; // On non-osx platforms we don't need this watcher to detect\n          // directory removal, as an EPERM error indicates that\n\n          if ((!IS_OSX || _this8.polledWatching) && _this8.parentWatcher) {\n            _this8.parentWatcher.close();\n\n            _this8.parentWatcher = null;\n          } // Try to create the watcher when parent directory is found\n\n\n          if (!_this8.watcher) {\n            _this8.createWatcher();\n\n            _this8.doScan(false); // directory was created so we emit an event\n\n\n            _this8.forEachWatcher(_this8.path, function (w) {\n              return w.emit(\"change\", _this8.path, mtime, type, false);\n            });\n          }\n        });\n        this.parentWatcher.on(\"remove\", function () {\n          _this8.onDirectoryRemoved(\"parent directory removed\");\n        });\n      }\n    }\n  }, {\n    key: \"doScan\",\n    value: function doScan(initial) {\n      var _this9 = this;\n\n      if (this.scanning) {\n        if (this.scanAgain) {\n          if (!initial) this.scanAgainInitial = false;\n        } else {\n          this.scanAgain = true;\n          this.scanAgainInitial = initial;\n        }\n\n        return;\n      }\n\n      this.scanning = true;\n\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = undefined;\n      }\n\n      process.nextTick(function () {\n        if (_this9.closed) return;\n        fs.readdir(_this9.path, function (err, items) {\n          if (_this9.closed) return;\n\n          if (err) {\n            if (err.code === \"ENOENT\" || err.code === \"EPERM\") {\n              _this9.onDirectoryRemoved(\"scan readdir failed\");\n            } else {\n              _this9.onScanError(err);\n            }\n\n            _this9.initialScan = false;\n            _this9.initialScanFinished = Date.now();\n\n            if (initial) {\n              var _iterator7 = _createForOfIteratorHelper(_this9.watchers.values()),\n                  _step7;\n\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  var watchers = _step7.value;\n\n                  var _iterator8 = _createForOfIteratorHelper(watchers),\n                      _step8;\n\n                  try {\n                    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                      var watcher = _step8.value;\n\n                      if (watcher.checkStartTime(_this9.initialScanFinished, false)) {\n                        watcher.emit(\"initial-missing\", \"scan (parent directory missing in initial scan)\");\n                      }\n                    }\n                  } catch (err) {\n                    _iterator8.e(err);\n                  } finally {\n                    _iterator8.f();\n                  }\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n            }\n\n            if (_this9.scanAgain) {\n              _this9.scanAgain = false;\n\n              _this9.doScan(_this9.scanAgainInitial);\n            } else {\n              _this9.scanning = false;\n            }\n\n            return;\n          }\n\n          var itemPaths = new Set(items.map(function (item) {\n            return path.join(_this9.path, item.normalize(\"NFC\"));\n          }));\n\n          var _iterator9 = _createForOfIteratorHelper(_this9.files.keys()),\n              _step9;\n\n          try {\n            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n              var file = _step9.value;\n\n              if (!itemPaths.has(file)) {\n                _this9.setMissing(file, initial, \"scan (missing)\");\n              }\n            }\n          } catch (err) {\n            _iterator9.e(err);\n          } finally {\n            _iterator9.f();\n          }\n\n          var _iterator10 = _createForOfIteratorHelper(_this9.directories.keys()),\n              _step10;\n\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var directory = _step10.value;\n\n              if (!itemPaths.has(directory)) {\n                _this9.setMissing(directory, initial, \"scan (missing)\");\n              }\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n\n          if (_this9.scanAgain) {\n            // Early repeat of scan\n            _this9.scanAgain = false;\n\n            _this9.doScan(initial);\n\n            return;\n          }\n\n          var itemFinished = needCalls(itemPaths.size + 1, function () {\n            if (_this9.closed) return;\n            _this9.initialScan = false;\n            _this9.initialScanRemoved = null;\n            _this9.initialScanFinished = Date.now();\n\n            if (initial) {\n              var missingWatchers = new Map(_this9.watchers);\n              missingWatchers[\"delete\"](withoutCase(_this9.path));\n\n              var _iterator11 = _createForOfIteratorHelper(itemPaths),\n                  _step11;\n\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var item = _step11.value;\n                  missingWatchers[\"delete\"](withoutCase(item));\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n\n              var _iterator12 = _createForOfIteratorHelper(missingWatchers.values()),\n                  _step12;\n\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  var _watchers = _step12.value;\n\n                  var _iterator13 = _createForOfIteratorHelper(_watchers),\n                      _step13;\n\n                  try {\n                    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                      var _watcher = _step13.value;\n\n                      if (_watcher.checkStartTime(_this9.initialScanFinished, false)) {\n                        _watcher.emit(\"initial-missing\", \"scan (missing in initial scan)\");\n                      }\n                    }\n                  } catch (err) {\n                    _iterator13.e(err);\n                  } finally {\n                    _iterator13.f();\n                  }\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n            }\n\n            if (_this9.scanAgain) {\n              _this9.scanAgain = false;\n\n              _this9.doScan(_this9.scanAgainInitial);\n            } else {\n              _this9.scanning = false;\n\n              _this9.onScanFinished();\n            }\n          });\n\n          var _iterator14 = _createForOfIteratorHelper(itemPaths),\n              _step14;\n\n          try {\n            var _loop = function _loop() {\n              var itemPath = _step14.value;\n              fs.lstat(itemPath, function (err2, stats) {\n                if (_this9.closed) return;\n\n                if (err2) {\n                  if (err2.code === \"ENOENT\" || err2.code === \"EPERM\" || err2.code === \"EACCES\" || err2.code === \"EBUSY\") {\n                    _this9.setMissing(itemPath, initial, \"scan (\" + err2.code + \")\");\n                  } else {\n                    _this9.onScanError(err2);\n                  }\n\n                  itemFinished();\n                  return;\n                }\n\n                if (stats.isFile() || stats.isSymbolicLink()) {\n                  if (stats.mtime) {\n                    ensureFsAccuracy(stats.mtime);\n                  }\n\n                  _this9.setFileTime(itemPath, +stats.mtime || +stats.ctime || 1, initial, true, \"scan (file)\");\n                } else if (stats.isDirectory()) {\n                  if (!initial || !_this9.directories.has(itemPath)) _this9.setDirectory(itemPath, +stats.birthtime || 1, initial, \"scan (dir)\");\n                }\n\n                itemFinished();\n              });\n            };\n\n            for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n              _loop();\n            }\n          } catch (err) {\n            _iterator14.e(err);\n          } finally {\n            _iterator14.f();\n          }\n\n          itemFinished();\n        });\n      });\n    }\n  }, {\n    key: \"getTimes\",\n    value: function getTimes() {\n      var obj = Object.create(null);\n      var safeTime = this.lastWatchEvent;\n\n      var _iterator15 = _createForOfIteratorHelper(this.files),\n          _step15;\n\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _slicedToArray(_step15.value, 2),\n              _file = _step15$value[0],\n              entry = _step15$value[1];\n\n          fixupEntryAccuracy(entry);\n          safeTime = Math.max(safeTime, entry.safeTime);\n          obj[_file] = Math.max(entry.safeTime, entry.timestamp);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n\n      if (this.nestedWatching) {\n        var _iterator16 = _createForOfIteratorHelper(this.directories.values()),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var w = _step16.value;\n            var times = w.directoryWatcher.getTimes();\n\n            for (var _i = 0, _Object$keys = Object.keys(times); _i < _Object$keys.length; _i++) {\n              var file = _Object$keys[_i];\n              var time = times[file];\n              safeTime = Math.max(safeTime, time);\n              obj[file] = time;\n            }\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n\n        obj[this.path] = safeTime;\n      }\n\n      if (!this.initialScan) {\n        var _iterator17 = _createForOfIteratorHelper(this.watchers.values()),\n            _step17;\n\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var watchers = _step17.value;\n\n            var _iterator18 = _createForOfIteratorHelper(watchers),\n                _step18;\n\n            try {\n              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                var watcher = _step18.value;\n                var _path = watcher.path;\n\n                if (!Object.prototype.hasOwnProperty.call(obj, _path)) {\n                  obj[_path] = null;\n                }\n              }\n            } catch (err) {\n              _iterator18.e(err);\n            } finally {\n              _iterator18.f();\n            }\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n      }\n\n      return obj;\n    }\n  }, {\n    key: \"collectTimeInfoEntries\",\n    value: function collectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n      var safeTime = this.lastWatchEvent;\n\n      var _iterator19 = _createForOfIteratorHelper(this.files),\n          _step19;\n\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var _step19$value = _slicedToArray(_step19.value, 2),\n              file = _step19$value[0],\n              entry = _step19$value[1];\n\n          fixupEntryAccuracy(entry);\n          safeTime = Math.max(safeTime, entry.safeTime);\n          fileTimestamps.set(file, entry);\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n\n      if (this.nestedWatching) {\n        var _iterator20 = _createForOfIteratorHelper(this.directories.values()),\n            _step20;\n\n        try {\n          for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n            var w = _step20.value;\n            safeTime = Math.max(safeTime, w.directoryWatcher.collectTimeInfoEntries(fileTimestamps, directoryTimestamps));\n          }\n        } catch (err) {\n          _iterator20.e(err);\n        } finally {\n          _iterator20.f();\n        }\n\n        fileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n        directoryTimestamps.set(this.path, {\n          safeTime: safeTime\n        });\n      } else {\n        var _iterator21 = _createForOfIteratorHelper(this.directories.keys()),\n            _step21;\n\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var dir = _step21.value;\n            // No additional info about this directory\n            // but maybe another DirectoryWatcher has info\n            fileTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n            if (!directoryTimestamps.has(dir)) directoryTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n\n        fileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n        directoryTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n      }\n\n      if (!this.initialScan) {\n        var _iterator22 = _createForOfIteratorHelper(this.watchers.values()),\n            _step22;\n\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var watchers = _step22.value;\n\n            var _iterator23 = _createForOfIteratorHelper(watchers),\n                _step23;\n\n            try {\n              for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                var watcher = _step23.value;\n                var _path2 = watcher.path;\n\n                if (!fileTimestamps.has(_path2)) {\n                  fileTimestamps.set(_path2, null);\n                }\n              }\n            } catch (err) {\n              _iterator23.e(err);\n            } finally {\n              _iterator23.f();\n            }\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n\n      return safeTime;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.closed = true;\n      this.initialScan = false;\n\n      if (this.watcher) {\n        this.watcher.close();\n        this.watcher = null;\n      }\n\n      if (this.nestedWatching) {\n        var _iterator24 = _createForOfIteratorHelper(this.directories.values()),\n            _step24;\n\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var w = _step24.value;\n            w.close();\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n\n        this.directories.clear();\n      }\n\n      if (this.parentWatcher) {\n        this.parentWatcher.close();\n        this.parentWatcher = null;\n      }\n\n      this.emit(\"closed\");\n    }\n  }]);\n\n  return DirectoryWatcher;\n}(EventEmitter);\n\nmodule.exports = DirectoryWatcher;\nmodule.exports.EXISTANCE_ONLY_TIME_ENTRY = EXISTANCE_ONLY_TIME_ENTRY;\n\nfunction fixupEntryAccuracy(entry) {\n  if (entry.accuracy > FS_ACCURACY) {\n    entry.safeTime = entry.safeTime - entry.accuracy + FS_ACCURACY;\n    entry.accuracy = FS_ACCURACY;\n  }\n}\n\nfunction ensureFsAccuracy(mtime) {\n  if (!mtime) return;\n  if (FS_ACCURACY > 1 && mtime % 1 !== 0) FS_ACCURACY = 1;else if (FS_ACCURACY > 10 && mtime % 10 !== 0) FS_ACCURACY = 10;else if (FS_ACCURACY > 100 && mtime % 100 !== 0) FS_ACCURACY = 100;\n}","map":{"version":3,"names":["EventEmitter","require","fs","path","watchEventSource","EXISTANCE_ONLY_TIME_ENTRY","Object","freeze","FS_ACCURACY","IS_OSX","platform","WATCHPACK_POLLING","process","env","FORCE_POLLING","withoutCase","str","toLowerCase","needCalls","times","callback","Watcher","directoryWatcher","filePath","startTime","mtime","initial","emit","DirectoryWatcher","watcherManager","directoryPath","options","poll","files","Map","filesWithoutCase","directories","lastWatchEvent","initialScan","ignored","nestedWatching","polledWatching","timeout","undefined","initialScanRemoved","Set","initialScanFinished","watchers","parentWatcher","refs","_activeEvents","closed","scanning","scanAgain","scanAgainInitial","createWatcher","doScan","watcher","close","clearTimeout","watchInParentDirectory","watch","on","onWatchEvent","bind","onWatcherError","err","fn","get","w","itemPath","type","add","oldDirectory","forEachWatcher","oldFile","key","count","set","ignoreWhenEqual","now","Date","old","safeTime","accuracy","Math","min","timestamp","checkStartTime","birthtime","createNestedWatcher","watchDirectory","flag","keys","directory","size","setNestedWatching","values","entry","fixupEntryAccuracy","max","nextTick","has","eventType","filename","join","checkStats","lstat","stats","code","onStatsError","basename","existsSync","onDirectoryRemoved","setMissing","isDirectory","setDirectory","isFile","isSymbolicLink","ensureFsAccuracy","setFileTime","ctime","console","error","onScanFinished","setTimeout","reason","file","parentDir","dirname","watchFile","readdir","items","onScanError","itemPaths","map","item","normalize","itemFinished","missingWatchers","err2","obj","create","getTimes","time","prototype","hasOwnProperty","call","fileTimestamps","directoryTimestamps","collectTimeInfoEntries","dir","clear","module","exports"],"sources":["D:/Work/Project/LMS/lms/node_modules/watchpack/lib/DirectoryWatcher.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EventEmitter = require(\"events\").EventEmitter;\nconst fs = require(\"graceful-fs\");\nconst path = require(\"path\");\n\nconst watchEventSource = require(\"./watchEventSource\");\n\nconst EXISTANCE_ONLY_TIME_ENTRY = Object.freeze({});\n\nlet FS_ACCURACY = 1000;\n\nconst IS_OSX = require(\"os\").platform() === \"darwin\";\nconst WATCHPACK_POLLING = process.env.WATCHPACK_POLLING;\nconst FORCE_POLLING =\n\t`${+WATCHPACK_POLLING}` === WATCHPACK_POLLING\n\t\t? +WATCHPACK_POLLING\n\t\t: !!WATCHPACK_POLLING && WATCHPACK_POLLING !== \"false\";\n\nfunction withoutCase(str) {\n\treturn str.toLowerCase();\n}\n\nfunction needCalls(times, callback) {\n\treturn function() {\n\t\tif (--times === 0) {\n\t\t\treturn callback();\n\t\t}\n\t};\n}\n\nclass Watcher extends EventEmitter {\n\tconstructor(directoryWatcher, filePath, startTime) {\n\t\tsuper();\n\t\tthis.directoryWatcher = directoryWatcher;\n\t\tthis.path = filePath;\n\t\tthis.startTime = startTime && +startTime;\n\t}\n\n\tcheckStartTime(mtime, initial) {\n\t\tconst startTime = this.startTime;\n\t\tif (typeof startTime !== \"number\") return !initial;\n\t\treturn startTime <= mtime;\n\t}\n\n\tclose() {\n\t\tthis.emit(\"closed\");\n\t}\n}\n\nclass DirectoryWatcher extends EventEmitter {\n\tconstructor(watcherManager, directoryPath, options) {\n\t\tsuper();\n\t\tif (FORCE_POLLING) {\n\t\t\toptions.poll = FORCE_POLLING;\n\t\t}\n\t\tthis.watcherManager = watcherManager;\n\t\tthis.options = options;\n\t\tthis.path = directoryPath;\n\t\t// safeTime is the point in time after which reading is safe to be unchanged\n\t\t// timestamp is a value that should be compared with another timestamp (mtime)\n\t\t/** @type {Map<string, { safeTime: number, timestamp: number }} */\n\t\tthis.files = new Map();\n\t\t/** @type {Map<string, number>} */\n\t\tthis.filesWithoutCase = new Map();\n\t\tthis.directories = new Map();\n\t\tthis.lastWatchEvent = 0;\n\t\tthis.initialScan = true;\n\t\tthis.ignored = options.ignored || (() => false);\n\t\tthis.nestedWatching = false;\n\t\tthis.polledWatching =\n\t\t\ttypeof options.poll === \"number\"\n\t\t\t\t? options.poll\n\t\t\t\t: options.poll\n\t\t\t\t? 5007\n\t\t\t\t: false;\n\t\tthis.timeout = undefined;\n\t\tthis.initialScanRemoved = new Set();\n\t\tthis.initialScanFinished = undefined;\n\t\t/** @type {Map<string, Set<Watcher>>} */\n\t\tthis.watchers = new Map();\n\t\tthis.parentWatcher = null;\n\t\tthis.refs = 0;\n\t\tthis._activeEvents = new Map();\n\t\tthis.closed = false;\n\t\tthis.scanning = false;\n\t\tthis.scanAgain = false;\n\t\tthis.scanAgainInitial = false;\n\n\t\tthis.createWatcher();\n\t\tthis.doScan(true);\n\t}\n\n\tcreateWatcher() {\n\t\ttry {\n\t\t\tif (this.polledWatching) {\n\t\t\t\tthis.watcher = {\n\t\t\t\t\tclose: () => {\n\t\t\t\t\t\tif (this.timeout) {\n\t\t\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\t\t\tthis.timeout = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (IS_OSX) {\n\t\t\t\t\tthis.watchInParentDirectory();\n\t\t\t\t}\n\t\t\t\tthis.watcher = watchEventSource.watch(this.path);\n\t\t\t\tthis.watcher.on(\"change\", this.onWatchEvent.bind(this));\n\t\t\t\tthis.watcher.on(\"error\", this.onWatcherError.bind(this));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis.onWatcherError(err);\n\t\t}\n\t}\n\n\tforEachWatcher(path, fn) {\n\t\tconst watchers = this.watchers.get(withoutCase(path));\n\t\tif (watchers !== undefined) {\n\t\t\tfor (const w of watchers) {\n\t\t\t\tfn(w);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetMissing(itemPath, initial, type) {\n\t\tif (this.initialScan) {\n\t\t\tthis.initialScanRemoved.add(itemPath);\n\t\t}\n\n\t\tconst oldDirectory = this.directories.get(itemPath);\n\t\tif (oldDirectory) {\n\t\t\tif (this.nestedWatching) oldDirectory.close();\n\t\t\tthis.directories.delete(itemPath);\n\n\t\t\tthis.forEachWatcher(itemPath, w => w.emit(\"remove\", type));\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", itemPath, null, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst oldFile = this.files.get(itemPath);\n\t\tif (oldFile) {\n\t\t\tthis.files.delete(itemPath);\n\t\t\tconst key = withoutCase(itemPath);\n\t\t\tconst count = this.filesWithoutCase.get(key) - 1;\n\t\t\tif (count <= 0) {\n\t\t\t\tthis.filesWithoutCase.delete(key);\n\t\t\t\tthis.forEachWatcher(itemPath, w => w.emit(\"remove\", type));\n\t\t\t} else {\n\t\t\t\tthis.filesWithoutCase.set(key, count);\n\t\t\t}\n\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", itemPath, null, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tsetFileTime(filePath, mtime, initial, ignoreWhenEqual, type) {\n\t\tconst now = Date.now();\n\n\t\tif (this.ignored(filePath)) return;\n\n\t\tconst old = this.files.get(filePath);\n\n\t\tlet safeTime, accuracy;\n\t\tif (initial) {\n\t\t\tsafeTime = Math.min(now, mtime) + FS_ACCURACY;\n\t\t\taccuracy = FS_ACCURACY;\n\t\t} else {\n\t\t\tsafeTime = now;\n\t\t\taccuracy = 0;\n\n\t\t\tif (old && old.timestamp === mtime && mtime + FS_ACCURACY < now - 1000) {\n\t\t\t\t// We are sure that mtime is untouched\n\t\t\t\t// This can be caused by some file attribute change\n\t\t\t\t// e. g. when access time has been changed\n\t\t\t\t// but the file content is untouched\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (ignoreWhenEqual && old && old.timestamp === mtime) return;\n\n\t\tthis.files.set(filePath, {\n\t\t\tsafeTime,\n\t\t\taccuracy,\n\t\t\ttimestamp: mtime\n\t\t});\n\n\t\tif (!old) {\n\t\t\tconst key = withoutCase(filePath);\n\t\t\tconst count = this.filesWithoutCase.get(key);\n\t\t\tthis.filesWithoutCase.set(key, (count || 0) + 1);\n\t\t\tif (count !== undefined) {\n\t\t\t\t// There is already a file with case-insensitive-equal name\n\t\t\t\t// On a case-insensitive filesystem we may miss the renaming\n\t\t\t\t// when only casing is changed.\n\t\t\t\t// To be sure that our information is correct\n\t\t\t\t// we trigger a rescan here\n\t\t\t\tthis.doScan(false);\n\t\t\t}\n\n\t\t\tthis.forEachWatcher(filePath, w => {\n\t\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\t\tw.emit(\"change\", mtime, type);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (!initial) {\n\t\t\tthis.forEachWatcher(filePath, w => w.emit(\"change\", mtime, type));\n\t\t}\n\t\tthis.forEachWatcher(this.path, w => {\n\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\tw.emit(\"change\", filePath, safeTime, type, initial);\n\t\t\t}\n\t\t});\n\t}\n\n\tsetDirectory(directoryPath, birthtime, initial, type) {\n\t\tif (this.ignored(directoryPath)) return;\n\t\tif (directoryPath === this.path) {\n\t\t\tif (!initial) {\n\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\tw.emit(\"change\", directoryPath, birthtime, type, initial)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst old = this.directories.get(directoryPath);\n\t\t\tif (!old) {\n\t\t\t\tconst now = Date.now();\n\n\t\t\t\tif (this.nestedWatching) {\n\t\t\t\t\tthis.createNestedWatcher(directoryPath);\n\t\t\t\t} else {\n\t\t\t\t\tthis.directories.set(directoryPath, true);\n\t\t\t\t}\n\n\t\t\t\tlet safeTime;\n\t\t\t\tif (initial) {\n\t\t\t\t\tsafeTime = Math.min(now, birthtime) + FS_ACCURACY;\n\t\t\t\t} else {\n\t\t\t\t\tsafeTime = now;\n\t\t\t\t}\n\n\t\t\t\tthis.forEachWatcher(directoryPath, w => {\n\t\t\t\t\tif (!initial || w.checkStartTime(safeTime, false)) {\n\t\t\t\t\t\tw.emit(\"change\", birthtime, type);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.forEachWatcher(this.path, w => {\n\t\t\t\t\tif (!initial || w.checkStartTime(safeTime, initial)) {\n\t\t\t\t\t\tw.emit(\"change\", directoryPath, safeTime, type, initial);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateNestedWatcher(directoryPath) {\n\t\tconst watcher = this.watcherManager.watchDirectory(directoryPath, 1);\n\t\twatcher.on(\"change\", (filePath, mtime, type, initial) => {\n\t\t\tthis.forEachWatcher(this.path, w => {\n\t\t\t\tif (!initial || w.checkStartTime(mtime, initial)) {\n\t\t\t\t\tw.emit(\"change\", filePath, mtime, type, initial);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis.directories.set(directoryPath, watcher);\n\t}\n\n\tsetNestedWatching(flag) {\n\t\tif (this.nestedWatching !== !!flag) {\n\t\t\tthis.nestedWatching = !!flag;\n\t\t\tif (this.nestedWatching) {\n\t\t\t\tfor (const directory of this.directories.keys()) {\n\t\t\t\t\tthis.createNestedWatcher(directory);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const [directory, watcher] of this.directories) {\n\t\t\t\t\twatcher.close();\n\t\t\t\t\tthis.directories.set(directory, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\twatch(filePath, startTime) {\n\t\tconst key = withoutCase(filePath);\n\t\tlet watchers = this.watchers.get(key);\n\t\tif (watchers === undefined) {\n\t\t\twatchers = new Set();\n\t\t\tthis.watchers.set(key, watchers);\n\t\t}\n\t\tthis.refs++;\n\t\tconst watcher = new Watcher(this, filePath, startTime);\n\t\twatcher.on(\"closed\", () => {\n\t\t\tif (--this.refs <= 0) {\n\t\t\t\tthis.close();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twatchers.delete(watcher);\n\t\t\tif (watchers.size === 0) {\n\t\t\t\tthis.watchers.delete(key);\n\t\t\t\tif (this.path === filePath) this.setNestedWatching(false);\n\t\t\t}\n\t\t});\n\t\twatchers.add(watcher);\n\t\tlet safeTime;\n\t\tif (filePath === this.path) {\n\t\t\tthis.setNestedWatching(true);\n\t\t\tsafeTime = this.lastWatchEvent;\n\t\t\tfor (const entry of this.files.values()) {\n\t\t\t\tfixupEntryAccuracy(entry);\n\t\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\t}\n\t\t} else {\n\t\t\tconst entry = this.files.get(filePath);\n\t\t\tif (entry) {\n\t\t\t\tfixupEntryAccuracy(entry);\n\t\t\t\tsafeTime = entry.safeTime;\n\t\t\t} else {\n\t\t\t\tsafeTime = 0;\n\t\t\t}\n\t\t}\n\t\tif (safeTime) {\n\t\t\tif (safeTime >= startTime) {\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tif (filePath === this.path) {\n\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\"change\",\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\tsafeTime,\n\t\t\t\t\t\t\t\"watch (outdated on attach)\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\"change\",\n\t\t\t\t\t\t\tsafeTime,\n\t\t\t\t\t\t\t\"watch (outdated on attach)\",\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (this.initialScan) {\n\t\t\tif (this.initialScanRemoved.has(filePath)) {\n\t\t\t\tprocess.nextTick(() => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\twatcher.emit(\"remove\");\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (\n\t\t\t!this.directories.has(filePath) &&\n\t\t\twatcher.checkStartTime(this.initialScanFinished, false)\n\t\t) {\n\t\t\tprocess.nextTick(() => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\twatcher.emit(\"initial-missing\", \"watch (missing on attach)\");\n\t\t\t});\n\t\t}\n\t\treturn watcher;\n\t}\n\n\tonWatchEvent(eventType, filename) {\n\t\tif (this.closed) return;\n\t\tif (!filename) {\n\t\t\t// In some cases no filename is provided\n\t\t\t// This seem to happen on windows\n\t\t\t// So some event happened but we don't know which file is affected\n\t\t\t// We have to do a full scan of the directory\n\t\t\tthis.doScan(false);\n\t\t\treturn;\n\t\t}\n\n\t\tconst filePath = path.join(this.path, filename);\n\t\tif (this.ignored(filePath)) return;\n\n\t\tif (this._activeEvents.get(filename) === undefined) {\n\t\t\tthis._activeEvents.set(filename, false);\n\t\t\tconst checkStats = () => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tthis._activeEvents.set(filename, false);\n\t\t\t\tfs.lstat(filePath, (err, stats) => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tif (this._activeEvents.get(filename) === true) {\n\t\t\t\t\t\tprocess.nextTick(checkStats);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._activeEvents.delete(filename);\n\t\t\t\t\t// ENOENT happens when the file/directory doesn't exist\n\t\t\t\t\t// EPERM happens when the containing directory doesn't exist\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\terr.code !== \"ENOENT\" &&\n\t\t\t\t\t\t\terr.code !== \"EPERM\" &&\n\t\t\t\t\t\t\terr.code !== \"EBUSY\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.onStatsError(err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (filename === path.basename(this.path)) {\n\t\t\t\t\t\t\t\t// This may indicate that the directory itself was removed\n\t\t\t\t\t\t\t\tif (!fs.existsSync(this.path)) {\n\t\t\t\t\t\t\t\t\tthis.onDirectoryRemoved(\"stat failed\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.lastWatchEvent = Date.now();\n\t\t\t\t\tif (!stats) {\n\t\t\t\t\t\tthis.setMissing(filePath, false, eventType);\n\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\tthis.setDirectory(\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t+stats.birthtime || 1,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\teventType\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (stats.isFile() || stats.isSymbolicLink()) {\n\t\t\t\t\t\tif (stats.mtime) {\n\t\t\t\t\t\t\tensureFsAccuracy(stats.mtime);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setFileTime(\n\t\t\t\t\t\t\tfilePath,\n\t\t\t\t\t\t\t+stats.mtime || +stats.ctime || 1,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\teventType\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tprocess.nextTick(checkStats);\n\t\t} else {\n\t\t\tthis._activeEvents.set(filename, true);\n\t\t}\n\t}\n\n\tonWatcherError(err) {\n\t\tif (this.closed) return;\n\t\tif (err) {\n\t\t\tif (err.code !== \"EPERM\" && err.code !== \"ENOENT\") {\n\t\t\t\tconsole.error(\"Watchpack Error (watcher): \" + err);\n\t\t\t}\n\t\t\tthis.onDirectoryRemoved(\"watch error\");\n\t\t}\n\t}\n\n\tonStatsError(err) {\n\t\tif (err) {\n\t\t\tconsole.error(\"Watchpack Error (stats): \" + err);\n\t\t}\n\t}\n\n\tonScanError(err) {\n\t\tif (err) {\n\t\t\tconsole.error(\"Watchpack Error (initial scan): \" + err);\n\t\t}\n\t\tthis.onScanFinished();\n\t}\n\n\tonScanFinished() {\n\t\tif (this.polledWatching) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tthis.doScan(false);\n\t\t\t}, this.polledWatching);\n\t\t}\n\t}\n\n\tonDirectoryRemoved(reason) {\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tthis.watchInParentDirectory();\n\t\tconst type = `directory-removed (${reason})`;\n\t\tfor (const directory of this.directories.keys()) {\n\t\t\tthis.setMissing(directory, null, type);\n\t\t}\n\t\tfor (const file of this.files.keys()) {\n\t\t\tthis.setMissing(file, null, type);\n\t\t}\n\t}\n\n\twatchInParentDirectory() {\n\t\tif (!this.parentWatcher) {\n\t\t\tconst parentDir = path.dirname(this.path);\n\t\t\t// avoid watching in the root directory\n\t\t\t// removing directories in the root directory is not supported\n\t\t\tif (path.dirname(parentDir) === parentDir) return;\n\n\t\t\tthis.parentWatcher = this.watcherManager.watchFile(this.path, 1);\n\t\t\tthis.parentWatcher.on(\"change\", (mtime, type) => {\n\t\t\t\tif (this.closed) return;\n\n\t\t\t\t// On non-osx platforms we don't need this watcher to detect\n\t\t\t\t// directory removal, as an EPERM error indicates that\n\t\t\t\tif ((!IS_OSX || this.polledWatching) && this.parentWatcher) {\n\t\t\t\t\tthis.parentWatcher.close();\n\t\t\t\t\tthis.parentWatcher = null;\n\t\t\t\t}\n\t\t\t\t// Try to create the watcher when parent directory is found\n\t\t\t\tif (!this.watcher) {\n\t\t\t\t\tthis.createWatcher();\n\t\t\t\t\tthis.doScan(false);\n\n\t\t\t\t\t// directory was created so we emit an event\n\t\t\t\t\tthis.forEachWatcher(this.path, w =>\n\t\t\t\t\t\tw.emit(\"change\", this.path, mtime, type, false)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.parentWatcher.on(\"remove\", () => {\n\t\t\t\tthis.onDirectoryRemoved(\"parent directory removed\");\n\t\t\t});\n\t\t}\n\t}\n\n\tdoScan(initial) {\n\t\tif (this.scanning) {\n\t\t\tif (this.scanAgain) {\n\t\t\t\tif (!initial) this.scanAgainInitial = false;\n\t\t\t} else {\n\t\t\t\tthis.scanAgain = true;\n\t\t\t\tthis.scanAgainInitial = initial;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.scanning = true;\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = undefined;\n\t\t}\n\t\tprocess.nextTick(() => {\n\t\t\tif (this.closed) return;\n\t\t\tfs.readdir(this.path, (err, items) => {\n\t\t\t\tif (this.closed) return;\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === \"ENOENT\" || err.code === \"EPERM\") {\n\t\t\t\t\t\tthis.onDirectoryRemoved(\"scan readdir failed\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.onScanError(err);\n\t\t\t\t\t}\n\t\t\t\t\tthis.initialScan = false;\n\t\t\t\t\tthis.initialScanFinished = Date.now();\n\t\t\t\t\tif (initial) {\n\t\t\t\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\t\t\t\tif (watcher.checkStartTime(this.initialScanFinished, false)) {\n\t\t\t\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\t\t\t\"initial-missing\",\n\t\t\t\t\t\t\t\t\t\t\"scan (parent directory missing in initial scan)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\t\tthis.doScan(this.scanAgainInitial);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scanning = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemPaths = new Set(\n\t\t\t\t\titems.map(item => path.join(this.path, item.normalize(\"NFC\")))\n\t\t\t\t);\n\t\t\t\tfor (const file of this.files.keys()) {\n\t\t\t\t\tif (!itemPaths.has(file)) {\n\t\t\t\t\t\tthis.setMissing(file, initial, \"scan (missing)\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const directory of this.directories.keys()) {\n\t\t\t\t\tif (!itemPaths.has(directory)) {\n\t\t\t\t\t\tthis.setMissing(directory, initial, \"scan (missing)\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t// Early repeat of scan\n\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\tthis.doScan(initial);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemFinished = needCalls(itemPaths.size + 1, () => {\n\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\tthis.initialScan = false;\n\t\t\t\t\tthis.initialScanRemoved = null;\n\t\t\t\t\tthis.initialScanFinished = Date.now();\n\t\t\t\t\tif (initial) {\n\t\t\t\t\t\tconst missingWatchers = new Map(this.watchers);\n\t\t\t\t\t\tmissingWatchers.delete(withoutCase(this.path));\n\t\t\t\t\t\tfor (const item of itemPaths) {\n\t\t\t\t\t\t\tmissingWatchers.delete(withoutCase(item));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (const watchers of missingWatchers.values()) {\n\t\t\t\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\t\t\t\tif (watcher.checkStartTime(this.initialScanFinished, false)) {\n\t\t\t\t\t\t\t\t\twatcher.emit(\n\t\t\t\t\t\t\t\t\t\t\"initial-missing\",\n\t\t\t\t\t\t\t\t\t\t\"scan (missing in initial scan)\"\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (this.scanAgain) {\n\t\t\t\t\t\tthis.scanAgain = false;\n\t\t\t\t\t\tthis.doScan(this.scanAgainInitial);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scanning = false;\n\t\t\t\t\t\tthis.onScanFinished();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfor (const itemPath of itemPaths) {\n\t\t\t\t\tfs.lstat(itemPath, (err2, stats) => {\n\t\t\t\t\t\tif (this.closed) return;\n\t\t\t\t\t\tif (err2) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\terr2.code === \"ENOENT\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EPERM\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EACCES\" ||\n\t\t\t\t\t\t\t\terr2.code === \"EBUSY\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthis.setMissing(itemPath, initial, \"scan (\" + err2.code + \")\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.onScanError(err2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\titemFinished();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stats.isFile() || stats.isSymbolicLink()) {\n\t\t\t\t\t\t\tif (stats.mtime) {\n\t\t\t\t\t\t\t\tensureFsAccuracy(stats.mtime);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setFileTime(\n\t\t\t\t\t\t\t\titemPath,\n\t\t\t\t\t\t\t\t+stats.mtime || +stats.ctime || 1,\n\t\t\t\t\t\t\t\tinitial,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\"scan (file)\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\t\tif (!initial || !this.directories.has(itemPath))\n\t\t\t\t\t\t\t\tthis.setDirectory(\n\t\t\t\t\t\t\t\t\titemPath,\n\t\t\t\t\t\t\t\t\t+stats.birthtime || 1,\n\t\t\t\t\t\t\t\t\tinitial,\n\t\t\t\t\t\t\t\t\t\"scan (dir)\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\titemFinished();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\titemFinished();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetTimes() {\n\t\tconst obj = Object.create(null);\n\t\tlet safeTime = this.lastWatchEvent;\n\t\tfor (const [file, entry] of this.files) {\n\t\t\tfixupEntryAccuracy(entry);\n\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\tobj[file] = Math.max(entry.safeTime, entry.timestamp);\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tconst times = w.directoryWatcher.getTimes();\n\t\t\t\tfor (const file of Object.keys(times)) {\n\t\t\t\t\tconst time = times[file];\n\t\t\t\t\tsafeTime = Math.max(safeTime, time);\n\t\t\t\t\tobj[file] = time;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj[this.path] = safeTime;\n\t\t}\n\t\tif (!this.initialScan) {\n\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\tconst path = watcher.path;\n\t\t\t\t\tif (!Object.prototype.hasOwnProperty.call(obj, path)) {\n\t\t\t\t\t\tobj[path] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\tcollectTimeInfoEntries(fileTimestamps, directoryTimestamps) {\n\t\tlet safeTime = this.lastWatchEvent;\n\t\tfor (const [file, entry] of this.files) {\n\t\t\tfixupEntryAccuracy(entry);\n\t\t\tsafeTime = Math.max(safeTime, entry.safeTime);\n\t\t\tfileTimestamps.set(file, entry);\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tsafeTime = Math.max(\n\t\t\t\t\tsafeTime,\n\t\t\t\t\tw.directoryWatcher.collectTimeInfoEntries(\n\t\t\t\t\t\tfileTimestamps,\n\t\t\t\t\t\tdirectoryTimestamps\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tfileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\tdirectoryTimestamps.set(this.path, {\n\t\t\t\tsafeTime\n\t\t\t});\n\t\t} else {\n\t\t\tfor (const dir of this.directories.keys()) {\n\t\t\t\t// No additional info about this directory\n\t\t\t\t// but maybe another DirectoryWatcher has info\n\t\t\t\tfileTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\t\tif (!directoryTimestamps.has(dir))\n\t\t\t\t\tdirectoryTimestamps.set(dir, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\t}\n\t\t\tfileTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t\tdirectoryTimestamps.set(this.path, EXISTANCE_ONLY_TIME_ENTRY);\n\t\t}\n\t\tif (!this.initialScan) {\n\t\t\tfor (const watchers of this.watchers.values()) {\n\t\t\t\tfor (const watcher of watchers) {\n\t\t\t\t\tconst path = watcher.path;\n\t\t\t\t\tif (!fileTimestamps.has(path)) {\n\t\t\t\t\t\tfileTimestamps.set(path, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn safeTime;\n\t}\n\n\tclose() {\n\t\tthis.closed = true;\n\t\tthis.initialScan = false;\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t\tif (this.nestedWatching) {\n\t\t\tfor (const w of this.directories.values()) {\n\t\t\t\tw.close();\n\t\t\t}\n\t\t\tthis.directories.clear();\n\t\t}\n\t\tif (this.parentWatcher) {\n\t\t\tthis.parentWatcher.close();\n\t\t\tthis.parentWatcher = null;\n\t\t}\n\t\tthis.emit(\"closed\");\n\t}\n}\n\nmodule.exports = DirectoryWatcher;\nmodule.exports.EXISTANCE_ONLY_TIME_ENTRY = EXISTANCE_ONLY_TIME_ENTRY;\n\nfunction fixupEntryAccuracy(entry) {\n\tif (entry.accuracy > FS_ACCURACY) {\n\t\tentry.safeTime = entry.safeTime - entry.accuracy + FS_ACCURACY;\n\t\tentry.accuracy = FS_ACCURACY;\n\t}\n}\n\nfunction ensureFsAccuracy(mtime) {\n\tif (!mtime) return;\n\tif (FS_ACCURACY > 1 && mtime % 1 !== 0) FS_ACCURACY = 1;\n\telse if (FS_ACCURACY > 10 && mtime % 10 !== 0) FS_ACCURACY = 10;\n\telse if (FS_ACCURACY > 100 && mtime % 100 !== 0) FS_ACCURACY = 100;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}