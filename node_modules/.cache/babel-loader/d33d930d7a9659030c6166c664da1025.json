{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nvar _objectSpread = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.array.index-of.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nvar namespaceStartCharCode = \"@\".charCodeAt(0);\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | ResolveStepHook} target target\n   */\n  function JoinRequestPartPlugin(source, target) {\n    _classCallCheck(this, JoinRequestPartPlugin);\n\n    this.source = source;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(JoinRequestPartPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"JoinRequestPartPlugin\", function (request, resolveContext, callback) {\n        var req = request.request || \"\";\n        var i = req.indexOf(\"/\", 3);\n\n        if (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n          i = req.indexOf(\"/\", i + 1);\n        }\n\n        var moduleName, remainingRequest, fullySpecified;\n\n        if (i < 0) {\n          moduleName = req;\n          remainingRequest = \".\";\n          fullySpecified = false;\n        } else {\n          moduleName = req.slice(0, i);\n          remainingRequest = \".\" + req.slice(i);\n          fullySpecified = request.fullySpecified;\n        }\n\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: resolver.join(request.path, moduleName),\n          relativePath: request.relativePath && resolver.join(request.relativePath, moduleName),\n          request: remainingRequest,\n          fullySpecified: fullySpecified\n        });\n\n        resolver.doResolve(target, obj, null, resolveContext, callback);\n      });\n    }\n  }]);\n\n  return JoinRequestPartPlugin;\n}();","map":{"version":3,"names":["namespaceStartCharCode","charCodeAt","module","exports","source","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","i","indexOf","moduleName","remainingRequest","fullySpecified","slice","obj","path","join","relativePath","doResolve"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/JoinRequestPartPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nconst namespaceStartCharCode = \"@\".charCodeAt(0);\n\nmodule.exports = class JoinRequestPartPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"JoinRequestPartPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst req = request.request || \"\";\n\t\t\t\t\tlet i = req.indexOf(\"/\", 3);\n\n\t\t\t\t\tif (i >= 0 && req.charCodeAt(2) === namespaceStartCharCode) {\n\t\t\t\t\t\ti = req.indexOf(\"/\", i + 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet moduleName, remainingRequest, fullySpecified;\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tmoduleName = req;\n\t\t\t\t\t\tremainingRequest = \".\";\n\t\t\t\t\t\tfullySpecified = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmoduleName = req.slice(0, i);\n\t\t\t\t\t\tremainingRequest = \".\" + req.slice(i);\n\t\t\t\t\t\tfullySpecified = request.fullySpecified;\n\t\t\t\t\t}\n\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: resolver.join(request.path, moduleName),\n\t\t\t\t\t\trelativePath:\n\t\t\t\t\t\t\trequest.relativePath &&\n\t\t\t\t\t\t\tresolver.join(request.relativePath, moduleName),\n\t\t\t\t\t\trequest: remainingRequest,\n\t\t\t\t\t\tfullySpecified\n\t\t\t\t\t};\n\t\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,sBAAsB,GAAG,IAAIC,UAAJ,CAAe,CAAf,CAA/B;;AAEAC,MAAM,CAACC,OAAP;EACC;AACD;AACA;AACA;EACC,+BAAYC,MAAZ,EAAoBC,MAApB,EAA4B;IAAA;;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;EAED;AACD;AACA;AACA;;;EAbA;IAAA;IAAA,OAcC,eAAMC,QAAN,EAAgB;MACf,IAAMD,MAAM,GAAGC,QAAQ,CAACC,UAAT,CAAoB,KAAKF,MAAzB,CAAf;MACAC,QAAQ,CACNE,OADF,CACU,KAAKJ,MADf,EAEEK,QAFF,CAGE,uBAHF,EAIE,UAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,EAAuC;QACtC,IAAMC,GAAG,GAAGH,OAAO,CAACA,OAAR,IAAmB,EAA/B;QACA,IAAII,CAAC,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiB,CAAjB,CAAR;;QAEA,IAAID,CAAC,IAAI,CAAL,IAAUD,GAAG,CAACZ,UAAJ,CAAe,CAAf,MAAsBD,sBAApC,EAA4D;UAC3Dc,CAAC,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,EAAiBD,CAAC,GAAG,CAArB,CAAJ;QACA;;QAED,IAAIE,UAAJ,EAAgBC,gBAAhB,EAAkCC,cAAlC;;QACA,IAAIJ,CAAC,GAAG,CAAR,EAAW;UACVE,UAAU,GAAGH,GAAb;UACAI,gBAAgB,GAAG,GAAnB;UACAC,cAAc,GAAG,KAAjB;QACA,CAJD,MAIO;UACNF,UAAU,GAAGH,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAaL,CAAb,CAAb;UACAG,gBAAgB,GAAG,MAAMJ,GAAG,CAACM,KAAJ,CAAUL,CAAV,CAAzB;UACAI,cAAc,GAAGR,OAAO,CAACQ,cAAzB;QACA;;QACD,IAAME,GAAG,mCACLV,OADK;UAERW,IAAI,EAAEf,QAAQ,CAACgB,IAAT,CAAcZ,OAAO,CAACW,IAAtB,EAA4BL,UAA5B,CAFE;UAGRO,YAAY,EACXb,OAAO,CAACa,YAAR,IACAjB,QAAQ,CAACgB,IAAT,CAAcZ,OAAO,CAACa,YAAtB,EAAoCP,UAApC,CALO;UAMRN,OAAO,EAAEO,gBAND;UAORC,cAAc,EAAdA;QAPQ,EAAT;;QASAZ,QAAQ,CAACkB,SAAT,CAAmBnB,MAAnB,EAA2Be,GAA3B,EAAgC,IAAhC,EAAsCT,cAAtC,EAAsDC,QAAtD;MACA,CAhCH;IAkCA;EAlDF;;EAAA;AAAA"},"metadata":{},"sourceType":"script"}