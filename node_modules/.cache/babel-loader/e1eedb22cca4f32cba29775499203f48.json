{"ast":null,"code":"var _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.object.create.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.error.to-string.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.array.join.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.json.stringify.js\");\n\nrequire(\"core-js/modules/es.array.index-of.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.date.to-json.js\");\n\nrequire(\"core-js/modules/web.url.to-json.js\");\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nvar base64VLQ = require(\"./base64-vlq\");\n\nvar util = require(\"./util\");\n\nvar ArraySet = require(\"./array-set\").ArraySet;\n\nvar MappingList = require(\"./mapping-list\").MappingList;\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\n\n\nvar SourceMapGenerator = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function SourceMapGenerator(aArgs) {\n    _classCallCheck(this, SourceMapGenerator);\n\n    if (!aArgs) {\n      aArgs = {};\n    }\n\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n\n\n  _createClass(SourceMapGenerator, [{\n    key: \"addMapping\",\n    value:\n    /**\n     * Add a single mapping from original source line and column to the generated\n     * source's line and column for this source map being created. The mapping\n     * object should have the following properties:\n     *\n     *   - generated: An object with the generated line and column positions.\n     *   - original: An object with the original line and column positions.\n     *   - source: The original source file (relative to the sourceRoot).\n     *   - name: An optional original token name for this mapping.\n     */\n    function addMapping(aArgs) {\n      var generated = util.getArg(aArgs, \"generated\");\n      var original = util.getArg(aArgs, \"original\", null);\n      var source = util.getArg(aArgs, \"source\", null);\n      var name = util.getArg(aArgs, \"name\", null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null) {\n        source = String(source);\n\n        if (!this._sources.has(source)) {\n          this._sources.add(source);\n        }\n      }\n\n      if (name != null) {\n        name = String(name);\n\n        if (!this._names.has(name)) {\n          this._names.add(name);\n        }\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    }\n    /**\n     * Set the source content for a source file.\n     */\n\n  }, {\n    key: \"setSourceContent\",\n    value: function setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = Object.create(null);\n        }\n\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    }\n    /**\n     * Applies the mappings of a sub-source-map for a specific source file to the\n     * source map being generated. Each mapping to the supplied source file is\n     * rewritten using the supplied source map. Note: The resolution for the\n     * resulting mappings is the minimium of this map and the supplied map.\n     *\n     * @param aSourceMapConsumer The source map to be applied.\n     * @param aSourceFile Optional. The filename of the source file.\n     *        If omitted, SourceMapConsumer's file property will be used.\n     * @param aSourceMapPath Optional. The dirname of the path to the source map\n     *        to be applied. If relative, it is relative to the SourceMapConsumer.\n     *        This parameter is needed when the two source maps aren't in the same\n     *        directory, and the source map to be applied contains relative source\n     *        paths. If so, those relative source paths need to be rewritten\n     *        relative to the SourceMapGenerator.\n     */\n\n  }, {\n    key: \"applySourceMap\",\n    value: function applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile; // If aSourceFile is omitted, we will use the file property of the SourceMap\n\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" + 'or the source map\\'s \"file\" property. Both were omitted.');\n        }\n\n        sourceFile = aSourceMapConsumer.file;\n      }\n\n      var sourceRoot = this._sourceRoot; // Make \"sourceFile\" relative if an absolute Url is passed.\n\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      } // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n\n\n      var newSources = this._mappings.toArray().length > 0 ? new ArraySet() : this._sources;\n      var newNames = new ArraySet(); // Find mappings for the \"sourceFile\"\n\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source);\n            }\n\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n      }, this);\n\n      this._sources = newSources;\n      this._names = newNames; // Copy sourcesContents of applied map.\n\n      aSourceMapConsumer.sources.forEach(function (srcFile) {\n        var content = aSourceMapConsumer.sourceContentFor(srcFile);\n\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            srcFile = util.join(aSourceMapPath, srcFile);\n          }\n\n          if (sourceRoot != null) {\n            srcFile = util.relative(sourceRoot, srcFile);\n          }\n\n          this.setSourceContent(srcFile, content);\n        }\n      }, this);\n    }\n    /**\n     * A mapping can have one of the three levels of data:\n     *\n     *   1. Just the generated position.\n     *   2. The Generated position, original position, and original source.\n     *   3. Generated and original position, original source, as well as a name\n     *      token.\n     *\n     * To maintain consistency, we validate that any new mapping being added falls\n     * in to one of these categories.\n     */\n\n  }, {\n    key: \"_validateMapping\",\n    value: function _validateMapping(aGenerated, aOriginal, aSource, aName) {\n      // When aOriginal is truthy but has empty values for .line and .column,\n      // it is most likely a programmer error. In this case we throw a very\n      // specific error message to try to guide them the right way.\n      // For example: https://github.com/Polymer/polymer-bundler/pull/519\n      if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\"original.line and original.column are not numbers -- you probably meant to omit \" + \"the original mapping entirely and only map the generated position. If so, pass \" + \"null for the original mapping instead of an object with empty or null values.\");\n      }\n\n      if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {// Case 1.\n      } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {// Cases 2 and 3.\n      } else {\n        throw new Error(\"Invalid mapping: \" + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    }\n    /**\n     * Serialize the accumulated mappings in to the stream of base 64 VLQs\n     * specified by the source map format.\n     */\n\n  }, {\n    key: \"_serializeMappings\",\n    value: function _serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = \"\";\n      var next;\n      var mapping;\n      var nameIdx;\n      var sourceIdx;\n\n      var mappings = this._mappings.toArray();\n\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n        next = \"\";\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            next += \";\";\n            previousGeneratedLine++;\n          }\n        } else if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n\n          next += \",\";\n        }\n\n        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          sourceIdx = this._sources.indexOf(mapping.source);\n          next += base64VLQ.encode(sourceIdx - previousSource);\n          previousSource = sourceIdx; // lines are stored 0-based in SourceMap spec version 3\n\n          next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n          next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            nameIdx = this._names.indexOf(mapping.name);\n            next += base64VLQ.encode(nameIdx - previousName);\n            previousName = nameIdx;\n          }\n        }\n\n        result += next;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_generateSourcesContent\",\n    value: function _generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n      }, this);\n    }\n    /**\n     * Externalize the source map.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n\n      if (this._file != null) {\n        map.file = this._file;\n      }\n\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    }\n    /**\n     * Render the source map being generated to a string.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify(this.toJSON());\n    }\n  }], [{\n    key: \"fromSourceMap\",\n    value: function fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var sourceRelative = sourceFile;\n\n        if (sourceRoot !== null) {\n          sourceRelative = util.relative(sourceRoot, sourceFile);\n        }\n\n        if (!generator._sources.has(sourceRelative)) {\n          generator._sources.add(sourceRelative);\n        }\n\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    }\n  }]);\n\n  return SourceMapGenerator;\n}();\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;","map":{"version":3,"names":["base64VLQ","require","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","generated","original","source","name","_validateMapping","String","has","add","generatedLine","line","generatedColumn","column","originalLine","originalColumn","aSourceFile","aSourceContent","relative","Object","create","toSetString","keys","length","aSourceMapConsumer","aSourceMapPath","sourceFile","file","Error","sourceRoot","newSources","toArray","newNames","unsortedForEach","mapping","originalPositionFor","join","sources","forEach","srcFile","content","sourceContentFor","setSourceContent","aGenerated","aOriginal","aSource","aName","JSON","stringify","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","next","nameIdx","sourceIdx","mappings","i","len","compareByGeneratedPositionsInflated","encode","indexOf","aSources","aSourceRoot","map","key","prototype","hasOwnProperty","call","version","_version","names","_serializeMappings","sourcesContent","_generateSourcesContent","toJSON","generator","eachMapping","newMapping","addMapping","sourceRelative","exports"],"sources":["D:/Work/Project/LMS/lms/node_modules/terser/node_modules/source-map/lib/source-map-generator.js"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nconst base64VLQ = require(\"./base64-vlq\");\nconst util = require(\"./util\");\nconst ArraySet = require(\"./array-set\").ArraySet;\nconst MappingList = require(\"./mapping-list\").MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nclass SourceMapGenerator {\n  constructor(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, \"file\", null);\n    this._sourceRoot = util.getArg(aArgs, \"sourceRoot\", null);\n    this._skipValidation = util.getArg(aArgs, \"skipValidation\", false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  static fromSourceMap(aSourceMapConsumer) {\n    const sourceRoot = aSourceMapConsumer.sourceRoot;\n    const generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function(mapping) {\n      const newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function(sourceFile) {\n      let sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      const content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  addMapping(aArgs) {\n    const generated = util.getArg(aArgs, \"generated\");\n    const original = util.getArg(aArgs, \"original\", null);\n    let source = util.getArg(aArgs, \"source\", null);\n    let name = util.getArg(aArgs, \"name\", null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source,\n      name\n    });\n  }\n\n  /**\n   * Set the source content for a source file.\n   */\n  setSourceContent(aSourceFile, aSourceContent) {\n    let source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  }\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    let sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          \"SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, \" +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    const sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    const newSources = this._mappings.toArray().length > 0\n      ? new ArraySet()\n      : this._sources;\n    const newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function(mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        const original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      const source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      const name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function(srcFile) {\n      const content = aSourceMapConsumer.sourceContentFor(srcFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          srcFile = util.join(aSourceMapPath, srcFile);\n        }\n        if (sourceRoot != null) {\n          srcFile = util.relative(sourceRoot, srcFile);\n        }\n        this.setSourceContent(srcFile, content);\n      }\n    }, this);\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  _validateMapping(aGenerated, aOriginal, aSource, aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== \"number\" && typeof aOriginal.column !== \"number\") {\n        throw new Error(\n            \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n        );\n    }\n\n    if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n\n    } else if (aGenerated && \"line\" in aGenerated && \"column\" in aGenerated\n             && aOriginal && \"line\" in aOriginal && \"column\" in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0;\n    let previousGeneratedLine = 1;\n    let previousOriginalColumn = 0;\n    let previousOriginalLine = 0;\n    let previousName = 0;\n    let previousSource = 0;\n    let result = \"\";\n    let next;\n    let mapping;\n    let nameIdx;\n    let sourceIdx;\n\n    const mappings = this._mappings.toArray();\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = \"\";\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\";\n          previousGeneratedLine++;\n        }\n      } else if (i > 0) {\n        if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue;\n        }\n        next += \",\";\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  }\n\n  _generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      const key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nSourceMapGenerator.prototype._version = 3;\nexports.SourceMapGenerator = SourceMapGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}