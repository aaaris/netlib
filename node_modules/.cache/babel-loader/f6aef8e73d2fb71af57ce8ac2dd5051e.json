{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _objectSpread = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/objectSpread2.js\")[\"default\"];\n\nvar _typeof = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"];\n\nvar _classCallCheck = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/classCallCheck.js\")[\"default\"];\n\nvar _createClass = require(\"D:/Work/Project/LMS/lms/node_modules/@babel/runtime/helpers/createClass.js\")[\"default\"];\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nvar DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nvar getInnerRequest = require(\"./getInnerRequest\");\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | Array<string>} field field\n   * @param {string | ResolveStepHook} target target\n   */\n  function AliasFieldPlugin(source, field, target) {\n    _classCallCheck(this, AliasFieldPlugin);\n\n    this.source = source;\n    this.field = field;\n    this.target = target;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  _createClass(AliasFieldPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"AliasFieldPlugin\", function (request, resolveContext, callback) {\n        if (!request.descriptionFileData) return callback();\n        var innerRequest = getInnerRequest(resolver, request);\n        if (!innerRequest) return callback();\n        var fieldData = DescriptionFileUtils.getField(request.descriptionFileData, _this.field);\n\n        if (fieldData === null || _typeof(fieldData) !== \"object\") {\n          if (resolveContext.log) resolveContext.log(\"Field '\" + _this.field + \"' doesn't contain a valid alias configuration\");\n          return callback();\n        }\n\n        var data = Object.prototype.hasOwnProperty.call(fieldData, innerRequest) ? fieldData[innerRequest] : innerRequest.startsWith(\"./\") ? fieldData[innerRequest.slice(2)] : undefined;\n        if (data === innerRequest) return callback();\n        if (data === undefined) return callback();\n\n        if (data === false) {\n          /** @type {ResolveRequest} */\n          var ignoreObj = _objectSpread(_objectSpread({}, request), {}, {\n            path: false\n          });\n\n          if (typeof resolveContext[\"yield\"] === \"function\") {\n            resolveContext[\"yield\"](ignoreObj);\n            return callback(null, null);\n          }\n\n          return callback(null, ignoreObj);\n        }\n\n        var obj = _objectSpread(_objectSpread({}, request), {}, {\n          path: request.descriptionFileRoot,\n          request: data,\n          fullySpecified: false\n        });\n\n        resolver.doResolve(target, obj, \"aliased from description file \" + request.descriptionFilePath + \" with mapping '\" + innerRequest + \"' to '\" + data + \"'\", resolveContext, function (err, result) {\n          if (err) return callback(err); // Don't allow other aliasing or raw request\n\n          if (result === undefined) return callback(null, null);\n          callback(null, result);\n        });\n      });\n    }\n  }]);\n\n  return AliasFieldPlugin;\n}();","map":{"version":3,"names":["DescriptionFileUtils","require","getInnerRequest","module","exports","source","field","target","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileData","innerRequest","fieldData","getField","log","data","Object","prototype","hasOwnProperty","call","startsWith","slice","undefined","ignoreObj","path","obj","descriptionFileRoot","fullySpecified","doResolve","descriptionFilePath","err","result"],"sources":["D:/Work/Project/LMS/lms/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AliasFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} field field\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, field, target) {\n\t\tthis.source = source;\n\t\tthis.field = field;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.descriptionFileData) return callback();\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst fieldData = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.field\n\t\t\t\t);\n\t\t\t\tif (fieldData === null || typeof fieldData !== \"object\") {\n\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\"Field '\" +\n\t\t\t\t\t\t\t\tthis.field +\n\t\t\t\t\t\t\t\t\"' doesn't contain a valid alias configuration\"\n\t\t\t\t\t\t);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst data = Object.prototype.hasOwnProperty.call(\n\t\t\t\t\tfieldData,\n\t\t\t\t\tinnerRequest\n\t\t\t\t)\n\t\t\t\t\t? fieldData[innerRequest]\n\t\t\t\t\t: innerRequest.startsWith(\"./\")\n\t\t\t\t\t? fieldData[innerRequest.slice(2)]\n\t\t\t\t\t: undefined;\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t};\n\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data,\n\t\t\t\t\tfullySpecified: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}